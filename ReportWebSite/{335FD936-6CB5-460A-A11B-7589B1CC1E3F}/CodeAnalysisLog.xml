<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2019\enterprise\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="16.0">
 <Targets>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Code.dll">
   <Modules>
    <Module Name="app_code.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="ArchiverSql" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateArendaArchiveRecord(System.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Data.SqlClient.SqlTransaction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="ArchiverSql.cs" Line="33">Object 'r' can be disposed more than once in method 'ArchiverSql.CreateArendaArchiveRecord(SqlConnection, int, string, SqlTransaction)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 33</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateBalansArchiveRecord(System.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Data.SqlClient.SqlTransaction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="ArchiverSql.cs" Line="125">Object 'r' can be disposed more than once in method 'ArchiverSql.CreateBalansArchiveRecord(SqlConnection, int, string, SqlTransaction)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 125</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="ArchiverSql.cs" Line="220">Object 'r' can be disposed more than once in method 'ArchiverSql.CreateBalansArchiveRecord(SqlConnection, int, string, SqlTransaction)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 220</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="ArchiverSql.cs" Line="257">Object 'r' can be disposed more than once in method 'ArchiverSql.CreateBalansArchiveRecord(SqlConnection, int, string, SqlTransaction)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 257</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BalansTransferUtils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CommitBalansObjectChanges(System.Security.Principal.IPrincipal,System.Int32,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="BalansTransferUtils.cs" Line="447">Object 'reader' can be disposed more than once in method 'BalansTransferUtils.CommitBalansObjectChanges(IPrincipal, int, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 447</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNewAktID(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="BalansTransferUtils.cs" Line="804">Object 'reader' can be disposed more than once in method 'BalansTransferUtils.GetNewAktID(SqlConnection, SqlTransaction)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 804</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendBalansTransferNotifications(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="BalansTransferUtils.cs" Line="307">Object 'reader' can be disposed more than once in method 'BalansTransferUtils.SendBalansTransferNotifications(int, List&lt;int&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 307</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="BalansTransferUtils.cs" Line="352">Object 'reader' can be disposed more than once in method 'BalansTransferUtils.SendBalansTransferNotifications(int, List&lt;int&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 352</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConveyancingUtils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateNew1NFBuilding(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="ConveyancingUtils.cs" Line="634">Object 'r' can be disposed more than once in method 'ConveyancingUtils.CreateNew1NFBuilding(SqlConnection, SqlTransaction, int, int, int, int, string, string, string, string, out string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 634</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="ConveyancingUtils.cs" Line="656">Object 'r' can be disposed more than once in method 'ConveyancingUtils.CreateNew1NFBuilding(SqlConnection, SqlTransaction, int, int, int, int, string, string, string, string, out string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 656</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="ConveyancingUtils.cs" Line="738">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection, SqlTransaction)' in 'ConveyancingUtils.CreateNew1NFBuilding(SqlConnection, SqlTransaction, int, int, int, int, string, string, string, string, out string)' could contain the following variables 'fieldList', 'paramList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserAccountsOfOrganisation(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="ConveyancingUtils.cs" Line="570">Object 'reader' can be disposed more than once in method 'ConveyancingUtils.GetUserAccountsOfOrganisation(int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 570</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DB" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+balans_other_docsDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.balans_other_docsDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+balans_otherDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.balans_otherDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+bp_rish_project_infoDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.bp_rish_project_infoDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+bp_rish_project_itemDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.bp_rish_project_itemDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+bp_rish_project_stateDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.bp_rish_project_stateDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+bp_rish_project_tableDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.bp_rish_project_tableDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+bp_rish_projectDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.bp_rish_projectDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+dict_districts2DataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.dict_districts2DataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+dict_districtsDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.dict_districtsDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+dict_obj_rightsDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.dict_obj_rightsDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+dict_object_kindDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.dict_object_kindDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+dict_object_typeDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.dict_object_typeDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+dict_rish_project_org_contactDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.dict_rish_project_org_contactDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+dict_rish_project_orgDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.dict_rish_project_orgDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+dict_rish_project_stateDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.dict_rish_project_stateDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+dict_rish_project_typeDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.dict_rish_project_typeDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+documentsDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.documentsDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+external_documentDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.external_documentDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+ObjCardArendaDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.ObjCardArendaDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+ObjCardBalansDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.ObjCardBalansDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+ObjCardPrivatDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.ObjCardPrivatDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+ObjCardPropertiesDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.ObjCardPropertiesDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+ObjCardPurchaseDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.ObjCardPurchaseDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+ObjCardRentersNoAgreementsDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.ObjCardRentersNoAgreementsDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+organizationsDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.organizationsDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+view_balansDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.view_balansDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DB+view_buildingsDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DB.view_buildingsDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DisposableScope" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnCommit" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DisposableScope.cs" Line="22">Declare the first parameter of 'Action' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DisposableScope.cs" Line="22">Declare the second parameter of 'Action' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRollback" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DisposableScope.cs" Line="35">Declare the first parameter of 'Action' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DisposableScope.cs" Line="35">Declare the second parameter of 'Action' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OrgCardDB" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'OrgCardDB'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OrgCardDB+OrgCardBalansDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'OrgCardDB.OrgCardBalansDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OrgCardDB+OrgCardGiven4RentDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'OrgCardDB.OrgCardGiven4RentDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OrgCardDB+OrgCardPrivatDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'OrgCardDB.OrgCardPrivatDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OrgCardDB+OrgCardPropertiesDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'OrgCardDB.OrgCardPropertiesDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OrgCardDB+OrgCardRentDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'OrgCardDB.OrgCardRentDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OrgRentAgreementPhotosPdfBulder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'OrgRentAgreementPhotosPdfBulder' because it creates members of the following IDisposable types: 'PdfDocument'. If 'OrgRentAgreementPhotosPdfBulder' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OutputFilterStream" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReadStream()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="OutputFilterStream.cs" Line="47">'OutputFilterStream.ReadStream()' locks on a reference of type 'Stream'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PhotoUtils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ProcImage(System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="PhotoUtils.cs" Line="90">'PhotoUtils.ProcImage(byte[])' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReportObjectCard" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CalcTotalRentedSquare()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="ReportObjectCard.cs" Line="2827">Object 'reader' can be disposed more than once in method 'ReportObjectCard.CalcTotalRentedSquare()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2827</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillRentersNoAgreementsData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="ReportObjectCard.cs" Line="2777">Object 'reader' can be disposed more than once in method 'ReportObjectCard.FillRentersNoAgreementsData()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2777</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBalansDocList(System.Int32,System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="ReportObjectCard.cs" Line="2643">Object 'reader' can be disposed more than once in method 'ReportObjectCard.GetBalansDocList(int, SqlConnection)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2643</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NFUtils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateObjectIn1NF(System.Data.SqlClient.SqlConnection,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="3237">Object 'r' can be disposed more than once in method 'Reports1NFUtils.CreateObjectIn1NF(SqlConnection, Dictionary&lt;string, object&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3237</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="3293">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NFUtils.CreateObjectIn1NF(SqlConnection, Dictionary&lt;string, object&gt;)' could contain the following variables 'mappingEntry.Value', 'base.ToString()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRentAgreementIn1NF(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="3410">Object 'r' can be disposed more than once in method 'Reports1NFUtils.CreateRentAgreementIn1NF(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3410</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="3397">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.CreateRentAgreementIn1NF(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3397</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="3467">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NFUtils.CreateRentAgreementIn1NF(SqlConnection, int, int)' could contain the following variables 'reader.GetName(i)', 'base.ToString()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteBalansPhotoFileItem(System.Int32,System.Int32,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1306">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection, SqlTransaction)' in 'Reports1NFUtils.DeleteBalansPhotoFileItem(int, int, string, string, string)' could contain the following variables 'tableName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindObjectMatchForBalansBuilding(System.Data.SqlClient.SqlConnection,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;,System.String&amp;,System.String&amp;,System.String&amp;,System.String&amp;,System.Boolean,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1394">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.FindObjectMatchForBalansBuilding(SqlConnection, Dictionary&lt;string, object&gt;, ref string, ref string, ref string, ref string, bool, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1394</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1424">The query string passed to 'SqlCommand.CommandText.set(string)' in 'Reports1NFUtils.FindObjectMatchForBalansBuilding(SqlConnection, Dictionary&lt;string, object&gt;, ref string, ref string, ref string, ref string, bool, string)' could contain the following variables 'pair.Key', 'new string[5][2]', 'pair.Key'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateId1NFUsingGenerator(System.String,FirebirdSql.Data.FirebirdClient.FbConnection,FirebirdSql.Data.FirebirdClient.FbTransaction)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2805">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.GenerateId1NFUsingGenerator(string, FbConnection, FbTransaction)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2805</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2790">The query string passed to 'FbCommand.FbCommand(string, FbConnection)' in 'Reports1NFUtils.GenerateId1NFUsingGenerator(string, FbConnection, FbTransaction)' could contain the following variables 'generatorName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBalansBuildingUniqueId(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="634">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.GetBalansBuildingUniqueId(SqlConnection, int, int, Dictionary&lt;string, object&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 634</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBalansDeletedObjectDescription(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="4045">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.GetBalansDeletedObjectDescription(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 4045</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBalansObjectDescription(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="3992">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.GetBalansObjectDescription(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3992</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMarkedControlIDs(System.Int32,System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="504">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.GetMarkedControlIDs(int, int?, int?, int?, int?, int?)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 504</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="479">The query string passed to 'SqlCommand.CommandText.set(string)' in 'Reports1NFUtils.GetMarkedControlIDs(int, int?, int?, int?, int?, int?)' could contain the following variables 'arendaId', 'balanceId', 'balanceDeletedId', 'arendaRentedId', 'organizationId'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRentAgreementDescription(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="4087">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.GetRentAgreementDescription(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 4087</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRentedObjectDescription(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="4125">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.GetRentedObjectDescription(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 4125</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReportOrganizationId(System.Data.SqlClient.SqlConnection,System.Int32,System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="568">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.GetReportOrganizationId(SqlConnection, int, out string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 568</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReportOrganizationId(System.Int32,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="604">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.GetReportOrganizationId(int, ref int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 604</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUniqueBuildingProperties(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="676">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.GetUniqueBuildingProperties(SqlConnection, int, int, Dictionary&lt;string, object&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 676</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Read1NFDictionary(System.String,System.String,FirebirdSql.Data.FirebirdClient.FbConnection)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="3551">Object 'r' can be disposed more than once in method 'Reports1NFUtils.Read1NFDictionary(string, string, FbConnection)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3551</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="3533">The query string passed to 'FbCommand.FbCommand(string, FbConnection)' in 'Reports1NFUtils.Read1NFDictionary(string, string, FbConnection)' could contain the following variables 'keyField', 'tableName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendBalansObjectFreeSquare(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1081">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendBalansObjectFreeSquare(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1081</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1224">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendBalansObjectFreeSquare(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1224</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1219">Object 'readerPhoto' can be disposed more than once in method 'Reports1NFUtils.SendBalansObjectFreeSquare(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1219</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendBalansObjectPhotos(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1278">Object 'r' can be disposed more than once in method 'Reports1NFUtils.SendBalansObjectPhotos(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1278</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1250">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendBalansObjectPhotos(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1250</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendBalansObjProperties(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="933">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendBalansObjProperties(SqlConnection, int, int, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 933</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1006">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendBalansObjProperties(SqlConnection, int, int, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1006</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1017">The query string passed to 'SqlCommand.CommandText.set(string)' in 'Reports1NFUtils.SendBalansObjProperties(SqlConnection, int, int, string)' could contain the following variables 'reader.GetName(i)', 'new string[5][4]'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="949">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NFUtils.SendBalansObjProperties(SqlConnection, int, int, string)' could contain the following variables 'sourceBalansTable'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendOrganizationInfo(System.Data.SqlClient.SqlConnection,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="725">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendOrganizationInfo(SqlConnection, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 725</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="767">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendOrganizationInfo(SqlConnection, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 767</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="778">The query string passed to 'SqlCommand.CommandText.set(string)' in 'Reports1NFUtils.SendOrganizationInfo(SqlConnection, int)' could contain the following variables 'reader.GetName(i)', 'new string[5][4]'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendRentAgreement(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1670">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendRentAgreement(SqlConnection, int, ref int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1670</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1867">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendRentAgreement(SqlConnection, int, ref int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1867</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1919">The query string passed to 'SqlCommand.CommandText.set(string)' in 'Reports1NFUtils.SendRentAgreement(SqlConnection, int, ref int)' could contain the following variables 'reader.GetName(i)', 'base.ToString()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendRentAgreementDecisions(System.Data.SqlClient.SqlConnection,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1979">Object 'r' can be disposed more than once in method 'Reports1NFUtils.SendRentAgreementDecisions(SqlConnection, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1979</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2041">Object 'r' can be disposed more than once in method 'Reports1NFUtils.SendRentAgreementDecisions(SqlConnection, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2041</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendRentAgreementNotes(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2202">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendRentAgreementNotes(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2202</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendRentAgreementPhotos(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2762">Object 'r' can be disposed more than once in method 'Reports1NFUtils.SendRentAgreementPhotos(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2762</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2734">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendRentAgreementPhotos(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2734</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendRentedObject(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1477">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendRentedObject(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1477</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1565">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendRentedObject(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1565</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1602">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendRentedObject(SqlConnection, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1602</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="1608">The query string passed to 'SqlCommand.CommandText.set(string)' in 'Reports1NFUtils.SendRentedObject(SqlConnection, int, int)' could contain the following variables 'reader.GetName(i)', 'new string[5][4]'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendRentedObjectPayments(System.Data.SqlClient.SqlConnection,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2575">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendRentedObjectPayments(SqlConnection, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2575</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2596">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendRentedObjectPayments(SqlConnection, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2596</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2618">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendRentedObjectPayments(SqlConnection, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2618</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendRentPayments(System.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2481">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendRentPayments(SqlConnection, int, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2481</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2503">Object 'reader' can be disposed more than once in method 'Reports1NFUtils.SendRentPayments(SqlConnection, int, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2503</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2547">The query string passed to 'SqlCommand.CommandText.set(string)' in 'Reports1NFUtils.SendRentPayments(SqlConnection, int, int, int)' could contain the following variables 'pair.Key', 'new string[5][2]', 'pair.Key', 'pair.Key', 'new string[5][3]'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="2552">The query string passed to 'SqlCommand.CommandText.set(string)' in 'Reports1NFUtils.SendRentPayments(SqlConnection, int, int, int)' could contain the following variables 'pair.Key', 'new string[5][2]', 'pair.Key', 'pair.Key', 'new string[7][5]'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NFUtils+RentDecisionInfo" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#CreateInsertCmd1NF(FirebirdSql.Data.FirebirdClient.FbConnection,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="167">The query string passed to 'FbCommand.FbCommand(string, FbConnection)' in 'Reports1NFUtils.RentDecisionInfo.CreateInsertCmd1NF(FbConnection, int, int)' could contain the following variables 'fields', 'values'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateInsertCmdSql(System.Data.SqlClient.SqlConnection,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="141">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NFUtils.RentDecisionInfo.CreateInsertCmdSql(SqlConnection, int)' could contain the following variables 'fields', 'values'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateUpdateCmd1NF(FirebirdSql.Data.FirebirdClient.FbConnection,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="98">The query string passed to 'FbCommand.FbCommand(string, FbConnection)' in 'Reports1NFUtils.RentDecisionInfo.CreateUpdateCmd1NF(FbConnection, int)' could contain the following variables 'fields', 'base.ToString()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateUpdateCmdSql(System.Data.SqlClient.SqlConnection,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Reports1NFUtils.cs" Line="75">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NFUtils.RentDecisionInfo.CreateUpdateCmdSql(SqlConnection, int)' could contain the following variables 'fields', 'base.ToString()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RishProjectDataSource" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'RishProjectDataSource' because it creates members of the following IDisposable types: 'DB'. If 'RishProjectDataSource' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="RishProjectDataSourceItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(RishProjectDataSource,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\RishProject" File="RishProjectDataSourceItem.cs" Line="106">'RishProjectDataSourceItem.RishProjectDataSourceItem(RishProjectDataSource, int, bool)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;RishProjectDataSourceItem..ctor(RishProjectDataSource, Int32, Boolean)&#xD;&#xA;RishProjectDataSourceItem.set_ParentID(Int32):Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\RishProject" File="RishProjectDataSourceItem.cs" Line="106">'RishProjectDataSourceItem.RishProjectDataSourceItem(RishProjectDataSource, int, bool)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;RishProjectDataSourceItem..ctor(RishProjectDataSource, Int32, Boolean)&#xD;&#xA;RishProjectDataSourceItem.set_ParentID(Int32):Void&#xD;&#xA;RishProjectDataSourceItem.get_ID():Int32</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RishProjectExport" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateNew1NFBuilding(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\RishProject" File="RishProjectExport.cs" Line="853">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'RishProjectExport.CreateNew1NFBuilding(int, int, int, int, string, string, string, string, out string)' could contain the following variables 'fieldList', 'paramList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateNew1NFObject(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\RishProject" File="RishProjectExport.cs" Line="970">Object 'r' can be disposed more than once in method 'RishProjectExport.CreateNew1NFObject(int, int, string, string, int, int, int, int, int, string, out string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 970</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\RishProject" File="RishProjectExport.cs" Line="998">Object 'reader' can be disposed more than once in method 'RishProjectExport.CreateNew1NFObject(int, int, string, string, int, int, int, int, int, string, out string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 998</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\RishProject" File="RishProjectExport.cs" Line="1130">The query string passed to 'SqlCommand.CommandText.set(string)' in 'RishProjectExport.CreateNew1NFObject(int, int, string, string, int, int, int, int, int, string, out string)' could contain the following variables 'fieldList', 'paramList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateNew1NFOrganization(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\RishProject" File="RishProjectExport.cs" Line="310">Object 'r' can be disposed more than once in method 'RishProjectExport.CreateNew1NFOrganization(string, string, string, int, int, int, int, int, int, int, int, int, string, string, string, string, string, string, string, int, string, string, string, string, out string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 310</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\RishProject" File="RishProjectExport.cs" Line="399">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'RishProjectExport.CreateNew1NFOrganization(string, string, string, int, int, int, int, int, int, int, int, int, string, string, string, string, string, string, string, int, string, string, string, string, out string)' could contain the following variables 'fieldList', 'paramList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateNewActive1NFOrganization(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\RishProject" File="RishProjectExport.cs" Line="542">Object 'r' can be disposed more than once in method 'RishProjectExport.CreateNewActive1NFOrganization(string, string, string, int, int, int, int, int, int, int, int, int, string, string, string, string, string, string, string, int, string, string, string, string, out string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 542</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\RishProject" File="RishProjectExport.cs" Line="631">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'RishProjectExport.CreateNewActive1NFOrganization(string, string, string, int, int, int, int, int, int, int, int, int, string, string, string, string, string, string, string, int, string, string, string, string, out string)' could contain the following variables 'fieldList', 'paramList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TempFile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'TempFile' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="TempFile.cs" Line="42">Modify 'TempFile.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserFoldersDataSourceView" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Select()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="UserFoldersDataSourceView.cs" Line="55">Object 'reader' can be disposed more than once in method 'UserFoldersDataSourceView.Select()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 55</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserReportDataSourceFolderItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(UserReportDataSourceFolderItem,System.String,System.Int32,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="UserReportDataSourceFolderItem.cs" Line="61">Object 'reader' can be disposed more than once in method 'UserReportDataSourceFolderItem.UserReportDataSourceFolderItem(UserReportDataSourceFolderItem, string, int, bool, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 61</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckIfChildFoldersExist(System.Guid,System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="UserReportDataSourceFolderItem.cs" Line="169">Object 'reader' can be disposed more than once in method 'UserReportDataSourceFolderItem.CheckIfChildFoldersExist(Guid, SqlConnection)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 169</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckIfChildReportsExist(System.Guid,System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="UserReportDataSourceFolderItem.cs" Line="192">Object 'reader' can be disposed more than once in method 'UserReportDataSourceFolderItem.CheckIfChildReportsExist(Guid, SqlConnection)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 192</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserReportDataSourceView" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Select()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="UserReportDataSourceView.cs" Line="55">Object 'reader' can be disposed more than once in method 'UserReportDataSourceView.Select()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 55</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Utils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddUserReport(System.Int32,System.Int32,System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="703">Object 'reader' can be disposed more than once in method 'Utils.AddUserReport(int, int, string, string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 703</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindUserOrganizationAndRda(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="2872">Object 'reader' can be disposed more than once in method 'Utils.FindUserOrganizationAndRda(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2872</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FromJSON`1(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="2627">Object 'reader' can be disposed more than once in method 'Utils.FromJSON&lt;T&gt;(this string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2627</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDocProperties(System.Int32,System.Object&amp;,System.Object&amp;,System.Object&amp;,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="861">Object 'reader' can be disposed more than once in method 'Utils.GetDocProperties(int, out object, out object, out object, out int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 861</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="841">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Utils.GetDocProperties(int, out object, out object, out object, out int)' could contain the following variables 'base.ToString()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetExternalDocText(System.Int32,TempFile,System.Boolean&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="934">Object 'reader' can be disposed more than once in method 'Utils.GetExternalDocText(int, TempFile, out bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 934</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="928">Object 'stream' can be disposed more than once in method 'Utils.GetExternalDocText(int, TempFile, out bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 928</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="888">The query string passed to 'FbCommand.FbCommand(string, FbConnection)' in 'Utils.GetExternalDocText(int, TempFile, out bool)' could contain the following variables 'base.ToString()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLastReportId()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="3133">Object 'reader' can be disposed more than once in method 'Utils.GetLastReportId()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3133</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNextSequenceValue(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="3191">Object 'reader' can be disposed more than once in method 'Utils.GetNextSequenceValue(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3191</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="3184">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Utils.GetNextSequenceValue(string)' could contain the following variables 'sequence'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrganizationIdByReportId(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="2795">Object 'reader' can be disposed more than once in method 'Utils.GetOrganizationIdByReportId(int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2795</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReportIdByOrganizationId(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="2824">Object 'reader' can be disposed more than once in method 'Utils.GetReportIdByOrganizationId(int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2824</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserFolderId(System.String,System.Data.SqlClient.SqlConnection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="545">Object 'reader' can be disposed more than once in method 'Utils.GetUserFolderId(string, SqlConnection)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 545</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserMistoId(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="2927">Object 'reader' can be disposed more than once in method 'Utils.GetUserMistoId(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2927</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserOrganizationID(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="2765">Object 'reader' can be disposed more than once in method 'Utils.GetUserOrganizationID(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2765</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserReportLayout(System.Int32,System.Int32&amp;,System.String&amp;,System.String&amp;,System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="809">Object 'reader' can be disposed more than once in method 'Utils.GetUserReportLayout(int, out int, out string, out string, out string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 809</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsBigBossUser()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="3067">Object 'connection' can be disposed more than once in method 'Utils.IsBigBossUser()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3067</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="3062">Object 'r' can be disposed more than once in method 'Utils.IsBigBossUser()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3062</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RishProjectDelete(System.Int32,System.Data.SqlClient.SqlConnection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="Utils.cs" Line="2088">Object 'reader' can be disposed more than once in method 'Utils.RishProjectDelete(int, SqlConnection)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2088</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WorkItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DoWork()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\SendAll" File="WorkItem.cs" Line="147">Object 'reader' can be disposed more than once in method 'WorkItem.DoWork()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 147</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\SendAll" File="WorkItem.cs" Line="135">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'WorkItem.DoWork()' could contain the following variables 'this.GetTableName()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Init(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\SendAll" File="WorkItem.cs" Line="75">Object 'reader' can be disposed more than once in method 'WorkItem.Init(int, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 75</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\SendAll" File="WorkItem.cs" Line="62">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'WorkItem.Init(int, string)' could contain the following variables 'this.GetTableName()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\SendAll" File="WorkItem.cs" Line="94">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'WorkItem.Init(int, string)' could contain the following variables 'this.GetTableName()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ZvedZvitBuilder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Go()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="ZvedZvitBuilder.cs" Line="31">The query string passed to 'DbCommand.CommandText.set(string)' in 'ZvedZvitBuilder.Go()' could contain the following variables 'this.GetMainSql()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Cache">
       <Types>
        <Type Name="CachingDataSource" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateCommand(System.String,System.Data.Common.DbConnection)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\Cache" File="CachingDataSource.cs" Line="103">The query string passed to 'DbCommand.CommandText.set(string)' in 'CachingDataSource.CreateCommand(string, DbConnection)' could contain the following variables 'commandText'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CachingDataSourceView" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\Cache" File="CachingDataSourceView.cs" Line="214">'CachingDataSourceView.ExecuteSelect(DataSourceSelectArguments)' locks on a reference of type 'Type'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\Cache" File="CachingDataSourceView.cs" Line="259">'CachingDataSourceView.ExecuteSelect(DataSourceSelectArguments)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeParameters(System.Data.Common.DbCommand,System.Web.UI.WebControls.ParameterCollection,System.Collections.IDictionary)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\Cache" File="CachingDataSourceView.cs" Line="69">'CachingDataSourceView.InitializeParameters(DbCommand, ParameterCollection, IDictionary)' locks on a reference of type 'Type'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\Cache" File="CachingDataSourceView.cs" Line="185">'CachingDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)' locks on a reference of type 'Type'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ExtDataEntry.Models">
       <Types>
        <Type Name="FileAttachment" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Delete(System.String,System.Int32,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="FileAttachment.cs" Line="310">Object 'reader' can be disposed more than once in method 'FileAttachment.Delete(string, int, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 310</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LLLLhotorowUtils___database" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Exists(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="LLLLhotorowUtils___database.cs" Line="52">Object 'reader' can be disposed more than once in method 'LLLLhotorowUtils___database.Exists(string, SqlConnection, SqlTransaction)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 52</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFiles(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="LLLLhotorowUtils___database.cs" Line="81">Object 'reader' can be disposed more than once in method 'LLLLhotorowUtils___database.GetFiles(string, SqlConnection, SqlTransaction)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 81</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="LLLLhotorowUtils___database.cs" Line="70">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection, SqlTransaction)' in 'LLLLhotorowUtils___database.GetFiles(string, SqlConnection, SqlTransaction)' could contain the following variables 'photofiledir'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Read(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="LLLLhotorowUtils___database.cs" Line="33">Object 'reader' can be disposed more than once in method 'LLLLhotorowUtils___database.Read(string, SqlConnection, SqlTransaction)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 33</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="GUKV">
       <Types>
        <Type Name="ValidatorBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ValidateDB(System.Data.SqlClient.SqlConnection,System.String,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\Validators" File="ValidatorBase.cs" Line="118">Object 'reader' can be disposed more than once in method 'ValidatorBase.ValidateDB(SqlConnection, string, string, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 118</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\Validators" File="ValidatorBase.cs" Line="101">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection, SqlTransaction)' in 'ValidatorBase.ValidateDB(SqlConnection, string, string, bool)' could contain the following variables 'string.Join(", ", this.reqFields)', 'tableName', 'keyFilter'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code\Validators" File="ValidatorBase.cs" Line="124">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection, SqlTransaction)' in 'ValidatorBase.ValidateDB(SqlConnection, string, string, bool)' could contain the following variables 'tableName', 'keyFilter'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="GUKV.Conveyancing">
       <Types>
        <Type Name="DB" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ChangeBalansObjectSquare(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Int32,System.Decimal)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DB.cs" Line="3660">Object 'r' can be disposed more than once in method 'DB.ChangeBalansObjectSquare(SqlConnection, SqlTransaction, int, decimal)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3660</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyBalansObject(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Int32,System.Int32,GUKV.Conveyancing.Document,GUKV.Conveyancing.ImportedAct)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DB.cs" Line="3742">Object 'reader' can be disposed more than once in method 'DB.CopyBalansObject(SqlConnection, SqlTransaction, int, int, Document, ImportedAct)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3742</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DB.cs" Line="3840">Object 'reader' can be disposed more than once in method 'DB.CopyBalansObject(SqlConnection, SqlTransaction, int, int, Document, ImportedAct)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3840</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DB.cs" Line="3989">The query string passed to 'SqlCommand.CommandText.set(string)' in 'DB.CopyBalansObject(SqlConnection, SqlTransaction, int, int, Document, ImportedAct)' could contain the following variables 'reader.GetName(i)', 'base.ToString()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateBalansObject(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,GUKV.Conveyancing.ActObject,GUKV.Conveyancing.BalansTransfer,GUKV.Conveyancing.Document,GUKV.Conveyancing.ImportedAct,System.Boolean)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DB.cs" Line="4192">Object 'r' can be disposed more than once in method 'DB.CreateBalansObject(SqlConnection, SqlTransaction, ActObject, BalansTransfer, Document, ImportedAct, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 4192</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DB.cs" Line="4273">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection, SqlTransaction)' in 'DB.CreateBalansObject(SqlConnection, SqlTransaction, ActObject, BalansTransfer, Document, ImportedAct, bool)' could contain the following variables 'fieldNameSql', 'base.ToString()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CutBalansObject(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,GUKV.Conveyancing.BalansTransfer,GUKV.Conveyancing.Document,GUKV.Conveyancing.ImportedAct,System.Boolean)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DB.cs" Line="4372">Object 'r' can be disposed more than once in method 'DB.CutBalansObject(SqlConnection, SqlTransaction, BalansTransfer, Document, ImportedAct, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 4372</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrganization(System.Int32,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DB.cs" Line="4039">Object 'r' can be disposed more than once in method 'DB.GetOrganization(int, SqlConnection, SqlTransaction)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 4039</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DictionaryData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LoadValues(System.Data.SqlClient.SqlConnection,System.Collections.Generic.Dictionary`2&lt;System.Int32,GUKV.Conveyancing.DictionaryValue&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,System.Int32&gt;,System.String,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DB.cs" Line="150">Object 'reader' can be disposed more than once in method 'DictionaryData.LoadValues(SqlConnection, Dictionary&lt;int, DictionaryValue&gt;, Dictionary&lt;string, int&gt;, string, string, string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 150</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DB.cs" Line="174">Object 'reader' can be disposed more than once in method 'DictionaryData.LoadValues(SqlConnection, Dictionary&lt;int, DictionaryValue&gt;, Dictionary&lt;string, int&gt;, string, string, string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 174</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DB.cs" Line="131">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'DictionaryData.LoadValues(SqlConnection, Dictionary&lt;int, DictionaryValue&gt;, Dictionary&lt;string, int&gt;, string, string, string, string, string)' could contain the following variables 'keyName', 'valueName', 'parentKeyName', 'tableName', 'sortFields'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\App_Code" File="DB.cs" Line="156">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'DictionaryData.LoadValues(SqlConnection, Dictionary&lt;int, DictionaryValue&gt;, Dictionary&lt;string, int&gt;, string, string, string, string, string)' could contain the following variables 'keyName', 'valueName', 'tableName', 'sortFields'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_15gmhkrv.dll">
   <Modules>
    <Module Name="app_web_15gmhkrv.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_Report1NFFreeMap" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFFreeMap__MBK.aspx.cs" Line="104">Object 'reader' can be disposed more than once in method 'Reports1NF_Report1NFFreeMap.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 104</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFFreeMap__MBK.aspx.cs" Line="27">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_Report1NFFreeMap.Page_Load(object, EventArgs)' could contain the following variables 'this.SqlQuery'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NF_Report1NFPrivatisatMap" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFPrivatisatMap.aspx.cs" Line="80">Object 'reader' can be disposed more than once in method 'Reports1NF_Report1NFPrivatisatMap.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 80</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFPrivatisatMap.aspx.cs" Line="27">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_Report1NFPrivatisatMap.Page_Load(object, EventArgs)' could contain the following variables 'this.SqlQuery'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NF_SendingRentedObjectsDiagnostic" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="SendingRentedObjectsDiagnostic.aspx.cs" Line="56">Object 'reader' can be disposed more than once in method 'Reports1NF_SendingRentedObjectsDiagnostic.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 56</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_1dwuabei.dll">
   <Modules>
    <Module Name="app_web_1dwuabei.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_TransferRequestAdd" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CPObjSel_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="TransferRequestAdd.aspx.cs" Line="309">Object 'reader' can be disposed more than once in method 'Reports1NF_TransferRequestAdd.CPObjSel_Callback(object, CallbackEventArgsBase)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 309</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRozpDoc(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="TransferRequestAdd.aspx.cs" Line="920">Object 'reader' can be disposed more than once in method 'Reports1NF_TransferRequestAdd.CreateRozpDoc(int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 920</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNewRozpDocID()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="TransferRequestAdd.aspx.cs" Line="946">Object 'reader' can be disposed more than once in method 'Reports1NF_TransferRequestAdd.GetNewRozpDocID()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 946</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendBalansTransferNotifications(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="TransferRequestAdd.aspx.cs" Line="997">Object 'reader' can be disposed more than once in method 'Reports1NF_TransferRequestAdd.SendBalansTransferNotifications(int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 997</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="TransferRequestAdd.aspx.cs" Line="1041">Object 'reader' can be disposed more than once in method 'Reports1NF_TransferRequestAdd.SendBalansTransferNotifications(int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1041</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_2gtj5r4w.dll">
   <Modules>
    <Module Name="app_web_2gtj5r4w.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_FreeProzoro" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SaveChanges(System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="FreeProzoro.aspx.cs" Line="90">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_FreeProzoro.SaveChanges(SqlConnection)' could contain the following variables 'fieldList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_2yzwsraq.dll">
   <Modules>
    <Module Name="app_web_2yzwsraq.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="RishProjectTableEditor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ParseDocument(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\BPRishProject" File="RishProjectTableEditor.ascx.cs" Line="253">Object 'stream' can be disposed more than once in method 'RishProjectTableEditor.ParseDocument(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 253</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_45otxtxb.dll">
   <Modules>
    <Module Name="app_web_45otxtxb.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Finance_FinanceView" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateColumnDataValues(System.Data.SqlClient.SqlConnection,System.String,System.Collections.Generic.Dictionary`2&lt;System.Int32,System.Decimal&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Finance" File="FinanceView.aspx.cs" Line="1055">Object 'reader' can be disposed more than once in method 'Finance_FinanceView.GenerateColumnDataValues(SqlConnection, string, Dictionary&lt;int, decimal&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1055</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Finance_FinForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateFormDataSource(System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Finance" File="FinForm.aspx.cs" Line="177">Object 'reader' can be disposed more than once in method 'Finance_FinForm.GenerateFormDataSource(DataTable)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 177</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Finance" File="FinForm.aspx.cs" Line="202">Object 'reader' can be disposed more than once in method 'Finance_FinForm.GenerateFormDataSource(DataTable)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 202</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Finance" File="FinForm.aspx.cs" Line="237">Object 'reader' can be disposed more than once in method 'Finance_FinForm.GenerateFormDataSource(DataTable)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 237</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Finance" File="FinForm.aspx.cs" Line="273">Object 'reader' can be disposed more than once in method 'Finance_FinForm.GenerateFormDataSource(DataTable)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 273</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateFormTitle()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Finance" File="FinForm.aspx.cs" Line="89">Object 'reader' can be disposed more than once in method 'Finance_FinForm.UpdateFormTitle()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 89</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_aplw5duv.dll">
   <Modules>
    <Module Name="app_web_aplw5duv.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Cards_BalansCardArchive" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ValidatePermission(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="BalansCardArchive.aspx.cs" Line="167">Object 'reader' can be disposed more than once in method 'Cards_BalansCardArchive.ValidatePermission(int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 167</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="BalansCardArchive.aspx.cs" Line="193">Object 'reader' can be disposed more than once in method 'Cards_BalansCardArchive.ValidatePermission(int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 193</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Cards_DocCard" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ASPxUploadPhotoControl_FileUploadComplete(System.Object,DevExpress.Web.FileUploadCompleteEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="DocCard.aspx.cs" Line="277">'Cards_DocCard.ASPxUploadPhotoControl_FileUploadComplete(object, FileUploadCompleteEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopySourceFiles(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="DocCard.aspx.cs" Line="159">Object 'r' can be disposed more than once in method 'Cards_DocCard.CopySourceFiles(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 159</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_b5bhnh51.dll">
   <Modules>
    <Module Name="app_web_b5bhnh51.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_Report1NFFreeMap" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFBalansMap__MBK.aspx.cs" Line="105">Object 'reader' can be disposed more than once in method 'Reports1NF_Report1NFFreeMap.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 105</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFBalansMap__MBK.aspx.cs" Line="28">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_Report1NFFreeMap.Page_Load(object, EventArgs)' could contain the following variables 'this.SqlQuery'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NF_Report1NFProdlenMap" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFProdlenMap.aspx.cs" Line="108">Object 'reader' can be disposed more than once in method 'Reports1NF_Report1NFProdlenMap.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 108</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFProdlenMap.aspx.cs" Line="29">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_Report1NFProdlenMap.Page_Load(object, EventArgs)' could contain the following variables 'this.SqlQuery_1', 'this.SqlQuery_2'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_br3uucqt.dll">
   <Modules>
    <Module Name="app_web_br3uucqt.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="BPRishProject_RishProjectForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddHtmlToAltChunk(DocumentFormat.OpenXml.Packaging.MainDocumentPart,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\BPRishProject" File="RishProjectForm.aspx.cs" Line="1681">Object 'chunkStream' can be disposed more than once in method 'BPRishProject_RishProjectForm.AddHtmlToAltChunk(MainDocumentPart, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1681</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ButtonExportRishProject_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\BPRishProject" File="RishProjectForm.aspx.cs" Line="779">Object 'wordDocument' can be disposed more than once in method 'BPRishProject_RishProjectForm.ButtonExportRishProject_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 779</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\BPRishProject" File="RishProjectForm.aspx.cs" Line="742">Object 'zip' can be disposed more than once in method 'BPRishProject_RishProjectForm.ButtonExportRishProject_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 742</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRishProjectItemAppendix(System.String,RishProjectDataSource,RishProjectDataSourceItem)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\BPRishProject" File="RishProjectForm.aspx.cs" Line="862">Object 'wordDocument' can be disposed more than once in method 'BPRishProject_RishProjectForm.CreateRishProjectItemAppendix(string, RishProjectDataSource, RishProjectDataSourceItem)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 862</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindDocumentSectionElement(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\BPRishProject" File="RishProjectForm.aspx.cs" Line="1866">Object 'wordDocument' can be disposed more than once in method 'BPRishProject_RishProjectForm.FindDocumentSectionElement(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1866</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_bvyqplzo.dll">
   <Modules>
    <Module Name="app_web_bvyqplzo.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_Cabinet+PrivatisatPhotosPdfBulder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Reports1NF_Cabinet.PrivatisatPhotosPdfBulder' because it creates members of the following IDisposable types: 'PdfDocument'. If 'Reports1NF_Cabinet.PrivatisatPhotosPdfBulder' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_bzr4f1iz.dll">
   <Modules>
    <Module Name="app_web_bzr4f1iz.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Cards_ArendaCardArchive" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CopySourceFiles(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="ArendaCardArchive.aspx.cs" Line="306">Object 'r' can be disposed more than once in method 'Cards_ArendaCardArchive.CopySourceFiles(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 306</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidatePermission(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="ArendaCardArchive.aspx.cs" Line="138">Object 'reader' can be disposed more than once in method 'Cards_ArendaCardArchive.ValidatePermission(int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 138</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="ArendaCardArchive.aspx.cs" Line="177">Object 'reader' can be disposed more than once in method 'Cards_ArendaCardArchive.ValidatePermission(int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 177</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Cards_OrgCard" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="OrgCard.aspx.cs" Line="64">Object 'reader' can be disposed more than once in method 'Cards_OrgCard.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 64</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_d1utswvf.dll">
   <Modules>
    <Module Name="app_web_d1utswvf.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_Report1NFAccounts" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CPAddMultipleBalansAcc_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFAccounts.aspx.cs" Line="253">Object 'reader' can be disposed more than once in method 'Reports1NF_Report1NFAccounts.CPAddMultipleBalansAcc_Callback(object, CallbackEventArgsBase)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 253</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDistrictIdByMistoId(System.Data.SqlClient.SqlConnection,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFAccounts.aspx.cs" Line="485">Object 'reader' can be disposed more than once in method 'Reports1NF_Report1NFAccounts.GetDistrictIdByMistoId(SqlConnection, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 485</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDistrictIdByRdaId(System.Data.SqlClient.SqlConnection,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFAccounts.aspx.cs" Line="462">Object 'reader' can be disposed more than once in method 'Reports1NF_Report1NFAccounts.GetDistrictIdByRdaId(SqlConnection, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 462</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GridViewAccounts_CustomCallback(System.Object,DevExpress.Web.ASPxGridViewCustomCallbackEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFAccounts.aspx.cs" Line="71">Object 'reader' can be disposed more than once in method 'Reports1NF_Report1NFAccounts.GridViewAccounts_CustomCallback(object, ASPxGridViewCustomCallbackEventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 71</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFAccounts.aspx.cs" Line="90">Object 'reader' can be disposed more than once in method 'Reports1NF_Report1NFAccounts.GridViewAccounts_CustomCallback(object, ASPxGridViewCustomCallbackEventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 90</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_deehqpmr.dll">
   <Modules>
    <Module Name="app_web_deehqpmr.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Admin_DicOrgOccupation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SqlDataSourceDicOrgOccupation_Inserting(System.Object,System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Admin" File="DicOrgOccupation.aspx.cs" Line="78">Object 'reader' can be disposed more than once in method 'Admin_DicOrgOccupation.SqlDataSourceDicOrgOccupation_Inserting(object, SqlDataSourceCommandEventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 78</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Admin_Import" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ImportData(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Text.StringBuilder&amp;,System.Collections.Generic.List`1&lt;System.Int32&gt;&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Admin" File="Import.aspx.cs" Line="111">Object 'reader' can be disposed more than once in method 'Admin_Import.ImportData(SqlConnection, SqlTransaction, out StringBuilder, out List&lt;int&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 111</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Admin" File="Import.aspx.cs" Line="133">Object 'reader' can be disposed more than once in method 'Admin_Import.ImportData(SqlConnection, SqlTransaction, out StringBuilder, out List&lt;int&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 133</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Admin" File="Import.aspx.cs" Line="165">Object 'reader' can be disposed more than once in method 'Admin_Import.ImportData(SqlConnection, SqlTransaction, out StringBuilder, out List&lt;int&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 165</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NormalizeAddress(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Admin" File="Import.aspx.cs" Line="279">Object 'reader' can be disposed more than once in method 'Admin_Import.NormalizeAddress(SqlConnection, SqlTransaction)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 279</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Admin_Streets" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SqlDataSourceFreeSquare_Inserting(System.Object,System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Admin" File="Streets.aspx.cs" Line="89">Object 'reader' can be disposed more than once in method 'Admin_Streets.SqlDataSourceFreeSquare_Inserting(object, SqlDataSourceCommandEventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 89</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Admin_Users" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ASPxButton_AllBuildings_ExportCSV_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Admin" File="Users.aspx.cs" Line="99">Object 'wordDocument' can be disposed more than once in method 'Admin_Users.ASPxButton_AllBuildings_ExportCSV_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 99</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateTemplateFile(DocumentFormat.OpenXml.Packaging.MainDocumentPart)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Admin" File="Users.aspx.cs" Line="136">Object 'reader' can be disposed more than once in method 'Admin_Users.UpdateTemplateFile(MainDocumentPart)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 136</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_draz4vua.dll">
   <Modules>
    <Module Name="app_web_draz4vua.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_MassTransfer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetNewRozpDocID()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="MassTransfer.aspx.cs" Line="544">Object 'reader' can be disposed more than once in method 'Reports1NF_MassTransfer.GetNewRozpDocID()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 544</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NF_Report1NFList_oldDb+ZvedZvitBuilder" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#Go()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFList_oldDB.aspx.cs" Line="154">The query string passed to 'DbCommand.CommandText.set(string)' in 'Reports1NF_Report1NFList_oldDb.ZvedZvitBuilder.Go()' could contain the following variables 'this.GetMainSql()'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_dzvwsx1t.dll">
   <Modules>
    <Module Name="app_web_dzvwsx1t.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="UserControls_SaveReportCtrl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TreeViewUserFolders_CustomJSProperties(System.Object,DevExpress.Web.CustomJSPropertiesEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\UserControls" File="SaveReportCtrl.ascx.cs" Line="110">Object 'reader' can be disposed more than once in method 'UserControls_SaveReportCtrl.TreeViewUserFolders_CustomJSProperties(object, CustomJSPropertiesEventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 110</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_e0a3rvcn.dll">
   <Modules>
    <Module Name="app_web_e0a3rvcn.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_Cabinet+BalansFreeSquarePhotosPdfBulder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Reports1NF_Cabinet.BalansFreeSquarePhotosPdfBulder' because it creates members of the following IDisposable types: 'PdfDocument'. If 'Reports1NF_Cabinet.BalansFreeSquarePhotosPdfBulder' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_fcssxrhb.dll">
   <Modules>
    <Module Name="app_web_fcssxrhb.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_Cabinet+PdfBulder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Reports1NF_Cabinet.PdfBulder' because it creates members of the following IDisposable types: 'PdfDocument'. If 'Reports1NF_Cabinet.PdfBulder' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_fosjy0fb.dll">
   <Modules>
    <Module Name="app_web_fosjy0fb.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_Cabinet+PdfBulder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Reports1NF_Cabinet.PdfBulder' because it creates members of the following IDisposable types: 'PdfDocument'. If 'Reports1NF_Cabinet.PdfBulder' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Reports1NF_OrgRentedList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PrimaryGridView_CustomCallback(System.Object,DevExpress.Web.ASPxGridViewCustomCallbackEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentedList.aspx.cs" Line="218">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgRentedList.PrimaryGridView_CustomCallback(object, ASPxGridViewCustomCallbackEventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 218</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NF_SendingBalanceObjectsDiagnostic" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="SendingBalanceObjectsDiagnostic.aspx.cs" Line="54">Object 'reader' can be disposed more than once in method 'Reports1NF_SendingBalanceObjectsDiagnostic.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 54</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_iol4skvi.dll">
   <Modules>
    <Module Name="app_web_iol4skvi.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Documents_DocRelations" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GridViewDocuments_CustomCallback(System.Object,DevExpress.Web.ASPxGridViewCustomCallbackEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Documents" File="DocRelations.aspx.cs" Line="158">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection, SqlTransaction)' in 'Documents_DocRelations.GridViewDocuments_CustomCallback(object, ASPxGridViewCustomCallbackEventArgs)' could contain the following variables 'dinfo.Item1', 'dinfo.Item2'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Documents" File="DocRelations.aspx.cs" Line="149">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection, SqlTransaction)' in 'Documents_DocRelations.GridViewDocuments_CustomCallback(object, ASPxGridViewCustomCallbackEventArgs)' could contain the following variables 'uinfo.Item1', 'uinfo.Item2', 'uinfo.Item2'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_juyfmajz.dll">
   <Modules>
    <Module Name="app_web_juyfmajz.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="NoMenu" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CustomizePhoneText()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite" File="NoMenu.master.cs" Line="69">Object 'reader' can be disposed more than once in method 'NoMenu.CustomizePhoneText()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 69</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_lg2122ta.dll">
   <Modules>
    <Module Name="app_web_lg2122ta.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_Report1NFFreeDetails" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BalansObjectExistsInReport" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_BalansObjectExistsInReport()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
             <Messages>
              <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFFreeDetails.aspx.cs" Line="375">Object 'r' can be disposed more than once in method 'Reports1NF_Report1NFFreeDetails.BalansObjectExistsInReport.get()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 375</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#CopySourceFiles(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFFreeDetails.aspx.cs" Line="1224">Object 'r' can be disposed more than once in method 'Reports1NF_Report1NFFreeDetails.CopySourceFiles(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1224</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CPMainPanel_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFFreeDetails.aspx.cs" Line="797">'Reports1NF_Report1NFFreeDetails.CPMainPanel_Callback(object, CallbackEventArgsBase)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFFreeDetails.aspx.cs" Line="178">'Reports1NF_Report1NFFreeDetails.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveChanges(System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFFreeDetails.aspx.cs" Line="522">Object 'reader' can be disposed more than once in method 'Reports1NF_Report1NFFreeDetails.SaveChanges(SqlConnection)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 522</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFFreeDetails.aspx.cs" Line="445">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_Report1NFFreeDetails.SaveChanges(SqlConnection)' could contain the following variables 'fieldList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFFreeDetails.aspx.cs" Line="525">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_Report1NFFreeDetails.SaveChanges(SqlConnection)' could contain the following variables 'fieldList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_myqsjut3.dll">
   <Modules>
    <Module Name="app_web_myqsjut3.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_ConveyancingConfirmation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CommitBalansObjectChanges(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="ConveyancingConfirmation.aspx.cs" Line="362">Object 'reader' can be disposed more than once in method 'Reports1NF_ConveyancingConfirmation.CommitBalansObjectChanges(int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 362</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNewAktID()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="ConveyancingConfirmation.aspx.cs" Line="520">Object 'reader' can be disposed more than once in method 'Reports1NF_ConveyancingConfirmation.GetNewAktID()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 520</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNewRozpDocID()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="ConveyancingConfirmation.aspx.cs" Line="494">Object 'reader' can be disposed more than once in method 'Reports1NF_ConveyancingConfirmation.GetNewRozpDocID()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 494</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendNotifications(System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="ConveyancingConfirmation.aspx.cs" Line="572">Object 'reader' can be disposed more than once in method 'Reports1NF_ConveyancingConfirmation.SendNotifications(int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 572</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="ConveyancingConfirmation.aspx.cs" Line="624">Object 'reader' can be disposed more than once in method 'Reports1NF_ConveyancingConfirmation.SendNotifications(int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 624</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NF_FreeCycle" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BuildAllData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="FreeCycle.aspx.cs" Line="612">Object 'reader' can be disposed more than once in method 'Reports1NF_FreeCycle.BuildAllData()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 612</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="FreeCycle.aspx.cs" Line="636">Object 'reader' can be disposed more than once in method 'Reports1NF_FreeCycle.BuildAllData()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 636</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="FreeCycle.aspx.cs" Line="664">Object 'reader' can be disposed more than once in method 'Reports1NF_FreeCycle.BuildAllData()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 664</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CPAddExistingOrendar_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="FreeCycle.aspx.cs" Line="936">'Reports1NF_FreeCycle.CPAddExistingOrendar_Callback(object, CallbackEventArgsBase)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CPDeleteArhivCard_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="FreeCycle.aspx.cs" Line="906">'Reports1NF_FreeCycle.CPDeleteArhivCard_Callback(object, CallbackEventArgsBase)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CPDeleteOrendar_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="FreeCycle.aspx.cs" Line="851">'Reports1NF_FreeCycle.CPDeleteOrendar_Callback(object, CallbackEventArgsBase)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CPMoveToArhiv_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="FreeCycle.aspx.cs" Line="965">'Reports1NF_FreeCycle.CPMoveToArhiv_Callback(object, CallbackEventArgsBase)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveChanges()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="FreeCycle.aspx.cs" Line="765">'Reports1NF_FreeCycle.SaveChanges()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NF_OrgBalansDeletedObject" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DeletedObjectExistsInReport" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_DeletedObjectExistsInReport()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
             <Messages>
              <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgBalansDeletedObject.aspx.cs" Line="201">Object 'r' can be disposed more than once in method 'Reports1NF_OrgBalansDeletedObject.DeletedObjectExistsInReport.get()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 201</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SaveChanges(System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgBalansDeletedObject.aspx.cs" Line="241">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_OrgBalansDeletedObject.SaveChanges(SqlConnection)' could contain the following variables 'fieldList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NF_OrgRentAgreement" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CopySourceFiles(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentAgreement.aspx.cs" Line="2781">Object 'r' can be disposed more than once in method 'Reports1NF_OrgRentAgreement.CopySourceFiles(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2781</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CPMainPanel_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentAgreement.aspx.cs" Line="2293">'Reports1NF_OrgRentAgreement.CPMainPanel_Callback(object, CallbackEventArgsBase)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CPObjSel_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentAgreement.aspx.cs" Line="3255">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgRentAgreement.CPObjSel_Callback(object, CallbackEventArgsBase)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3255</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentAgreement.aspx.cs" Line="185">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgRentAgreement.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 185</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentAgreement.aspx.cs" Line="215">'Reports1NF_OrgRentAgreement.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RentAgreementExistsInReport" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_RentAgreementExistsInReport()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
             <Messages>
              <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentAgreement.aspx.cs" Line="460">Object 'r' can be disposed more than once in method 'Reports1NF_OrgRentAgreement.RentAgreementExistsInReport.get()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 460</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SaveChanges(System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentAgreement.aspx.cs" Line="1977">Object 'r' can be disposed more than once in method 'Reports1NF_OrgRentAgreement.SaveChanges(SqlConnection)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1977</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentAgreement.aspx.cs" Line="2042">'Reports1NF_OrgRentAgreement.SaveChanges(SqlConnection)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentAgreement.aspx.cs" Line="1833">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_OrgRentAgreement.SaveChanges(SqlConnection)' could contain the following variables 'fieldList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentAgreement.aspx.cs" Line="2024">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_OrgRentAgreement.SaveChanges(SqlConnection)' could contain the following variables 'fieldList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_ngn2wqal.dll">
   <Modules>
    <Module Name="app_web_ngn2wqal.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_Cabinet+BalansFreeSquarePhotosPdfBulder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Reports1NF_Cabinet.BalansFreeSquarePhotosPdfBulder' because it creates members of the following IDisposable types: 'PdfDocument'. If 'Reports1NF_Cabinet.BalansFreeSquarePhotosPdfBulder' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_opilsmau.dll">
   <Modules>
    <Module Name="app_web_opilsmau.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Cards_AssessmentCard" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CPMainPanel_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="AssessmentCard.aspx.cs" Line="97">'Cards_AssessmentCard.CPMainPanel_Callback(object, CallbackEventArgsBase)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveChanges(System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="AssessmentCard.aspx.cs" Line="151">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Cards_AssessmentCard.SaveChanges(SqlConnection)' could contain the following variables 'fieldList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_pgq4oj4g.dll">
   <Modules>
    <Module Name="app_web_pgq4oj4g.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="OrendnaPlata_OrPlataVipiski" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateVipiski(TempFile,DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,System.DateTime,System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\OrendnaPlata_orig" File="OrPlataVipiski.aspx.cs" Line="294">Object 'reader' can be disposed more than once in method 'OrendnaPlata_OrPlataVipiski.GenerateVipiski(TempFile, SpreadsheetDocument, DateTime, DateTime)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 294</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\OrendnaPlata_orig" File="OrPlataVipiski.aspx.cs" Line="206">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'OrendnaPlata_OrPlataVipiski.GenerateVipiski(TempFile, SpreadsheetDocument, DateTime, DateTime)' could contain the following variables 'item.Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_qwdezk04.dll">
   <Modules>
    <Module Name="app_web_qwdezk04.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_FreeCyclePopupEditRenterOrg" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CPPopUp_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="FreeCyclePopupEditRenterOrg.aspx.cs" Line="232">Object 'r' can be disposed more than once in method 'Reports1NF_FreeCyclePopupEditRenterOrg.CPPopUp_Callback(object, CallbackEventArgsBase)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 232</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="FreeCyclePopupEditRenterOrg.aspx.cs" Line="71">Object 'r' can be disposed more than once in method 'Reports1NF_FreeCyclePopupEditRenterOrg.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 71</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_rivd140o.dll">
   <Modules>
    <Module Name="app_web_rivd140o.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_OrgInfo" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CPMainPanel_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgInfo.aspx.cs" Line="572">'Reports1NF_OrgInfo.CPMainPanel_Callback(object, CallbackEventArgsBase)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrgContributionRate()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgInfo.aspx.cs" Line="341">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgInfo.GetOrgContributionRate()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 341</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveChanges(System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgInfo.aspx.cs" Line="523">'Reports1NF_OrgInfo.SaveChanges(SqlConnection)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgInfo.aspx.cs" Line="499">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_OrgInfo.SaveChanges(SqlConnection)' could contain the following variables 'fieldList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NF_OrgRentedObject" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RentedObjectExistsInReport" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_RentedObjectExistsInReport()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
             <Messages>
              <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentedObject.aspx.cs" Line="206">Object 'r' can be disposed more than once in method 'Reports1NF_OrgRentedObject.RentedObjectExistsInReport.get()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 206</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SaveChanges(System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgRentedObject.aspx.cs" Line="297">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_OrgRentedObject.SaveChanges(SqlConnection)' could contain the following variables 'fieldList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_s0hfmq35.dll">
   <Modules>
    <Module Name="app_web_s0hfmq35.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_OrgBalansObject" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BalansObjectExistsInReport" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_BalansObjectExistsInReport()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
             <Messages>
              <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgBalansObject.aspx.cs" Line="470">Object 'r' can be disposed more than once in method 'Reports1NF_OrgBalansObject.BalansObjectExistsInReport.get()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 470</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#CopySourceFiles(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgBalansObject.aspx.cs" Line="1382">Object 'r' can be disposed more than once in method 'Reports1NF_OrgBalansObject.CopySourceFiles(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1382</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CPMainPanel_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgBalansObject.aspx.cs" Line="903">'Reports1NF_OrgBalansObject.CPMainPanel_Callback(object, CallbackEventArgsBase)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CPObjSel_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgBalansObject.aspx.cs" Line="1623">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgBalansObject.CPObjSel_Callback(object, CallbackEventArgsBase)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1623</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveChanges(System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgBalansObject.aspx.cs" Line="625">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgBalansObject.SaveChanges(SqlConnection)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 625</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgBalansObject.aspx.cs" Line="544">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_OrgBalansObject.SaveChanges(SqlConnection)' could contain the following variables 'fieldList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgBalansObject.aspx.cs" Line="628">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_OrgBalansObject.SaveChanges(SqlConnection)' could contain the following variables 'fieldList'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_scb32upx.dll">
   <Modules>
    <Module Name="app_web_scb32upx.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Account_Cache" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GlobalMemoryStatusEx(Account_Cache+MEMORYSTATUSEX)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Account_Cache.GlobalMemoryStatusEx(Account_Cache.MEMORYSTATUSEX)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Account" File="Cache.aspx.cs" Line="75">The query string passed to 'SqlCommand.CommandText.set(string)' in 'Account_Cache.Page_Load(object, EventArgs)' could contain the following variables 'key.Query'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_tb22unry.dll">
   <Modules>
    <Module Name="app_web_tb22unry.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_OrgArendaList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CPOrgEditor_Callback(System.Object,DevExpress.Web.CallbackEventArgsBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgArendaList.aspx.cs" Line="843">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgArendaList.CPOrgEditor_Callback(object, CallbackEventArgsBase)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 843</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgArendaList.aspx.cs" Line="130">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgArendaList.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 130</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgArendaList.aspx.cs" Line="168">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgArendaList.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 168</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgArendaList.aspx.cs" Line="204">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgArendaList.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 204</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgArendaList.aspx.cs" Line="239">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgArendaList.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 239</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgArendaList.aspx.cs" Line="275">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgArendaList.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 275</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrimaryGridView_CustomCallback(System.Object,DevExpress.Web.ASPxGridViewCustomCallbackEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="OrgArendaList.aspx.cs" Line="675">Object 'reader' can be disposed more than once in method 'Reports1NF_OrgArendaList.PrimaryGridView_CustomCallback(object, ASPxGridViewCustomCallbackEventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 675</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NF_SendingDeletedObjectsDiagnostic" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="SendingDeletedObjectsDiagnostic.aspx.cs" Line="56">Object 'reader' can be disposed more than once in method 'Reports1NF_SendingDeletedObjectsDiagnostic.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 56</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_tixvvll5.dll">
   <Modules>
    <Module Name="app_web_tixvvll5.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="OrendnaPlata_OrPlataVipiski" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateVipiski(TempFile,DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,System.DateTime,System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Yurdep" File="YurdepStart.aspx.cs" Line="298">Object 'reader' can be disposed more than once in method 'OrendnaPlata_OrPlataVipiski.GenerateVipiski(TempFile, SpreadsheetDocument, DateTime, DateTime)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 298</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Yurdep" File="YurdepStart.aspx.cs" Line="210">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'OrendnaPlata_OrPlataVipiski.GenerateVipiski(TempFile, SpreadsheetDocument, DateTime, DateTime)' could contain the following variables 'item.Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_ubjcklbg.dll">
   <Modules>
    <Module Name="app_web_ubjcklbg.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_Cabinet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ButtonPrint_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Cabinet.aspx.cs" Line="283">Object 'wordDocument' can be disposed more than once in method 'Reports1NF_Cabinet.ButtonPrint_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 283</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjectAndRentTotals(System.Data.SqlClient.SqlConnection,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Cabinet.aspx.cs" Line="590">Object 'reader' can be disposed more than once in method 'Reports1NF_Cabinet.GetObjectAndRentTotals(SqlConnection, Dictionary&lt;string, string&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 590</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Cabinet.aspx.cs" Line="631">Object 'reader' can be disposed more than once in method 'Reports1NF_Cabinet.GetObjectAndRentTotals(SqlConnection, Dictionary&lt;string, string&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 631</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Cabinet.aspx.cs" Line="674">Object 'reader' can be disposed more than once in method 'Reports1NF_Cabinet.GetObjectAndRentTotals(SqlConnection, Dictionary&lt;string, string&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 674</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Cabinet.aspx.cs" Line="706">Object 'reader' can be disposed more than once in method 'Reports1NF_Cabinet.GetObjectAndRentTotals(SqlConnection, Dictionary&lt;string, string&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 706</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrganizationProperties(System.Data.SqlClient.SqlConnection,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;,System.Decimal&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Cabinet.aspx.cs" Line="538">Object 'reader' can be disposed more than once in method 'Reports1NF_Cabinet.GetOrganizationProperties(SqlConnection, Dictionary&lt;string, string&gt;, ref decimal)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 538</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRentPaymentProperties(System.Data.SqlClient.SqlConnection,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;,System.Decimal)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Cabinet.aspx.cs" Line="738">Object 'reader' can be disposed more than once in method 'Reports1NF_Cabinet.GetRentPaymentProperties(SqlConnection, Dictionary&lt;string, string&gt;, decimal)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 738</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Cabinet.aspx.cs" Line="824">Object 'reader' can be disposed more than once in method 'Reports1NF_Cabinet.GetRentPaymentProperties(SqlConnection, Dictionary&lt;string, string&gt;, decimal)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 824</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Cabinet.aspx.cs" Line="883">Object 'reader' can be disposed more than once in method 'Reports1NF_Cabinet.GetRentPaymentProperties(SqlConnection, Dictionary&lt;string, string&gt;, decimal)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 883</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReportDates(System.Data.SqlClient.SqlConnection,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Cabinet.aspx.cs" Line="366">Object 'reader' can be disposed more than once in method 'Reports1NF_Cabinet.GetReportDates(SqlConnection, Dictionary&lt;string, string&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 366</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_uehh3cch.dll">
   <Modules>
    <Module Name="app_web_uehh3cch.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_Cabinet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite" File="SQLQuery.aspx.cs" Line="60">The query string passed to 'DbCommand.CommandText.set(string)' in 'Reports1NF_Cabinet.Page_Load(object, EventArgs)' could contain the following variables 'this.Request.QueryString["sql_query"]', 'this.Request.Form["sql_query"]'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_uhnee4ne.dll">
   <Modules>
    <Module Name="app_web_uhnee4ne.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports1NF_Report1NFFreeMap" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFBalansMap__GIS.aspx.cs" Line="113">Object 'reader' can be disposed more than once in method 'Reports1NF_Report1NFFreeMap.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 113</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="Report1NFBalansMap__GIS.aspx.cs" Line="28">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Reports1NF_Report1NFFreeMap.Page_Load(object, EventArgs)' could contain the following variables 'this.SqlQuery'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports1NF_SendingRentingAgreementsDiagnostic" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Reports1NF" File="SendingRentingAgreementsDiagnostic.aspx.cs" Line="59">Object 'reader' can be disposed more than once in method 'Reports1NF_SendingRentingAgreementsDiagnostic.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 59</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_xvl31ixx.dll">
   <Modules>
    <Module Name="app_web_xvl31ixx.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="OrendnaPlata_OrPlataObjectsUse" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateColumnDataValues(System.Data.SqlClient.SqlConnection,System.String,System.Collections.Generic.Dictionary`2&lt;System.Int32,System.Decimal&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\OrendnaPlata_orig" File="OrPlataObjectsUse.aspx.cs" Line="457">Object 'reader' can be disposed more than once in method 'OrendnaPlata_OrPlataObjectsUse.GenerateColumnDataValues(SqlConnection, string, Dictionary&lt;int, decimal&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 457</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\OrendnaPlata_orig" File="OrPlataObjectsUse.aspx.cs" Line="434">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'OrendnaPlata_OrPlataObjectsUse.GenerateColumnDataValues(SqlConnection, string, Dictionary&lt;int, decimal&gt;)' could contain the following variables 'fieldName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateObjectsUseFields()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\OrendnaPlata_orig" File="OrPlataObjectsUse.aspx.cs" Line="379">Object 'reader' can be disposed more than once in method 'OrendnaPlata_OrPlataObjectsUse.PopulateObjectsUseFields()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 379</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_yszh1y5h.dll">
   <Modules>
    <Module Name="app_web_yszh1y5h.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="OrendnaPlata_OrPlataObjectsUse" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateColumnDataValues(System.Data.SqlClient.SqlConnection,System.String,System.Collections.Generic.Dictionary`2&lt;System.Int32,System.Decimal&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\OrendnaPlata" File="OrPlataObjectsUse.aspx.cs" Line="457">Object 'reader' can be disposed more than once in method 'OrendnaPlata_OrPlataObjectsUse.GenerateColumnDataValues(SqlConnection, string, Dictionary&lt;int, decimal&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 457</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\OrendnaPlata" File="OrPlataObjectsUse.aspx.cs" Line="434">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'OrendnaPlata_OrPlataObjectsUse.GenerateColumnDataValues(SqlConnection, string, Dictionary&lt;int, decimal&gt;)' could contain the following variables 'fieldName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateObjectsUseFields()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\OrendnaPlata" File="OrPlataObjectsUse.aspx.cs" Line="379">Object 'reader' can be disposed more than once in method 'OrendnaPlata_OrPlataObjectsUse.PopulateObjectsUseFields()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 379</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OrendnaPlata_OrPlataVipiski" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateVipiski(TempFile,DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,System.DateTime,System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\OrendnaPlata" File="OrPlataVipiski.aspx.cs" Line="298">Object 'reader' can be disposed more than once in method 'OrendnaPlata_OrPlataVipiski.GenerateVipiski(TempFile, SpreadsheetDocument, DateTime, DateTime)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 298</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\OrendnaPlata" File="OrPlataVipiski.aspx.cs" Line="210">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'OrendnaPlata_OrPlataVipiski.GenerateVipiski(TempFile, SpreadsheetDocument, DateTime, DateTime)' could contain the following variables 'item.Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_zhbcw4pq.dll">
   <Modules>
    <Module Name="app_web_zhbcw4pq.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Cards_ObjCard" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ASPxButtonPrint_Delete(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="ObjCard.aspx.cs" Line="116">'Cards_ObjCard.ASPxButtonPrint_Delete(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="ObjCard.aspx.cs" Line="61">Object 'reader' can be disposed more than once in method 'Cards_ObjCard.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 61</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Cards_ObjCardArchive" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="ObjCardArchive.aspx.cs" Line="41">Object 'reader' can be disposed more than once in method 'Cards_ObjCardArchive.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 41</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="ObjCardArchive.aspx.cs" Line="67">Object 'reader' can be disposed more than once in method 'Cards_ObjCardArchive.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 67</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Cards_OrgCardArchive" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-01-01 02:02:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="OrgCardArchive.aspx.cs" Line="41">Object 'reader' can be disposed more than once in method 'Cards_OrgCardArchive.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 41</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\PROJECTS\DKVSOURCESFINALEDITION_v20\ReportWebSite\Cards" File="OrgCardArchive.aspx.cs" Line="67">Object 'reader' can be disposed more than once in method 'Cards_OrgCardArchive.Page_Load(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 67</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 232</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002">
   <Name>Do not lock on objects with weak identity</Name>
   <Description>Don't take locks on objects that may bleed across AppDomains or that don't have a strong identity.</Description>
   <Resolution Name="Default">{0} locks on a reference of type {1}. Replace this with a lock against an object with strong-identity.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182290.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalError</MessageLevel>
   <File Name="reliabilityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="ProvideDisposeBool">Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240">
   <Name>Implement ISerializable correctly</Name>
   <Description>If a type is assignable to ISerializable, it should implement GetObjectData. For unsealed types, the GetObjectData method should be callable and overridable by derived types.</Description>
   <Resolution Name="Default">Add an implementation of GetObjectData to type {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182342.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>Rethrow to preserve stack details</Name>
   <Description>Use the IL rethrow instruction to preserve original stack details when re-raising a caught exception.</Description>
   <Resolution Name="Default">{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Review SQL queries for security vulnerabilities</Name>
   <Description>A SQL command string built from user input is vulnerable to SQL injection attacks. Microsoft SQL Server and other database servers support stored procedures and parameterized SQL queries, which reduce the risk of injection attacks.</Description>
   <Resolution Name="WithNonLiterals">The query string passed to {0} in {1} could contain the following variables {2}. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
 <Exceptions>
  <Exception Keyword="CA0055" Kind="AssemblyLoad">
   <Type>Microsoft.FxCop.Common.AssemblyLoadException</Type>
   <ExceptionMessage>Could not load C:\Users\dima7777\AppData\Local\Temp\tmpB22F.tmp.cadir\bin\App_Web_wgelyeps.dll.</ExceptionMessage>
   <InnerType>System.Runtime.InteropServices.COMException</InnerType>
   <InnerExceptionMessage>Not enough memory resources are available to process this command. (Exception from HRESULT: 0x80070008)</InnerExceptionMessage>
   <InnerStackTrace>   at Microsoft.VisualStudio.CodeAnalysis.Common.AssemblyInfo.GetAssemblyInfo(String fileName)
   at Microsoft.FxCop.Engines.Phoenix.LoadAndResolutionHandler.ResolveAssemblyInfo(AssemblyName assemblyName, String referencingModuleLocation, Boolean optional)
   at Microsoft.FxCop.Engines.Phoenix.LoadAndResolutionHandler.GetAssemblyPath(AssemblySymbol assemblySymbol, AssemblyResolutionReason reason, String referencingModuleLocation)
   at Phx.Metadata.MetadataLoader.GetAssembly(Manifest manifest, String referencingModuleLocationPath)
   at Phx.Metadata.LoaderImplementation.GetAssemblyReferenceSymbol(UInt32 assemblyReferenceToken)
   at Phx.Metadata.MetadataLoader.LoadAssemblyReferences(AssemblyUnit unit)
   at Phx.Metadata.LoaderImplementation.MakeSpecialTypes()
   at Phx.Metadata.MetadataLoader.GetModule(String fileName, FileInfo fileInfo, AssemblyUnit unit)
   at Phx.Metadata.MetadataLoader.GetAssembly(String fileName, AssemblyUnit unit)
   at Phx.Metadata.MetadataLoader.LoadAssemblyDefinition(AssemblyUnit unit)
   at Microsoft.FxCop.Engines.Phoenix.AssemblyLoader.ProcessWorklist(MetadataLoader metadataLoader, Boolean ignoreErrors)
   at Microsoft.FxCop.Engines.Phoenix.AssemblyLoader.LoadAssembly(String filePath)
   at Microsoft.FxCop.Engines.Phoenix.PhoenixAnalysisEngine.AnalyzeInternal()</InnerStackTrace>
  </Exception>
 </Exceptions>
</FxCopReport>
