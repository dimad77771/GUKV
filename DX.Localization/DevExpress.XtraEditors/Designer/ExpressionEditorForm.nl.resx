<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>Annuleren</value>
  </data>
  <data name="Condition.Caption" xml:space="preserve">
    <value>Editor voor voorwaarde-expressies</value>
  </data>
  <data name="Condition.Text" xml:space="preserve">
    <value>Voorwaarde-editor</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Expressie-editor</value>
  </data>
  <data name="Constants.Text" xml:space="preserve">
    <value>Constanten</value>
  </data>
  <data name="Fields.Text" xml:space="preserve">
    <value>Velden</value>
  </data>
  <data name="Tan.Description" xml:space="preserve">
    <value>Tan(Waarde) Geeft als resultaat de tangens van de hoek (in radialen).</value>
  </data>
  <data name="Remove.Description" xml:space="preserve">
    <value>Remove(Tekenreeks, Startpositie, Lengte) Een opgegeven aantal tekens verwijderen vanaf de opgegeven positie.</value>
  </data>
  <data name="GetSecond.Description" xml:space="preserve">
    <value>GetSecond(DatumTijd) Haalt seconden op uit de gedefinieerde datum/tijd.</value>
  </data>
  <data name="BigMul.Description" xml:space="preserve">
    <value>BigMul(Waarde1, Waarde2) Geeft als resultaat een Int64 met het volledige product van de twee opgegeven 32-bits getallen.</value>
  </data>
  <data name="AddSeconds.Description" xml:space="preserve">
    <value>AddSeconds(DatumTijd, AantalSeconden) Geeft als resultaat een datum-/tijdwaarde die het opgegeven aantal seconden van de opgegeven DatumTijd af ligt.</value>
  </data>
  <data name="Greater.Description" xml:space="preserve">
    <value>Operator 'Groter dan'. Gebruikt om expressies te vergelijken.</value>
  </data>
  <data name="Len.Description" xml:space="preserve">
    <value>Len(Waarde) Geeft als resultaat een geheel getal met het aantal tekens in een tekenreeks óf het nominale aantal bytes dat nodig is om een variabele op te slaan.</value>
  </data>
  <data name="Tanh.Description" xml:space="preserve">
    <value>Tanh(Waarde) Geeft als resultaat de hyperbolische tangens van de hoek (in radialen).</value>
  </data>
  <data name="Sqr.Description" xml:space="preserve">
    <value>Sqr(Waarde) Geeft als resultaat de vierkantswortel van een gegeven getal.</value>
  </data>
  <data name="Plus.Description" xml:space="preserve">
    <value>Hiermee wordt de waarde van één numerieke expressie opgeteld bij een andere, of worden twee tekenreeksen samengevoegd.</value>
  </data>
  <data name="Asin.Description" xml:space="preserve">
    <value>Asin(Waarde) Geeft als resultaat de boogcosinus van een getal (de hoek, in radialen, waarvan de sinus de gegeven float-expressie is).</value>
  </data>
  <data name="functionsTypes.Properties.DateTimeItems" xml:space="preserve">
    <value>Datum/tijd</value>
  </data>
  <data name="Null.Description" xml:space="preserve">
    <value>Vertegenwoordigt een NULL-verwijzing (een verwijzing die naar geen object verwijst).</value>
  </data>
  <data name="Now.Description" xml:space="preserve">
    <value>Now() Geeft als resultaat de huidige systeemdatum en -tijd.</value>
  </data>
  <data name="GetDate.Description" xml:space="preserve">
    <value>GetDate(DatumTijd) Haalt een datum op uit de gedefinieerde datum/tijd.</value>
  </data>
  <data name="Not.Description" xml:space="preserve">
    <value>Voert een logische onderhandeling op een expressie uit.</value>
  </data>
  <data name="Fields Description Prefix" xml:space="preserve">
    <value>Het type van dit veld is:</value>
  </data>
  <data name="BitwiseXor.Description" xml:space="preserve">
    <value>Voert een logische uitsluitingsbewerking op twee Booleaanse expressies of een bitsgewijze uitsluiting op twee numerieke expressies uit.</value>
  </data>
  <data name="Log10.Description" xml:space="preserve">
    <value>Log10(Waarde) Berekent de logaritme met grondtal 10 van een opgegeven getal.</value>
  </data>
  <data name="CurrentRowIndex.Description" xml:space="preserve">
    <value>Geeft als resultaat de index van de huidige gegevensrij in een databron. De basis van de index is 0.</value>
  </data>
  <data name="Or.Description" xml:space="preserve">
    <value>Voert een logische splitsing op twee Boole-expressies uit.</value>
  </data>
  <data name="Cosh.Description" xml:space="preserve">
    <value>Cosh(Waarde) Geeft als resultaat de hyperbolische cosinus van de hoek (in radialen).</value>
  </data>
  <data name="Upper.Description" xml:space="preserve">
    <value>Upper(Tekenreeks) Zet de tekenreeks om in hoofdletters.</value>
  </data>
  <data name="Cos.Description" xml:space="preserve">
    <value>Cos(Waarde) Geeft als resultaat de cosinus van de hoek (in radialen).</value>
  </data>
  <data name="Concat.Description" xml:space="preserve">
    <value>Concat(Tekenreeks1, ... , TekenreeksN) Geeft als resultaat een tekenreeks waarin de huidige tekenreeks is samengevoegd met eventuele aanvullende tekenreeksen.</value>
  </data>
  <data name="AddTimeSpan.Description" xml:space="preserve">
    <value>AddTimeSpan(DatumTijd, Tijspanne) Geeft als resultaat een datum-/tijdwaarde die de opgegeven tijdspanne van de opgegeven DatumTijd af ligt.</value>
  </data>
  <data name="GetMilliSecond.Description" xml:space="preserve">
    <value>GetMilliSecond(DatumTijd) Haalt milliseconden op uit de gedefinieerde datum/tijd.</value>
  </data>
  <data name="Trim.Description" xml:space="preserve">
    <value>Trim(Tekenreeks) Hiermee worden alle spaties aan het begin en aan het einde van de tekenreeks verwijderd.</value>
  </data>
  <data name="Sinh.Description" xml:space="preserve">
    <value>Sinh(Waarde) Geeft als resultaat de hyperbolische sinus van de hoek (in radialen).</value>
  </data>
  <data name="True.Description" xml:space="preserve">
    <value>Vertegenwoordigt de Boole-waarde Waar.</value>
  </data>
  <data name="IsNull.Description" xml:space="preserve">
    <value>IsNull(Waarde) Geeft als resultaat Waar als de opgegeven waarde NULL is.</value>
  </data>
  <data name="And.Description" xml:space="preserve">
    <value>Voert een logische conjunctie op twee expressies uit.</value>
  </data>
  <data name="Divide.Description" xml:space="preserve">
    <value>De eerste operand delen door de tweede.</value>
  </data>
  <data name="GetTimeOfDay.Description" xml:space="preserve">
    <value>GetTimeOfDay(DatumTijd) Haalt de tijd van de dag op uit de gedefinieerde datum/tijd, in tikken.</value>
  </data>
  <data name="Substring3param.Description" xml:space="preserve">
    <value>Substring(Tekenreeks, Startpositie, Lengte) Geeft als resultaat een subtekenreeks van de tekenreeks. De subtekenreeks begint op de startpositie en heeft de opgegeven lengte.</value>
  </data>
  <data name="Parameters Description Prefix" xml:space="preserve">
    <value>Het type van deze parameter is:</value>
  </data>
  <data name="Equal.Description" xml:space="preserve">
    <value>Geeft WAAR als resultaat als beide operanden dezelfde waarde hebben; anders wordt ONWAAR geretourneerd.</value>
  </data>
  <data name="AddYears.Description" xml:space="preserve">
    <value>AddYears(DatumTijd, AantalJaren) Geeft als resultaat een datum-/tijdwaarde die het opgegeven aantal jaren van de opgegeven DatumTijd af ligt.</value>
  </data>
  <data name="AddMinutes.Description" xml:space="preserve">
    <value>AddMinutes(DatumTijd, AantalMinuten) Geeft als resultaat een datum-/tijdwaarde die het opgegeven aantal minuten van de opgegeven DatumTijd af ligt.</value>
  </data>
  <data name="GetYear.Description" xml:space="preserve">
    <value>GetYear(DatumTijd) Haalt een jaar op uit de gedefinieerde datum/tijd.</value>
  </data>
  <data name="functionsTypes.Properties.AllItems" xml:space="preserve">
    <value>(Alles)</value>
  </data>
  <data name="ToStr.Description" xml:space="preserve">
    <value>ToStr(Waarde) Geeft als resultaat een tekenreeksweergave van een object.</value>
  </data>
  <data name="RowCount.Description" xml:space="preserve">
    <value>Geeft als resultaat het totale aantal gegevensrijen in een gegevensbron.</value>
  </data>
  <data name="Sin.Description" xml:space="preserve">
    <value>Sin(Waarde) Geeft als resultaat de sinus van de hoek (in radialen).</value>
  </data>
  <data name="UnboundColumn.Caption" xml:space="preserve">
    <value>Expressie-editor</value>
  </data>
  <data name="Expression.Text" xml:space="preserve">
    <value>Expressie-editor</value>
  </data>
  <data name="functionsTypes.Properties.MathItems" xml:space="preserve">
    <value>Rekenkundig</value>
  </data>
  <data name="AddMonths.Description" xml:space="preserve">
    <value>AddMonths(DatumTijd, AantalMaanden) Geeft als resultaat een datum-/tijdwaarde die het opgegeven aantal maanden van de opgegeven DatumTijd af ligt.</value>
  </data>
  <data name="Replace.Description" xml:space="preserve">
    <value>Replace(Tekenreeks, Subtekenreeks2, Tekenreeks3) Geeft als resultaat een kopie van Tekenreeks1, waarin SubTekenreeks2 is vervangen door Tekenreeks3.</value>
  </data>
  <data name="Modulo.Description" xml:space="preserve">
    <value>Geeft als resultaat het restant (modulus) dat wordt verkregen door één numerieke expressie te delen door een andere.</value>
  </data>
  <data name="Iif.Description" xml:space="preserve">
    <value>Iif(Expressie, Alswaar, Alsonwaar) Geeft als resultaat WaarDeel of OnwaarDeel, afhankelijk van de evaluatie van de Boole-expressie.</value>
  </data>
  <data name="In.Description" xml:space="preserve">
    <value>In (,,,) Test de aanwezigheid van een eigenschap in een object.</value>
  </data>
  <data name="Insert.Description" xml:space="preserve">
    <value>Insert(Tekenreeks1, Startpositie, Tekenreeks2) Hiermee voegt u Tekenreeks2 in op de opgegeven Startpositie in Tekenreeks1</value>
  </data>
  <data name="Ascii.Description" xml:space="preserve">
    <value>Ascii(tekenreeks) Geeft als resultaat de waarde van de ASCII-code van het meest linkse teken in een tekenexpressie.</value>
  </data>
  <data name="Multiply.Description" xml:space="preserve">
    <value>De waarde van twee expressies vermenigvuldigen.</value>
  </data>
  <data name="Like.Description" xml:space="preserve">
    <value>Vergelijkt een tekenreeks met een patroon. Als de waarde van de tekenreeks overeenkomt met het patroon, is het resultaat WAAR. Als de tekenreeks niet overeenkomt met het patroon, is het resultaat ONWAAR. Als zowel de tekenreeks als het patroon leeg is, is het resultaat WAAR.</value>
  </data>
  <data name="CharIndex.Description" xml:space="preserve">
    <value>CharIndex(Tekenreeks1, Tekenreeks2) Geeft als resultaat de startpositie van Tekenreeks1 binnen Tekenreeks2, gerekend vanaf de nultekenpositie tot aan het einde van een tekenreeks.</value>
  </data>
  <data name="LessOrEqual.Description" xml:space="preserve">
    <value>Operator 'Kleiner dan of gelijk aan'. Gebruikt om expressies te vergelijken.</value>
  </data>
  <data name="Sign.Description" xml:space="preserve">
    <value>Sign(Waarde) Geeft als resultaat het positieve (+1), nul- (0), of negatieve (-1) teken van de gegeven expressie.</value>
  </data>
  <data name="AddDays.Description" xml:space="preserve">
    <value>AddDays(DatumTijd, AantalDagen) Geeft als resultaat een datum-/tijdwaarde die het opgegeven aantal dagen van de opgegeven DatumTijd af ligt.</value>
  </data>
  <data name="False.Description" xml:space="preserve">
    <value>Vertegenwoordigt de Boole-waarde Onwaar.</value>
  </data>
  <data name="Floor.Description" xml:space="preserve">
    <value>Floor(Waarde) Geeft als resultaat het grootste gehele getal dat kleiner is dan of gelijk is aan de gegeven numerieke expressie.</value>
  </data>
  <data name="IsNullOrEmpty.Description" xml:space="preserve">
    <value>IsNullOrEmpty(Tekenreeks) Geeft als resultaat Waar als het opgegeven tekenreeksobject NULL is of als de tekenreeks leeg is, anders Onwaar.</value>
  </data>
  <data name="Log.Description" xml:space="preserve">
    <value>Log(Waarde) Geeft als resultaat de natuurlijke logaritme van een opgegeven getal.</value>
  </data>
  <data name="GetHour.Description" xml:space="preserve">
    <value>GetHour(DatumTijd) Haalt een uur op uit de gedefinieerde datum/tijd.</value>
  </data>
  <data name="Functions.Text" xml:space="preserve">
    <value>Functies</value>
  </data>
  <data name="GreaterOrEqual.Description" xml:space="preserve">
    <value>Operator 'Groter dan of gelijk aan'. Gebruikt om expressies te vergelijken.</value>
  </data>
  <data name="Today.Description" xml:space="preserve">
    <value>Vandaag() Geeft als resultaat de huidige datum. Ongeacht de feitelijke tijd, wordt de middernachttijd van de huidige datum geretourneerd.</value>
  </data>
  <data name="Power.Description" xml:space="preserve">
    <value>Power(Waarde, Macht) Verheft het opgegeven getal tot de opgegeven macht.</value>
  </data>
  <data name="Acos.Description" xml:space="preserve">
    <value>Acos(Waarde) Geeft als resultaat de boogcosinus van een getal (de hoek, in radialen, waarvan de cosinus de gegeven float-expressie is).</value>
  </data>
  <data name="BitwiseAnd.Description" xml:space="preserve">
    <value>Voert een bitsgewijze logische EN-bewerking tussen twee gehele getallen uit.</value>
  </data>
  <data name="CharIndex3Param.Description" xml:space="preserve">
    <value>CharIndex(Tekenreeks1, Tekenreeks2, Beginpositie) Geeft als resultaat de beginpositie van Tekenreeks1 binnen Tekenreeks2, gerekend vanaf de beginpositie tot aan het einde van de tekenreeks.</value>
  </data>
  <data name="Minus.Description" xml:space="preserve">
    <value>Het verschil tussen twee getallen zoeken.</value>
  </data>
  <data name="GetDay.Description" xml:space="preserve">
    <value>GetDay(DatumTijd) Haalt een dag op uit de gedefinieerde datum/tijd.</value>
  </data>
  <data name="Between.Description" xml:space="preserve">
    <value>Between (,) Hiermee kunt u een bereik testen. Geeft als resultaat WAAR als een waarde groter is dan of gelijk is aan de eerste operand en kleiner is dan of gelijk is aan de tweede operand.</value>
  </data>
  <data name="Variables.Text" xml:space="preserve">
    <value>Variabelen</value>
  </data>
  <data name="GetDayOfWeek.Description" xml:space="preserve">
    <value>GetDayOfWeek(DatumTijd) Haalt een dag van de week op uit de gedefinieerde datum/tijd.</value>
  </data>
  <data name="Atn.Description" xml:space="preserve">
    <value>Atn(Waarde) Geeft als resultaat de boogtangens van een getal (de hoek in radialen, waarvan de tangens de gegeven float-expressie is).</value>
  </data>
  <data name="Operators.Text" xml:space="preserve">
    <value>Operatoren</value>
  </data>
  <data name="Reverse.Description" xml:space="preserve">
    <value>Reverse(Tekenreeks) Draait de volgorde van elementen in een tekenreeks om.</value>
  </data>
  <data name="Abs.Description" xml:space="preserve">
    <value>Abs(Waarde) Geeft de absolute, positieve waarde van de gegeven numerieke expressie als resultaat.</value>
  </data>
  <data name="GetDayOfYear.Description" xml:space="preserve">
    <value>GetDayOfYear(DatumTijd) Haalt een dag van het jaar op uit de gedefinieerde datum/tijd.</value>
  </data>
  <data name="Lower.Description" xml:space="preserve">
    <value>Lower(Tekenreeks) Geeft als resultaat de tekenreeks in kleine letters.</value>
  </data>
  <data name="Less.Description" xml:space="preserve">
    <value>Operator 'Kleiner dan'. Gebruikt om expressies te vergelijken.</value>
  </data>
  <data name="GetMonth.Description" xml:space="preserve">
    <value>GetMonth(DatumTijd) Haalt een maand op uit de gedefinieerde datum/tijd.</value>
  </data>
  <data name="UtcNow.Description" xml:space="preserve">
    <value>UtcNow() Geeft als resultaat de huidige systeemdatum en -tijd, uitgedrukt in Coordinated Universal Time (UTC).</value>
  </data>
  <data name="Exp.Description" xml:space="preserve">
    <value>Exp(Waarde) Geeft als resultaat de exponentiële waarde van de gegeven float-expressie.</value>
  </data>
  <data name="AddTicks.Description" xml:space="preserve">
    <value>AddTicks(DatumTijd, AantalTikken) Geeft als resultaat een datum-/tijdwaarde die het opgegeven aantal tikken van de opgegeven DatumTijd af ligt.</value>
  </data>
  <data name="Round.Description" xml:space="preserve">
    <value>Round(Waarde) Rondt de gegeven waarde af naar het dichtstbijzijnde gehele getal.</value>
  </data>
  <data name="GridFields Description Prefix" xml:space="preserve">
    <value>Veldgegevens  Bijschrift: {1}  Het type van dit veld is: {2}</value>
  </data>
  <data name="AddMilliSeconds.Description" xml:space="preserve">
    <value>AddMilliSeconds(DatumTijd, AantalMilliseconden) Geeft als resultaat een datum-/tijdwaarde die het opgegeven aantal milliseconden van de opgegeven DatumTijd af ligt.</value>
  </data>
  <data name="Char.Description" xml:space="preserve">
    <value>Char(Getal) Converteert een integer-ASCII-code naar een teken.</value>
  </data>
  <data name="Log2Param.Description" xml:space="preserve">
    <value>Log(Waarde, Grondtal) Geeft als resultaat de logaritme van een opgegeven getal in een bepaald grondtal.</value>
  </data>
  <data name="functionsTypes.EditValue" xml:space="preserve">
    <value>(Alles)</value>
  </data>
  <data name="AddHours.Description" xml:space="preserve">
    <value>AddHours(DatumTijd, AantalUren) Geeft als resultaat een datum-/tijdwaarde die het opgegeven aantal uren van de opgegeven DatumTijd af ligt.</value>
  </data>
  <data name="GetMinute.Description" xml:space="preserve">
    <value>GetMinute(DatumTijd) Haalt minuten op uit de gedefinieerde datum/tijd.</value>
  </data>
  <data name="Atn2.Description" xml:space="preserve">
    <value>Atn2(Waarde1, Waarde2) Geeft als resultaat de hoek waarvan de tangens het quotiënt van twee opgegeven getallen is, in radialen.</value>
  </data>
  <data name="Ceiling.Description" xml:space="preserve">
    <value>Ceiling(Waarde) Geeft als resultaat het kleinste gehele getal dat groter is dan of gelijk is aan de gegeven numerieke expressie.</value>
  </data>
  <data name="NotEqual.Description" xml:space="preserve">
    <value>Geeft WAAR als resultaat als de operanden niet dezelfde waarde hebben; anders wordt ONWAAR geretourneerd.</value>
  </data>
  <data name="functionsTypes.Properties.LogicalItems" xml:space="preserve">
    <value>Logisch</value>
  </data>
  <data name="Substring2param.Description" xml:space="preserve">
    <value>Substring(Tekenreeks, Startpositie) Geeft als resultaat een subtekenreeks van de tekenreeks. De subtekenreeks begint op de startpositie.</value>
  </data>
  <data name="DateDiffHour.Description" xml:space="preserve">
    <value>DateDiffHour(startdatum, einddatum) Geeft als resultaat het aantal uurgrenzen tussen twee datums waarvoor geen null-waarde is toegestaan.</value>
  </data>
  <data name="Max.Description" xml:space="preserve">
    <value>Max(Waarde1, Waarde2) Geeft als resultaat de maximale waarde van de opgegeven waarden.</value>
  </data>
  <data name="PadRight.Description" xml:space="preserve">
    <value>PadRight(Tekenreeks, Lengte) Hiermee lijnt u tekens in de opgegeven tekenreeks rechts uit, waarbij de tekenreeks aan de linkerkant met een of meer spaties wordt opgevuld tot de opgegeven totale lengte.</value>
  </data>
  <data name="DateDiffMinute.Description" xml:space="preserve">
    <value>DateDiffMinute(startdatum, einddatum) Geeft als resultaat het aantal minuutgrenzen tussen twee datums waarvoor geen null-waarde is toegestaan.</value>
  </data>
  <data name="DateDiffMonth.Description" xml:space="preserve">
    <value>DateDiffMonth(startdatum, einddatum) Geeft als resultaat het aantal maandgrenzen tussen twee datums waarvoor geen null-waarde is toegestaan.</value>
  </data>
  <data name="PadLeft.Description" xml:space="preserve">
    <value>PadLeft(Tekenreeks, Lengte) Hiermee lijnt u tekens in de opgegeven tekenreeks links uit, waarbij de tekenreeks aan de linkerkant met een of meer spaties wordt opgevuld tot de opgegeven totale lengte.</value>
  </data>
  <data name="functionsTypes.Properties.StringItems" xml:space="preserve">
    <value>Tekenreeks</value>
  </data>
  <data name="BitwiseOr.Description" xml:space="preserve">
    <value>Vergelijkt elke bit van de eerste operand met de bijbehorende bit van de tweede operand. Als een of beide bits 1 zijn, wordt de bijbehorende resultaatbit ingesteld op 1. Anders wordt de bijbehorende resultaatbit ingesteld op 0.</value>
  </data>
  <data name="PadRight3Param.Description" xml:space="preserve">
    <value>PadRight(Tekenreeks, Lengte, Teken) Hiermee lijnt u tekens in de opgegeven tekenreeks rechts uit, waarbij de tekenreeks aan de linkerkant met het opgegeven teken wordt opgevuld tot de opgegeven totale lengte.</value>
  </data>
  <data name="DateDiffSecond.Description" xml:space="preserve">
    <value>DateDiffSecond(startdatum, einddatum) Geeft als resultaat het aantal secondegrenzen tussen twee datums waarvoor geen null-waarde is toegestaan.</value>
  </data>
  <data name="DateDiffMilliSecond.Description" xml:space="preserve">
    <value>DateDiffMilliSecond(startdatum, einddatum) Geeft als resultaat het aantal millisecondegrenzen tussen twee datums waarvoor geen null-waarde is toegestaan.</value>
  </data>
  <data name="DateDiffTick.Description" xml:space="preserve">
    <value>DateDiffTick(startdatum, einddatum) Geeft als resultaat het aantal maatstreepgrenzen tussen twee datums waarvoor geen null-waarde is toegestaan.</value>
  </data>
  <data name="PadLeft3Param.Description" xml:space="preserve">
    <value>PadLeft(Tekenreeks, Lengte, Teken) Hiermee lijnt u tekens in de opgegeven tekenreeks links uit, waarbij de tekenreeks aan de linkerkant met het opgegeven teken wordt opgevuld tot de opgegeven totale lengte.</value>
  </data>
  <data name="DateDiffYear.Description" xml:space="preserve">
    <value>DateDiffYear(startdatum, einddatum) Geeft als resultaat het aantal jaargrenzen tussen twee datums waarvoor geen null-waarde is toegestaan.</value>
  </data>
  <data name="DateDiffDay.Description" xml:space="preserve">
    <value>DateDiffDay(startdatum, einddatum) Geeft als resultaat het aantal daggrenzen tussen twee datums waarvoor geen null-waarde is toegestaan.</value>
  </data>
  <data name="Rnd.Description" xml:space="preserve">
    <value>Rnd() Geeft als resultaat een willekeurig getal dat kleiner is dan 1, maar groter dan of gelijk aan nul.</value>
  </data>
  <data name="Min.Description" xml:space="preserve">
    <value>Min(Waarde1, Waarde2) Geeft als resultaat de minimale waarde van de opgegeven waarden.</value>
  </data>
  <data name="StartsWith.Description" xml:space="preserve">
    <value>BegintMet(String, BeginString)
Geeft Waar terug als het begin van String overeenkomt met BeginString; anders wordt Onwaar terug gegeven.</value>
  </data>
  <data name="Round2Param.Description" xml:space="preserve">
    <value>Afronden(Waarde, Precisie)
Rond de opgegeven waarde af naar het dichtstbijzijnde gehele getal, of naar het opgegeven aantal decimalen.</value>
  </data>
  <data name="Contains.Description" xml:space="preserve">
    <value>Bevat(String, SubString)
Geeft Waar terug als SubString voorkomt binnen string; anders wordt Onwaar terug gegeven.</value>
  </data>
  <data name="EndsWith.Description" xml:space="preserve">
    <value>EindigtMet(String, EindeString)
Geeft Waar terug als het einde van String overeenkomt met EindeString; anders wordt Onwaar terug gegeven.</value>
  </data>
</root>