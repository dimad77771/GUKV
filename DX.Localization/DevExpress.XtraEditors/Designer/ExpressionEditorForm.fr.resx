<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="And.Description" xml:space="preserve">
    <value>Effectue une conjonction logique sur deux expressions.</value>
  </data>
  <data name="Lower.Description" xml:space="preserve">
    <value>Lower(Chaine)
Retourne la chaine en minuscule.</value>
  </data>
  <data name="AddMinutes.Description" xml:space="preserve">
    <value>AddMinutes(DateHeure, NombreMinutes)
Retourne une valeur date/heure qui est le nombre de minutes spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="CharIndex3Param.Description" xml:space="preserve">
    <value>CharIndex(Chaine1, Chaine2, PositionDepart)
Retourne la position de départ de Chaine1 dans Chaine2 en commençant la rechercher à la position PositionDepart jusqu'à la fin de la chaine.</value>
  </data>
  <data name="Tan.Description" xml:space="preserve">
    <value>Tan(Valeur)
Retourne la tangente de l'angle défini en radians.</value>
  </data>
  <data name="PadLeft.Description" xml:space="preserve">
    <value>PadLeft(Chaine, Longueur)
Aligne les caractères à gauche dans la chaine définie, complétant son coté droit par le caractère espace pour arriver à la longueur spécifiée.</value>
  </data>
  <data name="AddTicks.Description" xml:space="preserve">
    <value>AddTicks(DateHeure, NombreTicks)
Retourne une valeur date/heure qui est le nombre de ticks spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="CharIndex.Description" xml:space="preserve">
    <value>CharIndex(Chaine1, Chaine2)$
Retourne la position de départ de Chaine1 dans Chaine2 en commençant la rechercher à la position 0 jusqu'à la fin de la chaine.</value>
  </data>
  <data name="PadRight.Description" xml:space="preserve">
    <value>PadRight(Chaine, Longueur)
Aligne les caractères à droite dans la chaine définie, complétant son coté gauche par le caractère espace pour arriver à la longueur spécifiée.</value>
  </data>
  <data name="Substring2param.Description" xml:space="preserve">
    <value>Substring(String, StartPosition)
Retourne une sous-chaine à partir d'une chaine. La sous-chaine commence à la position StartPosition.</value>
  </data>
  <data name="Remove.Description" xml:space="preserve">
    <value>Remove(Chaine, PositionDepart, Longueur)
Supprime un nombre spécifié de caractères dans Chaine en commençant à la position spécifiée.</value>
  </data>
  <data name="Or.Description" xml:space="preserve">
    <value>Effectue une disjonction logique sur deux expressions booléennes.</value>
  </data>
  <data name="Round.Description" xml:space="preserve">
    <value>Round(Valeur)
Arrondie la valeur donnée à l'entier le plus proche.</value>
  </data>
  <data name="IsNullOrEmpty.Description" xml:space="preserve">
    <value>IsNullOrEmpty(Chaine)
Retourne vrai si l'objet chaine spécifiée est nul ou une chaine vide, dans les autres cas, faux est retourné.</value>
  </data>
  <data name="AddHours.Description" xml:space="preserve">
    <value>AddHours(DateHeure, NombreHeures)
Retourne une valeur date/heure qui est le nombre d'heures spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="GreaterOrEqual.Description" xml:space="preserve">
    <value>Opérateur supérieur ou égal à. Utilisé pour comparer des expressions.</value>
  </data>
  <data name="GetDate.Description" xml:space="preserve">
    <value>GetDate(DateHeure)
Extrait la date à partir d'un Date/Heure.</value>
  </data>
  <data name="Len.Description" xml:space="preserve">
    <value>Len(Valeur)
Retourne un entier contenant soit le nombre de caractères dans une chaine soit le nombre de bit requis pour stocker une variable..</value>
  </data>
  <data name="functionsTypes.Properties.DateTimeItems" xml:space="preserve">
    <value>Date-heure</value>
  </data>
  <data name="AddYears.Description" xml:space="preserve">
    <value>AddYears(DateHeure, NombreAnnees)
Retourne une valeur date/heure qui est le nombre d'années spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="functionsTypes.Properties.StringItems" xml:space="preserve">
    <value>Chaîne</value>
  </data>
  <data name="AddTimeSpan.Description" xml:space="preserve">
    <value>AddTimeSpan(DateHeure, Duree)
Retourne une valeur date/heure qui est la durée spécifiée ajoutée à la valeur date/heure spécifiée.</value>
  </data>
  <data name="Rnd.Description" xml:space="preserve">
    <value>Rnd()
Retourne un nombre aléatoire qui est inférieur à 1 mais supérieur ou égal à 0.</value>
  </data>
  <data name="Operators.Text" xml:space="preserve">
    <value>Opérateurs</value>
  </data>
  <data name="Asin.Description" xml:space="preserve">
    <value>Asin(Valeur)
Retourne l'arcsinus d'un nombre (l'angle, en radians, dont le sinus est le nombre flottant donné).</value>
  </data>
  <data name="BitwiseXor.Description" xml:space="preserve">
    <value>Effectue une exclusion logique sur deux expressions booléennes ou une exclusion bit à bit sur deux expressions numériques.</value>
  </data>
  <data name="GetYear.Description" xml:space="preserve">
    <value>GetYear(DateHeure)
Extrait une année à partir d'un Date/Heure.</value>
  </data>
  <data name="Floor.Description" xml:space="preserve">
    <value>Floor(Valeur)
Retourne le plus grand entier inférieur ou égal à l'expression numérique donnée.</value>
  </data>
  <data name="CurrentRowIndex.Description" xml:space="preserve">
    <value>Retourne l'index de la ligne de donnée courante dans une source de données. A noter que l'index commence à 0.</value>
  </data>
  <data name="AddDays.Description" xml:space="preserve">
    <value>AddDays(DateHeure, NombreJours)
Retourne une valeur date/heure qui est le nombre de jours spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="Sign.Description" xml:space="preserve">
    <value>Sign(Valeur)
Retourne le signe positif (+1), zéro (0), ou négatif (-1) de l'expression donnée.</value>
  </data>
  <data name="Parameters Description Prefix" xml:space="preserve">
    <value>Le type du paramètre est :</value>
  </data>
  <data name="Log.Description" xml:space="preserve">
    <value>Log(Valeur)
Retourne le logarithme naturel d'un nombre spécifié.</value>
  </data>
  <data name="functionsTypes.Properties.AllItems" xml:space="preserve">
    <value>(Tous)</value>
  </data>
  <data name="Less.Description" xml:space="preserve">
    <value>Opérateur inférieur à. Utilisé pour comparer des expressions.</value>
  </data>
  <data name="Sinh.Description" xml:space="preserve">
    <value>Sinh(Valeur)
Retourne le sinus hyperbolique de l'angle défini en radians.</value>
  </data>
  <data name="GetDay.Description" xml:space="preserve">
    <value>GetDay(DateHeure)
Extrait le jour à partir d'un Date/Heure.</value>
  </data>
  <data name="Char.Description" xml:space="preserve">
    <value>Char(Nombre)
Convertit un integerASCIICode en caractère.</value>
  </data>
  <data name="LessOrEqual.Description" xml:space="preserve">
    <value>Opérateur inférieur ou égal. Utilisé pour comparer des expressions.</value>
  </data>
  <data name="Replace.Description" xml:space="preserve">
    <value>Replace(Chaine1, SousChaine2, Chaine3)
Retourne une copie de Chaine1 dans laquelle SousChaine2 a été remplacé par Chaine3.</value>
  </data>
  <data name="BitwiseOr.Description" xml:space="preserve">
    <value>Compare chaque bit de la première opérande au bit correspondant de la seconde opérande. Si les deux bits sont à 1, le bit correspondant dans le résultat est mis à 0. Dans les autres cas, le bit correspondant dans le résultat est mis à 0.</value>
  </data>
  <data name="AddMilliSeconds.Description" xml:space="preserve">
    <value>AddMilliSeconds(DateHeure, NombreMillisecondes)
Retourne une valeur date/heure qui est le nombre de millisecondes spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="Today.Description" xml:space="preserve">
    <value>Today()
Retourne la date courante. En fonction de l'heure actuelle, cette fonction retourne minui de la date courante.</value>
  </data>
  <data name="AddSeconds.Description" xml:space="preserve">
    <value>AddSeconds(DateHeure, NombreSecondes)
Retourne une valeur date/heure qui est le nombre de secondes spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="GetHour.Description" xml:space="preserve">
    <value>GetHour(DateHeure)
Extrait les heures à partir d'un Date/Heure.</value>
  </data>
  <data name="Ceiling.Description" xml:space="preserve">
    <value>Ceiling(Valeur)
Retourne le plus petit entier qui est plus grand ou égal à l'expression numérique donnée.</value>
  </data>
  <data name="IsNull.Description" xml:space="preserve">
    <value>IsNull(Valeur)
Retourne vrai si la valeur spécifiée est nulle.</value>
  </data>
  <data name="Power.Description" xml:space="preserve">
    <value>Power(Valeyr, Puissance)
Retourne un nombre donné à une puissance donnée.</value>
  </data>
  <data name="True.Description" xml:space="preserve">
    <value>Représente la valeur booléenne vrai.</value>
  </data>
  <data name="Divide.Description" xml:space="preserve">
    <value>Divise la première opérande par la seconde.</value>
  </data>
  <data name="Sin.Description" xml:space="preserve">
    <value>Sin(Valeur)
Retourne le sinus de l'angle défini en radians.</value>
  </data>
  <data name="Constants.Text" xml:space="preserve">
    <value>Constantes</value>
  </data>
  <data name="Between.Description" xml:space="preserve">
    <value>Between (,)
Spécifie une plage à tester. Retourne vrai si une valeur est plus grande ou égale à la première opérande et plus petite ou égale à la secondes opérande.</value>
  </data>
  <data name="Substring3param.Description" xml:space="preserve">
    <value>Substring(String, StartPosition, Length)
Retourne une sous-chaine à partir d'une chaine. La sous-chaine commence à la position StartPosition et a la longueur Length.</value>
  </data>
  <data name="Iif.Description" xml:space="preserve">
    <value>Iif(Expression, ExpressionVrai, ExpressionFaux)
Retourne ExpressionVrai ou ExpressionFaux en fonction de l'évaluation de l'expression booléenne.</value>
  </data>
  <data name="Greater.Description" xml:space="preserve">
    <value>Opérateur supérieur à. Utilisé pour comparer des expressions.</value>
  </data>
  <data name="Now.Description" xml:space="preserve">
    <value>Now()
Retourne la date et heure système.</value>
  </data>
  <data name="GetMilliSecond.Description" xml:space="preserve">
    <value>GetMilliSecond(DateHeure)
Extrait les millisecondes à partir d'un Date/Heure.</value>
  </data>
  <data name="Log2Param.Description" xml:space="preserve">
    <value>Log(Valeur, Base)
Retourne le logarithme d'un nombre spécifié dans une base spécifiée.</value>
  </data>
  <data name="PadLeft3Param.Description" xml:space="preserve">
    <value>PadLeft(Chaine, Longueur, Caractere)
Aligne les caractères à gauche dans la chaine définie, complétant son coté droit par le caractère spécifié pour arriver à la longueur spécifiée.</value>
  </data>
  <data name="Not.Description" xml:space="preserve">
    <value>Effectue une négation logique sur une expression.</value>
  </data>
  <data name="Atn.Description" xml:space="preserve">
    <value>Atn(Value)
Retourne l'arctangente d'un nombre (l'angle, en radians, dont la tangente est le nombre flottant donné).</value>
  </data>
  <data name="Upper.Description" xml:space="preserve">
    <value>Upper(String)
Retourne la chaine en majuscule.</value>
  </data>
  <data name="PadRight3Param.Description" xml:space="preserve">
    <value>PadRight(Chaine, Longueur, Caractere)
Aligne les caractères à droite dans la chaine définie, complétant son coté gauche par le caractère spécifié pour arriver à la longueur spécifiée.</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Editeur d'expression</value>
  </data>
  <data name="Multiply.Description" xml:space="preserve">
    <value>Multiplie la valeur de deux expressions.</value>
  </data>
  <data name="ToStr.Description" xml:space="preserve">
    <value>ToStr(Valeur)
Retourne la représentation sous forme de chaîne d'un objet.</value>
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Like.Description" xml:space="preserve">
    <value>Compare une chaine par rapport à un modèle. Si la valeur de la chaine correspond au modèle, le resultat est vrai. Si la chaine ne correspond pas au modèle, le résultat est faux. Si la chaine et le modèle sont des chaines vides, le résultat est vrai.</value>
  </data>
  <data name="NotEqual.Description" xml:space="preserve">
    <value>Retourne vrai si les opérandes n'ont pas la même valeur, dans les autres cas, retourne faux.</value>
  </data>
  <data name="Acos.Description" xml:space="preserve">
    <value>Acos(Valeur)
Retourne l'arccosinus d'un nombre (l'angle, en radians, dont le cosinus est l'expression flottante donnée).</value>
  </data>
  <data name="Reverse.Description" xml:space="preserve">
    <value>Reverse(Chaine)
Inverse l'ordre des éléments dans une chaine.</value>
  </data>
  <data name="GetDayOfWeek.Description" xml:space="preserve">
    <value>GetDayOfWeek(DateHeure)
Extrait le jour de la semaine à partir d'un Date/Heure.</value>
  </data>
  <data name="Log10.Description" xml:space="preserve">
    <value>Log10(Valeur)
Retourne le logarithme bse 10 du nombre spécifié.</value>
  </data>
  <data name="Concat.Description" xml:space="preserve">
    <value>Concat(Chaine1, ... , ChaineN)
Retourne une chaine contenant la concaténation de la chaine courante avec toutes les chaines additionnelles.</value>
  </data>
  <data name="UtcNow.Description" xml:space="preserve">
    <value>UtcNow()
Retourne la date et heure système courante exprimée en  Coordinated Universal Time (UTC).</value>
  </data>
  <data name="Cos.Description" xml:space="preserve">
    <value>Cos(Valeur)
Retourne le cosinus de l'angle exprimé en radians.</value>
  </data>
  <data name="Cosh.Description" xml:space="preserve">
    <value>Cosh(Valeur)
Retourne le cosinus hyperbolique de l'angle exprimé en radians.</value>
  </data>
  <data name="Functions.Text" xml:space="preserve">
    <value>Fonctions</value>
  </data>
  <data name="Condition.Caption" xml:space="preserve">
    <value>Editeur d'expression de type condition</value>
  </data>
  <data name="GridFields Description Prefix" xml:space="preserve">
    <value>Information champ
Libellé : {1}
Le type de ce champ est : {2}</value>
  </data>
  <data name="GetMinute.Description" xml:space="preserve">
    <value>GetMinute(DateHeure)
Extrait les minutes à partir d'un Date/Heure.</value>
  </data>
  <data name="AddMonths.Description" xml:space="preserve">
    <value>AddMonths(DateHeure, NombreMois)
Retourne une valeur date/heure qui est le nombre de mois spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="Ascii.Description" xml:space="preserve">
    <value>Ascii(Chaine)
Retourne le code ASCII du caractère le plus à gauche de l'expression caractère.</value>
  </data>
  <data name="Expression.Text" xml:space="preserve">
    <value>Editeur d'expression</value>
  </data>
  <data name="In.Description" xml:space="preserve">
    <value>In (,,,)
Teste l'existence d'une propriété dans un objet.</value>
  </data>
  <data name="UnboundColumn.Caption" xml:space="preserve">
    <value>Editeur d'expression</value>
  </data>
  <data name="Minus.Description" xml:space="preserve">
    <value>Recherche la différence entre deux nombres.</value>
  </data>
  <data name="Sqr.Description" xml:space="preserve">
    <value>Sqr(Valeur)
Retourne la racine carré d'un nombre donné.</value>
  </data>
  <data name="Null.Description" xml:space="preserve">
    <value>Représente une référence nulle qui ne référence aucun objet.</value>
  </data>
  <data name="Exp.Description" xml:space="preserve">
    <value>Exp(Valeur)
Retourne la valeur exponentielle de la valeur numérique donnée.</value>
  </data>
  <data name="Tanh.Description" xml:space="preserve">
    <value>Tanh(Valeur)
Retourne la tangente hyperbolique de l'angle défini en radians.</value>
  </data>
  <data name="RowCount.Description" xml:space="preserve">
    <value>Retourne le volume total de lignes de données dans une source de données.</value>
  </data>
  <data name="Fields Description Prefix" xml:space="preserve">
    <value>Le type du champ est :</value>
  </data>
  <data name="Plus.Description" xml:space="preserve">
    <value>Ajoute la valeur d'un numérique à un autre ou concatène deux chaines.</value>
  </data>
  <data name="Insert.Description" xml:space="preserve">
    <value>Insert(Chaine1, PositionDepart, Chaine2)
Insert Chaine2 dans Chaine1 à la position spécifiée par PositionDepart.</value>
  </data>
  <data name="BigMul.Description" xml:space="preserve">
    <value>BigMul(Valeur1, Valeur2)
Retourne un entier 64 bits contenant le produit des deux numériques 32 bits spécifiés.</value>
  </data>
  <data name="GetDayOfYear.Description" xml:space="preserve">
    <value>GetDayOfYear(DateHeure)
Extrait le jour de l'année à partir d'un Date/Heure.</value>
  </data>
  <data name="Atn2.Description" xml:space="preserve">
    <value>Atn2(Valeur1, Valeur2)
Retourne l'angle dont la tangente est le quotient des nombres spécifiés, en radians.</value>
  </data>
  <data name="Modulo.Description" xml:space="preserve">
    <value>Retourne le reste (module) obtenu par la division d'une expression numérique par une autre.</value>
  </data>
  <data name="Trim.Description" xml:space="preserve">
    <value>Trim(String)
Supprimer tous les caractères ESPACE en début et fin de chaîne.</value>
  </data>
  <data name="Abs.Description" xml:space="preserve">
    <value>Abs(Valeur)
Retourne la valeur absolue positive de l'expression numérique donnée.</value>
  </data>
  <data name="Fields.Text" xml:space="preserve">
    <value>Champs</value>
  </data>
  <data name="Equal.Description" xml:space="preserve">
    <value>Retourne vrai si les deux opérandes ont la même valeur, dans les autres cas, retourne faux.</value>
  </data>
  <data name="functionsTypes.EditValue" xml:space="preserve">
    <value>(Tous)</value>
  </data>
  <data name="GetMonth.Description" xml:space="preserve">
    <value>GetMonth(DateHeure)
Extrait un mois à partir d'un Date/Heure.</value>
  </data>
  <data name="Condition.Text" xml:space="preserve">
    <value>Editeur de condition</value>
  </data>
  <data name="BitwiseAnd.Description" xml:space="preserve">
    <value>Effectue un ET logique bit à bit entre deux valeurs entières.</value>
  </data>
  <data name="GetTimeOfDay.Description" xml:space="preserve">
    <value>GetTimeOfDay(DateHeure)
Extrait le temps dans la journée à partir d'un Date/Heure, en ticks.</value>
  </data>
  <data name="functionsTypes.Properties.LogicalItems" xml:space="preserve">
    <value>Logique</value>
  </data>
  <data name="False.Description" xml:space="preserve">
    <value>Représente la valeur booléenne faux.</value>
  </data>
  <data name="GetSecond.Description" xml:space="preserve">
    <value>GetSecond(DateHeure)
Extrait les secondes à partir d'un Date/Heure.</value>
  </data>
  <data name="Max.Description" xml:space="preserve">
    <value>Max(Valeur1, Valeur2)
Retourne la valeur maximum à partir des valeurs spécifiées.</value>
  </data>
  <data name="DateDiffMonth.Description" xml:space="preserve">
    <value>DateDiffMonth(dateDepart, dateFin)
Retourne le nombre de mois entre deux dates non nulles.</value>
  </data>
  <data name="DateDiffSecond.Description" xml:space="preserve">
    <value>DateDiffSecond(dateDepart, dateFin)
Retourne le nombre de secondes entre deux dates non nulles.</value>
  </data>
  <data name="Min.Description" xml:space="preserve">
    <value>Min(Valeur1, Valeur2)
Retourne la valeur minimum à partir des valeurs spécifiées.</value>
  </data>
  <data name="DateDiffMinute.Description" xml:space="preserve">
    <value>DateDiffMinute(dateDepart, dateFin)
Retourne le nombre de minutes entre deux dates non nulles.</value>
  </data>
  <data name="DateDiffHour.Description" xml:space="preserve">
    <value>DateDiffHour(dateDepart, dateFin)
Retourne le nombre d'heures entre deux dates non nulles.</value>
  </data>
  <data name="Parameters.Text" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="DateDiffYear.Description" xml:space="preserve">
    <value>DateDiffYear(dateDepart, dateFin)
Retourne le nombre d'années entre deux dates non nulles.</value>
  </data>
  <data name="DateDiffMilliSecond.Description" xml:space="preserve">
    <value>DateDiffMilliSecond(dateDepart, dateFin)
Retourne le nombre de millisecondes entre deux dates non nulles.</value>
  </data>
  <data name="DateDiffTick.Description" xml:space="preserve">
    <value>DateDiffTick(dateDepart, dateFin)
Retourne le nombre de ticks entre deux dates non nulles.</value>
  </data>
  <data name="DateDiffDay.Description" xml:space="preserve">
    <value>DateDiffDay(dateDepart, dateFin)
Retourne le nombre de jours entre deux dates non nulles.</value>
  </data>
</root>