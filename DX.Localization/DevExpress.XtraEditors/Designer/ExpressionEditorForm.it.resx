<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Fields Description Prefix" xml:space="preserve">
    <value>Il tipo di questo campo è:</value>
  </data>
  <data name="Round.Description" xml:space="preserve">
    <value>Round(Valore)
Arrotonda il valore specificato all'intero più vicino.</value>
  </data>
  <data name="functionsTypes.Properties.StringItems" xml:space="preserve">
    <value>Stringa</value>
  </data>
  <data name="Log10.Description" xml:space="preserve">
    <value>Log10(Valore)
Restituisce il logaritmo in base 10 del numero specificato.</value>
  </data>
  <data name="AddDays.Description" xml:space="preserve">
    <value>AddDays(DataOra, NumeroDiGiorni)
Restituisce un valore di data e ora che dista il numero specificato di giorni dalla data specificata.</value>
  </data>
  <data name="Expression.Text" xml:space="preserve">
    <value>Editor Espressione</value>
  </data>
  <data name="Floor.Description" xml:space="preserve">
    <value>Floor(Valore)
Restituisce l'intero più grande minore o uguale all'espressione numerica specificata.</value>
  </data>
  <data name="Log2Param.Description" xml:space="preserve">
    <value>Log(Valore)
Restituisce il logaritmo naturale del numero specificato.</value>
  </data>
  <data name="Parameters Description Prefix" xml:space="preserve">
    <value>Il tipo di questo parametro è:</value>
  </data>
  <data name="Asin.Description" xml:space="preserve">
    <value>Asin(Valore)
Restituisce l'arcoseno dell'angolo definito in radianti.</value>
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="GetSecond.Description" xml:space="preserve">
    <value>GetSecond(DataOra)
Estrae i secondi dal valore DataOra specificato.</value>
  </data>
  <data name="AddMonths.Description" xml:space="preserve">
    <value>AddMonths(DataOra, NumeroDiMesi)
Restituisce un valore di data e ora che dista il numero specificato di mesi dalla data specificata.</value>
  </data>
  <data name="DateDiffMinute.Description" xml:space="preserve">
    <value>DateDiffMinute(DataOraInizio, DataOraFine)
Restituisce il numero di minuti tra due date non nulle.</value>
  </data>
  <data name="IsNull.Description" xml:space="preserve">
    <value>IsNull(Valore)
Restituisce VERO se il valore specificato è NULL.</value>
  </data>
  <data name="Not.Description" xml:space="preserve">
    <value>Esegue la negazione logica di un'espressione.</value>
  </data>
  <data name="Today.Description" xml:space="preserve">
    <value>Today()
Restituisce la data corrente. Indipendentemente dall'ora attuale, questa funzione restituisce la mezzanotte della data corrente.</value>
  </data>
  <data name="DateDiffMonth.Description" xml:space="preserve">
    <value>DateDiffMonth(DataOraInizio, DataOraFine)
Restituisce il numero di mesi tra due date non nulle.</value>
  </data>
  <data name="Abs.Description" xml:space="preserve">
    <value>Abs(Valore)
Restituisce il valore assoluto positivo dell'espressione numerica specificata.</value>
  </data>
  <data name="Plus.Description" xml:space="preserve">
    <value>Aggiunge il valore di un'espressione numerica ad un'altra, o concatena le due stringhe.</value>
  </data>
  <data name="Log.Description" xml:space="preserve">
    <value>Log(Valore)
Restituisce il logaritmo naturale del numero specificato.</value>
  </data>
  <data name="Constants.Text" xml:space="preserve">
    <value>Costanti</value>
  </data>
  <data name="Modulo.Description" xml:space="preserve">
    <value>Restituisce il resto (modulo), ottenuto dividendo una espressione numerica in un'altra.</value>
  </data>
  <data name="Sinh.Description" xml:space="preserve">
    <value>Sinh(Valore)
Restituisce il seno iperbolico dell'angolo definito in radianti.</value>
  </data>
  <data name="DateDiffHour.Description" xml:space="preserve">
    <value>DateDiffHour(DataOraInizio, DataOraFine)
Restituisce il numero di ore tra due date non nulle.</value>
  </data>
  <data name="Parameters.Text" xml:space="preserve">
    <value>Parametri</value>
  </data>
  <data name="Substring2param.Description" xml:space="preserve">
    <value>Substring(Stringa, PosizioneIniziale)
Recupera la sottostringa della Stringa specificata iniziando dalla posizione specificata da PosizioneIniziale.</value>
  </data>
  <data name="IsNullOrEmpty.Description" xml:space="preserve">
    <value>IsNullOrEmpty(Stringa)
Restituisce VERO se la Stringa specificata è NULL o una stringa vuota; in caso contrario, viene restituita FALSO.</value>
  </data>
  <data name="PadRight.Description" xml:space="preserve">
    <value>PadRight(Stringa, Lunghezza)
Allinea a destra i caratteri della stringa specificata, aggiungendo alla sinistra il numero di caratteri di spazio necessari per raggiongere la lunghezza specificata.</value>
  </data>
  <data name="GetTimeOfDay.Description" xml:space="preserve">
    <value>GetTimeOfDay(DataOra)
Estrae l'ora del giorno dal valore DataOra passato, in Ticks.</value>
  </data>
  <data name="functionsTypes.Properties.MathItems" xml:space="preserve">
    <value>Matematiche</value>
  </data>
  <data name="Lower.Description" xml:space="preserve">
    <value>Lower(Stringa)
Restituisce la Stringa passata in caratteri minuscoli.</value>
  </data>
  <data name="Remove.Description" xml:space="preserve">
    <value>Remove(Stringa, PosizioneIniziale, Lunghezza)
Elimina il numero di caratteri specificato da Lunghezza dalla Stringa specificata, iniziando dalla posizione specificata.</value>
  </data>
  <data name="AddMinutes.Description" xml:space="preserve">
    <value>AddMinutes(DataOra, NumeroDiMinuti)
Restituisce un valore di data e ora che dista il numero specificato di minuti dalla data specificata.</value>
  </data>
  <data name="Substring3param.Description" xml:space="preserve">
    <value>Substring(Stringa, PosizioneIniziale, Lunghezza)
Recupera la sottostringa della Stringa specificata, di lunghezza specificata da Lunghezza, iniziando dalla posizione specificata da PosizioneIniziale.</value>
  </data>
  <data name="BitwiseOr.Description" xml:space="preserve">
    <value>Confronta ogni bit del primo operando con il bit corrispondente del secondo operando. Se uno dei bit è 1, il risultato sarà 1. In caso contrario, il risultato sarà 0.</value>
  </data>
  <data name="Ascii.Description" xml:space="preserve">
    <value>Ascii(Stringa)
Restituisce il valore del codice ASCII del carattere a sinistra di un'espressione di caratteri.</value>
  </data>
  <data name="Divide.Description" xml:space="preserve">
    <value>Divide il primo operando per il secondo.</value>
  </data>
  <data name="AddYears.Description" xml:space="preserve">
    <value>AddYears(DataOra, NumeroDiAnni)
Restituisce un valore di data e ora che dista il numero specificato di anni dalla data specificata.</value>
  </data>
  <data name="Trim.Description" xml:space="preserve">
    <value>Trim(Stringa)
Rimuove tutti i caratteri di spazio iniziali e finali da Stringa.</value>
  </data>
  <data name="DateDiffMilliSecond.Description" xml:space="preserve">
    <value>DateDiffMilliSecond(DataOraInizio, DataOraFine)
Restituisce il numero di millisecondi tra due date non nulle.</value>
  </data>
  <data name="Sign.Description" xml:space="preserve">
    <value>Sign(Valore)
Restituisce il segno positivo (+ 1), zero (0) o negativo (-1) dell'espressione specificata.</value>
  </data>
  <data name="Tan.Description" xml:space="preserve">
    <value>Tan(Valore)
Restituisce la tangente dell'angolo definito in radianti.</value>
  </data>
  <data name="GetMilliSecond.Description" xml:space="preserve">
    <value>GetMilliSecond(DataOra)
Estrae i millisecondi dal valore DataOra specificato.</value>
  </data>
  <data name="ToStr.Description" xml:space="preserve">
    <value>ToStr(Valore)
Restituisce una rappresentazione di stringa di un oggetto.</value>
  </data>
  <data name="Equal.Description" xml:space="preserve">
    <value>Restituisce VERO se entrambi gli operandi hanno lo stesso valore; in caso contrario, restituisce FALSO.</value>
  </data>
  <data name="Now.Description" xml:space="preserve">
    <value>Now()
Restituisce la data e l'ora corrente del sistema.</value>
  </data>
  <data name="Variables.Text" xml:space="preserve">
    <value>Variabili</value>
  </data>
  <data name="RowCount.Description" xml:space="preserve">
    <value>Restituisce la quantità totale di righe di dati in un'origine dati.</value>
  </data>
  <data name="buttonOK.Text" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="AddTicks.Description" xml:space="preserve">
    <value>AddTicks(DataOra, NumeroDiTick)
Restituisce un valore di data e ora che dista il numero di Tick dalla data specificata.</value>
  </data>
  <data name="Like.Description" xml:space="preserve">
    <value>Confronta una stringa rispetto ad un modello (pattern). Se il valore della stringa corrisponde al modello, il risultato è VERO. Se la stringa non corrisponde al modello, il risultato è FALSO. Se la stringa e il modello sono stringhe vuote, il risultato è VERO.</value>
  </data>
  <data name="GetDayOfYear.Description" xml:space="preserve">
    <value>GetDayOfYear(DataOra)
Estrae il giorno dell'anno dal valore DataOra specificato.</value>
  </data>
  <data name="PadRight3Param.Description" xml:space="preserve">
    <value>PadRight(Stringa, Lunghezza, Carattere)
Allinea a destra i caratteri della stringa specificata, aggiungendo alla sinistra tanti caratteri uguali al carattere specificato necessari per raggiungere la lunghezza specificata.</value>
  </data>
  <data name="functionsTypes.Properties.DateTimeItems" xml:space="preserve">
    <value>Data/Ora</value>
  </data>
  <data name="functionsTypes.EditValue" xml:space="preserve">
    <value>(Tutte)</value>
  </data>
  <data name="Tanh.Description" xml:space="preserve">
    <value>Tanh(Valore)
Restituisce la tangente iperbolica dell'angolo definito in radianti.</value>
  </data>
  <data name="Acos.Description" xml:space="preserve">
    <value>Acos(Valore)
Restituisce l'arcocoseno dell'angolo definito in radianti.</value>
  </data>
  <data name="Max.Description" xml:space="preserve">
    <value>Max(Valore1, Valore2)
Restituisce il valore massimo di valori specificati.</value>
  </data>
  <data name="UnboundColumn.Caption" xml:space="preserve">
    <value>Editor Espressione</value>
  </data>
  <data name="Exp.Description" xml:space="preserve">
    <value>Exp(Valore)
Restituisce il valore esponenziale dell'espressione specificata.</value>
  </data>
  <data name="BigMul.Description" xml:space="preserve">
    <value>BigMul(Valore1, Valore2)
Restituisce un Int64 contenente il prodotto completo di due numeri specificati a 32 bit.</value>
  </data>
  <data name="Char.Description" xml:space="preserve">
    <value>Char(Numero)
Converte un valore intero nel corrispondente carattere ASCII.</value>
  </data>
  <data name="Reverse.Description" xml:space="preserve">
    <value>Reverse(Stringa)
Inverte l'ordine degli elementi all'interno di una stringa.</value>
  </data>
  <data name="functionsTypes.Properties.AllItems" xml:space="preserve">
    <value>(Tutte)</value>
  </data>
  <data name="GetDate.Description" xml:space="preserve">
    <value>GetDate(DataOra)
Estrae la data dal valore DataOra specificato.</value>
  </data>
  <data name="Between.Description" xml:space="preserve">
    <value>Between (,)
Specifica un intervallo da testare. Restituisce true se il valore è maggiore o uguale al primo operando e minore o uguale al secondo operando.</value>
  </data>
  <data name="In.Description" xml:space="preserve">
    <value>In (,,,)
Verifica l'esistenza di una proprietà in un oggetto.</value>
  </data>
  <data name="Power.Description" xml:space="preserve">
    <value>Power(Valore, Potenza)
Restituisce il numero specificato elevato alla potenza specificata.</value>
  </data>
  <data name="GetMonth.Description" xml:space="preserve">
    <value>GetMonth(DataOra)
Estrae il mese dal valore DataOra specificato.</value>
  </data>
  <data name="GetDay.Description" xml:space="preserve">
    <value>GetDay(DataOra)
Estrae il giorno dal valore DataOra specificato.</value>
  </data>
  <data name="Sqr.Description" xml:space="preserve">
    <value>Sqr(Valore)
Restituisce la radice quadrata del numero specificato.</value>
  </data>
  <data name="DateDiffTick.Description" xml:space="preserve">
    <value>DateDiffTick(DataOraInizio, DataOraFine)
Restituisce il numero di Tick tra due date non nulle.</value>
  </data>
  <data name="Fields.Text" xml:space="preserve">
    <value>Campi</value>
  </data>
  <data name="UtcNow.Description" xml:space="preserve">
    <value>UtcNow()
Restituisce la data e ora corrente del sistema, espressi come ora UTC (Coordinated Universal Time).</value>
  </data>
  <data name="Null.Description" xml:space="preserve">
    <value>Rappresenta un riferimento NULL, uno che non fa riferimento a nessun oggetto.</value>
  </data>
  <data name="LessOrEqual.Description" xml:space="preserve">
    <value>Operatore 'Minore o Uguale a'. Usato per confrontare espressioni.</value>
  </data>
  <data name="Len.Description" xml:space="preserve">
    <value>Len(Valore)
Restituisce un valore intero pari al numero di caratteri di una stringa o al numero nominale di byte necessari per memorizzare una variabile.</value>
  </data>
  <data name="GetYear.Description" xml:space="preserve">
    <value>GetYear(DataOra)
Estrae l'anno dal valore DataOra passato.</value>
  </data>
  <data name="Less.Description" xml:space="preserve">
    <value>Operatore 'Minore di'. Usato per confrontare espressioni.</value>
  </data>
  <data name="DateDiffYear.Description" xml:space="preserve">
    <value>DateDiffYear(DataOraInizio, DataOraFine)
Restituisce il numero di anni tra due date non nulle.</value>
  </data>
  <data name="True.Description" xml:space="preserve">
    <value>Rappresenta il valore booleano VERO.</value>
  </data>
  <data name="Atn.Description" xml:space="preserve">
    <value>Atn(Valore)
Restituisce l'arcotangente dell'angolo definito in radianti.</value>
  </data>
  <data name="Concat.Description" xml:space="preserve">
    <value>Concat(Stringa1, ... , StringaN)
Restituisce un valore di stringa contenente la concatenazione della stringa corrente con tutte le stringhe aggiuntive.</value>
  </data>
  <data name="PadLeft.Description" xml:space="preserve">
    <value>PadLeft(Stringa, Lunghezza)
Allinea a sinistra i caratteri della stringa specificata, aggiungendo alla sinistra il numero di caratteri di spazio necessari per raggiongere la lunghezza specificata.</value>
  </data>
  <data name="And.Description" xml:space="preserve">
    <value>Esegue una congiunzione logica di due espressioni.</value>
  </data>
  <data name="CurrentRowIndex.Description" xml:space="preserve">
    <value>Restituisce l'indice della riga corrente di dati in un'origine dati. Si noti che questo indice è in base zero.</value>
  </data>
  <data name="Rnd.Description" xml:space="preserve">
    <value>Rnd()
Restituisce un numero casuale che è inferiore a 1, ma maggiore o uguale a zero.</value>
  </data>
  <data name="NotEqual.Description" xml:space="preserve">
    <value>Restituisce VERO se gli operandi non hanno lo stesso valore; in caso contrario, restituisce FALSO.</value>
  </data>
  <data name="functionsTypes.Properties.LogicalItems" xml:space="preserve">
    <value>Logiche</value>
  </data>
  <data name="Insert.Description" xml:space="preserve">
    <value>Insert(Stringa1, PosizioneIniziale, Stringa2)
Inserisce Stringa2 in Stringa1 in corrispondenza della posizione specificata da PosizioneIniziale.</value>
  </data>
  <data name="GetDayOfWeek.Description" xml:space="preserve">
    <value>GetDayOfWeek(DataOra)
Estrae la il giorno della settimana dal valore DataOra specificato.</value>
  </data>
  <data name="BitwiseXor.Description" xml:space="preserve">
    <value>Esegue un'esclusione logica su due espressioni booleane oppure un'esclusione bit per bit su due espressioni numeriche.</value>
  </data>
  <data name="Replace.Description" xml:space="preserve">
    <value>Replace(Stringa1, SottoStringa1, Stringa2)
Restituisce una copia di Stringa1, in cui SottoStringa1 è stata sostituita con Stringa2.</value>
  </data>
  <data name="DateDiffSecond.Description" xml:space="preserve">
    <value>DateDiffSecond(DataOraInizio, DataOraFine)
Restituisce il numero di secondi tra due date non nulle.</value>
  </data>
  <data name="Or.Description" xml:space="preserve">
    <value>Esegue una disgiunzione logica tra due espressioni booleane.</value>
  </data>
  <data name="DateDiffDay.Description" xml:space="preserve">
    <value>DateDiffDay(DataOraInizio, DataOraFine)
Restituisce il numero di giorni tra due date non nulle.</value>
  </data>
  <data name="Functions.Text" xml:space="preserve">
    <value>Funzioni</value>
  </data>
  <data name="PadLeft3Param.Description" xml:space="preserve">
    <value>PadLeft(Stringa, Lunghezza, Carattere)
Allinea a sinistra i caratteri della stringa specificata, aggiungendo alla sinistra tanti caratteri uguali al carattere specificato necessari per raggiungere la lunghezza specificata.</value>
  </data>
  <data name="GetHour.Description" xml:space="preserve">
    <value>GetHour(DataOra)
Estrae l'ora dal valore DataOra specificato.</value>
  </data>
  <data name="GreaterOrEqual.Description" xml:space="preserve">
    <value>Operatore 'Maggiore o Uguale a'. Usato per confrontare espressioni.</value>
  </data>
  <data name="AddHours.Description" xml:space="preserve">
    <value>AddHours(DataOra, NumeroDiOre)
Restituisce un valore di data e ora che dista il numero specificato di ore dalla data specificata.</value>
  </data>
  <data name="Sin.Description" xml:space="preserve">
    <value>Sin(Valore)
Restituisce il seno dell'angolo, definito in radianti.</value>
  </data>
  <data name="CharIndex3Param.Description" xml:space="preserve">
    <value>CharIndex(Stringa1, Stringa2, IndiceInizioRicerca)
Restituisce la posizione iniziale di Stringa1 all'interno Stringa2, iniziando la ricerca dal carattere che si trova nella posizione IndiceInizioRicerca della Stringa2.</value>
  </data>
  <data name="Operators.Text" xml:space="preserve">
    <value>Operatori</value>
  </data>
  <data name="AddTimeSpan.Description" xml:space="preserve">
    <value>AddTimeSpan(DataOra, IntervalloDiTempo)
Restituisce un valore di data e ora che dista il numero specificato di secondi dalla data specificata.</value>
  </data>
  <data name="AddMilliSeconds.Description" xml:space="preserve">
    <value>AddMilliSeconds(DataOra, NumeroDiMillisecondi)
Restituisce un valore di data e ora che dista il numero specificato di millisecondi dalla data specificata.</value>
  </data>
  <data name="Greater.Description" xml:space="preserve">
    <value>Operatore 'Maggiore di'. Usato per confrontare espressioni.</value>
  </data>
  <data name="GetMinute.Description" xml:space="preserve">
    <value>GetMinute(DataOra)
Estrae i minuti dal valore DataOra specificato.</value>
  </data>
  <data name="GridFields Description Prefix" xml:space="preserve">
    <value>Informazioni sul campo
Didascalia: {1}
Il tipo del campo è: {2}</value>
  </data>
  <data name="Condition.Caption" xml:space="preserve">
    <value>Editor Espressione Condizione</value>
  </data>
  <data name="False.Description" xml:space="preserve">
    <value>Rappresenta il valore Booleano FALSO.</value>
  </data>
  <data name="Min.Description" xml:space="preserve">
    <value>Min(Valore1, Valore2)
Restituisce il valore minimo di valori specificati.</value>
  </data>
  <data name="AddSeconds.Description" xml:space="preserve">
    <value>AddSeconds(DataOra, NumeroDiSecondi)
Restituisce un valore di data e ora che dista il numero specificato di secondi dalla data specificata.</value>
  </data>
  <data name="Iif.Description" xml:space="preserve">
    <value>Iif(Espressione, ParteVera, ParteFalsa)
Restituisce ParteVera o ParteFalsa, sulla base della valutazione dell'espressione Booleana specificata.</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Editor Espressione</value>
  </data>
  <data name="Upper.Description" xml:space="preserve">
    <value>Upper(Stringa)
Restituisce l'oggetto Stringa in caratteri maiuscoli.</value>
  </data>
  <data name="Cosh.Description" xml:space="preserve">
    <value>Cosh(Valore)
Restituisce il coseno iperbolico dell'angolo definito in radianti.</value>
  </data>
  <data name="Condition.Text" xml:space="preserve">
    <value>Editor Condizione</value>
  </data>
  <data name="Minus.Description" xml:space="preserve">
    <value>Trova la differenza tra due numeri.</value>
  </data>
  <data name="Atn2.Description" xml:space="preserve">
    <value>Atn2(x,y)
Restituisce l'arcotangente, o inversa della tangente, delle coordinate x e y specificate. </value>
  </data>
  <data name="Multiply.Description" xml:space="preserve">
    <value>Moltiplica il valore di due espressioni.</value>
  </data>
  <data name="BitwiseAnd.Description" xml:space="preserve">
    <value>Esegue un'operazione di AND logico bit per bit tra due valori interi.</value>
  </data>
  <data name="Ceiling.Description" xml:space="preserve">
    <value>Ceiling(Valore)
Restituisce l'intero più piccolo che è maggiore o uguale all'espressione numerica specificata.</value>
  </data>
  <data name="Cos.Description" xml:space="preserve">
    <value>Cos(Valore)
Restituisce il coseno dell'angolo definito in radianti.</value>
  </data>
  <data name="CharIndex.Description" xml:space="preserve">
    <value>CharIndex(Stringa1, Stringa2)
Restituisce la posizione iniziale di Stringa1 all'interno Stringa2, iniziando la ricerca dal primo carattere della Stringa2.</value>
  </data>
</root>