<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BitwiseAnd.Description" xml:space="preserve">
    <value>針對兩個整數數值的二進制表示法做逐位的 "AND" 邏輯比較.</value>
  </data>
  <data name="Divide.Description" xml:space="preserve">
    <value>將第一個運算子除以第二個運算子.</value>
  </data>
  <data name="Less.Description" xml:space="preserve">
    <value>小於運算子. 用來比較運算式.</value>
  </data>
  <data name="IsNullOrEmpty.Description" xml:space="preserve">
    <value>IsNullOrEmpty(文字)
判斷參數是否為 NULL 值或空值, 如果為是則傳回 TRUE; 反之傳回 FALSE.</value>
  </data>
  <data name="AddTimeSpan.Description" xml:space="preserve">
    <value>AddTimeSpan(日期時間, 日期時間間隔表達式)
回傳一組經由參數加上所要累加上去的日期時間間隔表達式所計算出的結果日期.</value>
  </data>
  <data name="functionsTypes.Properties.MathItems" xml:space="preserve">
    <value>數學</value>
  </data>
  <data name="Power.Description" xml:space="preserve">
    <value>Power(值, 權值)
傳回數值對於權值的權重比例.</value>
  </data>
  <data name="Insert.Description" xml:space="preserve">
    <value>Insert(文字1, 開始位置, 文字2)
在文字1 在開始位置參數所設定的地方插入文字2.</value>
  </data>
  <data name="Rnd.Description" xml:space="preserve">
    <value>Rnd()
產生一組大於等於 0 且小於等於 1 的隨機數值.</value>
  </data>
  <data name="Like.Description" xml:space="preserve">
    <value>是對於文字的一種比對模式. 如果在文字中有一部份與值相符, 則傳回布林值 True; 反之則傳回布林值 False. 如果兩者皆是空白字串則傳回布林值 True.</value>
  </data>
  <data name="Trim.Description" xml:space="preserve">
    <value>Trim(文字)
移除在文字前後的空白字元.</value>
  </data>
  <data name="GetMonth.Description" xml:space="preserve">
    <value>GetMonth(日期時間)
傳回日期時間參數中所代表的月份.</value>
  </data>
  <data name="ToStr.Description" xml:space="preserve">
    <value>ToStr(數值)
將數值轉換成文字.</value>
  </data>
  <data name="CurrentRowIndex.Description" xml:space="preserve">
    <value>傳回在資料來源裡目前資料列的索引編號. 索引編號是 0 開始的.</value>
  </data>
  <data name="PadRight3Param.Description" xml:space="preserve">
    <value>PadRight(文字, 長度, 指定文字)
在文字的右邊指定的文字, 使其長度能與參數相等.</value>
  </data>
  <data name="Ascii.Description" xml:space="preserve">
    <value>Ascii(文字)
回傳參數文字左邊第一位文字所代表的 ASCII 的字碼.</value>
  </data>
  <data name="buttonOK.Text" xml:space="preserve">
    <value>確定</value>
  </data>
  <data name="GetDay.Description" xml:space="preserve">
    <value>GetDay(日期時間)
傳回日期時間參數中所代表的日數.</value>
  </data>
  <data name="Condition.Text" xml:space="preserve">
    <value>條件編輯器</value>
  </data>
  <data name="Tanh.Description" xml:space="preserve">
    <value>Tanh(數值)
傳回數值的雙曲正切值.</value>
  </data>
  <data name="Cosh.Description" xml:space="preserve">
    <value>Cosh(數值)
傳回數值的雙曲餘弦值.</value>
  </data>
  <data name="Today.Description" xml:space="preserve">
    <value>Today()
傳回目前時間點的日期.</value>
  </data>
  <data name="AddMilliSeconds.Description" xml:space="preserve">
    <value>AddMilliSeconds(日期時間, 毫秒數)
回傳一組經由參數加上所要累加上去的毫秒數所計算出的結果日期.</value>
  </data>
  <data name="Fields Description Prefix" xml:space="preserve">
    <value>此欄位的型態為:</value>
  </data>
  <data name="Parameters Description Prefix" xml:space="preserve">
    <value>此參數的型態為: </value>
  </data>
  <data name="Plus.Description" xml:space="preserve">
    <value>將兩個數值運算式相加, 或是將兩個文字組合起來.</value>
  </data>
  <data name="Now.Description" xml:space="preserve">
    <value>Now()
取得目前日期時間.</value>
  </data>
  <data name="AddMinutes.Description" xml:space="preserve">
    <value>AddMinutes(日期時間, 分鐘數)
回傳一組經由參數加上所要累加上去的分鐘數所計算出的結果日期.</value>
  </data>
  <data name="UtcNow.Description" xml:space="preserve">
    <value>UtcNow()
傳回以世界標準時間表示方法的目前日期時間.</value>
  </data>
  <data name="BitwiseXor.Description" xml:space="preserve">
    <value>針對兩個整數數值的二進制表示法做逐位的 "XOR" 互斥邏輯比較, 或針對兩個布林值運算式做 "XOR" 互斥邏輯比較.</value>
  </data>
  <data name="CharIndex.Description" xml:space="preserve">
    <value>CharIndex(文字1, 文字2)
從文字1的開頭開始尋找, 完全符合文字2的首次出現的位置.</value>
  </data>
  <data name="Round.Description" xml:space="preserve">
    <value>Round(數值)
隨機產生一組參數到最接近參數的整數之間的亂數.</value>
  </data>
  <data name="In.Description" xml:space="preserve">
    <value>In (,,,)
執行物件中是否有某個屬性存在的測試.</value>
  </data>
  <data name="Lower.Description" xml:space="preserve">
    <value>Lower(文字)
傳回文字的小寫拼寫.</value>
  </data>
  <data name="functionsTypes.Properties.LogicalItems" xml:space="preserve">
    <value>邏輯</value>
  </data>
  <data name="AddYears.Description" xml:space="preserve">
    <value>AddYears(日期時間, 年數)
回傳一組經由參數加上所要累加上去的年數所計算出的結果日期</value>
  </data>
  <data name="AddDays.Description" xml:space="preserve">
    <value>AddDays(日期時間, 天數)
回傳一組經由參數加上所要累加上去的天數所計算出的結果日期.</value>
  </data>
  <data name="Cos.Description" xml:space="preserve">
    <value>Cos(數值)
傳回數值的餘弦值.</value>
  </data>
  <data name="Acos.Description" xml:space="preserve">
    <value>Acos(數值)
回傳反餘弦值 (是求取角度, 以弧度來切分並以其餘弦所給定的一種浮點運算的公式).</value>
  </data>
  <data name="Variables.Text" xml:space="preserve">
    <value>變數</value>
  </data>
  <data name="AddSeconds.Description" xml:space="preserve">
    <value>AddSeconds(日期時間, 秒數)
回傳一組經由參數加上所要累加上去的秒數所計算出的結果日期.</value>
  </data>
  <data name="Sqr.Description" xml:space="preserve">
    <value>Sqr(數值)
傳回參數的平方根值.</value>
  </data>
  <data name="Operators.Text" xml:space="preserve">
    <value>運算子</value>
  </data>
  <data name="GetDate.Description" xml:space="preserve">
    <value>GetDate(日期時間)
傳回日期時間參數中所代表的日期資料(去除時間).</value>
  </data>
  <data name="Iif.Description" xml:space="preserve">
    <value>Iif(運算式, 運算式成立所執行的程式碼, 運算式不成立所執行的程式碼)
經由執行運算式取得結果布林值. 當布林值為 True 時則執行「運算式成立所執行的程式碼」; 反之則執行「運算式不成立所執行的程式碼」.</value>
  </data>
  <data name="Not.Description" xml:space="preserve">
    <value>針對一個運算式做 "NOT" 的反數邏輯運算.</value>
  </data>
  <data name="Log10.Description" xml:space="preserve">
    <value>Log10(數值)
傳回參數對應 10 所運算出的對數值.</value>
  </data>
  <data name="Substring3param.Description" xml:space="preserve">
    <value>Substring(文字, 開始位置, 長度)
依開始位置及讀取的長度, 讀取文字的內容.</value>
  </data>
  <data name="Tan.Description" xml:space="preserve">
    <value>Tan(數值)
傳回數值的正切值.</value>
  </data>
  <data name="Abs.Description" xml:space="preserve">
    <value>Abs(數值)
針對數字運算式傳回正數的數值.</value>
  </data>
  <data name="GetSecond.Description" xml:space="preserve">
    <value>GetSecond(日期時間)
傳回日期時間參數中所代表的秒數.</value>
  </data>
  <data name="GetMilliSecond.Description" xml:space="preserve">
    <value>GetMilliSecond(日期時間)
傳回日期時間參數中所代表的毫秒值.</value>
  </data>
  <data name="Multiply.Description" xml:space="preserve">
    <value>將兩個數值運算式相乘.</value>
  </data>
  <data name="Sign.Description" xml:space="preserve">
    <value>Sign(數值)
傳回數值的正負值符號. 數值為正值傳回 1; 零則傳回 0; 若為負值則傳回 -1.</value>
  </data>
  <data name="Replace.Description" xml:space="preserve">
    <value>Replace(文字, 原文字, 取代文字)
在文字中尋找「原文字」後並將「原文字」用「取代文字」取代, 再將其結果回傳.</value>
  </data>
  <data name="CharIndex3Param.Description" xml:space="preserve">
    <value>CharIndex(文字1, 文字2, 開始尋找位置)
由文字1並依所設定的開始尋找位置開始, 依文字2找尋完全尋合內容, 並傳回首次出現的位置.</value>
  </data>
  <data name="Greater.Description" xml:space="preserve">
    <value>大於運算子. 用來比較運算式.</value>
  </data>
  <data name="Ceiling.Description" xml:space="preserve">
    <value>Ceiling(數值)
傳回無條件去除小數位數的數值.</value>
  </data>
  <data name="Concat.Description" xml:space="preserve">
    <value>Concat(文字1, ... , 文字N)
傳回一個將各個文字參數(包含連接符號)所組合而成的文字字串.</value>
  </data>
  <data name="PadRight.Description" xml:space="preserve">
    <value>PadRight(文字, 長度)
在文字的右邊補入空白字元, 使其長度能與參數相等.</value>
  </data>
  <data name="Len.Description" xml:space="preserve">
    <value>Len(值)
傳回文字的字元數或是一般數字所需儲放的位元數, 其傳回值是整數型態.</value>
  </data>
  <data name="Sin.Description" xml:space="preserve">
    <value>Sin(數值)
傳回數值的正弦值.</value>
  </data>
  <data name="GetDayOfWeek.Description" xml:space="preserve">
    <value>GetDayOfWeek(日期時間)
傳回日期時間參數所處於該週的第幾天.</value>
  </data>
  <data name="BitwiseOr.Description" xml:space="preserve">
    <value>針對兩個整數數值的二進制表示法做逐位的 "OR" 邏輯比較. 假設兩者數值二進制表示法的第一個位元其中有一者為 1, 則結果為1; 反之如果兩者二進制表示法的第一個位元皆為 0, 其結果為 0, 並逐位比較後產生運算結果.</value>
  </data>
  <data name="Fields.Text" xml:space="preserve">
    <value>欄位</value>
  </data>
  <data name="Remove.Description" xml:space="preserve">
    <value>Remove(文字, 開始位置, 長度)
由文字的開始位置開始, 刪除所指定長度的字串, 並傳回剩餘的文字.</value>
  </data>
  <data name="BigMul.Description" xml:space="preserve">
    <value>BigMul(數值1, 數值2)
產生兩個 32 位元數值所相加的完整 64 位元數值.</value>
  </data>
  <data name="NotEqual.Description" xml:space="preserve">
    <value>判斷兩個運算子是否為相同的值; 如果是則傳回布林值 False, 反之則傳回 True.</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>運算式編輯器</value>
  </data>
  <data name="Modulo.Description" xml:space="preserve">
    <value>傳回兩個數值運算式相除的餘數.</value>
  </data>
  <data name="Or.Description" xml:space="preserve">
    <value>針對兩個布林值運算式做 "OR" 的或數邏輯運算.</value>
  </data>
  <data name="GetMinute.Description" xml:space="preserve">
    <value>GetMinute(日期時間)
傳回日期時間參數中所代表的分鐘數.</value>
  </data>
  <data name="Sinh.Description" xml:space="preserve">
    <value>Sinh(數值)
傳回數值的雙曲正弦值.</value>
  </data>
  <data name="PadLeft3Param.Description" xml:space="preserve">
    <value>PadLeft(文字, 長度, 指定文字)
在文字的左邊補入指定的文字, 使其長度能與參數相等.</value>
  </data>
  <data name="GetYear.Description" xml:space="preserve">
    <value>GetYear(日期時間)
傳回日期時間參數中所代表的年份.</value>
  </data>
  <data name="IsNull.Description" xml:space="preserve">
    <value>IsNull(值)
如果值為空值(NULL)則傳回布林值 True.</value>
  </data>
  <data name="AddTicks.Description" xml:space="preserve">
    <value>AddTicks(日期時間, 百分之一秒數)
回傳一組經由參數加上所要累加上去的百分之一秒數所計算出的結果日期.</value>
  </data>
  <data name="UnboundColumn.Caption" xml:space="preserve">
    <value>運算式編輯器</value>
  </data>
  <data name="Log2Param.Description" xml:space="preserve">
    <value>Log(數值, 基數)
傳回參數對應基數所運算出的對數值.</value>
  </data>
  <data name="Atn.Description" xml:space="preserve">
    <value>Atn(數值)
傳回數值的反正切值.</value>
  </data>
  <data name="GetTimeOfDay.Description" xml:space="preserve">
    <value>GetTimeOfDay(日期時間)
傳回日期時間參數中所代表的時間.</value>
  </data>
  <data name="Exp.Description" xml:space="preserve">
    <value>Exp(數值)
傳回數值所代表的浮動運算式.</value>
  </data>
  <data name="Expression.Text" xml:space="preserve">
    <value>運算式編輯器</value>
  </data>
  <data name="Between.Description" xml:space="preserve">
    <value>Between (,)
針對一個範圍來做測試. 如果值大於等第一個運算參數並且小於等於第二個運算參數則傳回布林值 True.</value>
  </data>
  <data name="LessOrEqual.Description" xml:space="preserve">
    <value>小於等於運算子. 用來比較運算式.</value>
  </data>
  <data name="RowCount.Description" xml:space="preserve">
    <value>傳回在資料來源中資料列的數量合計.</value>
  </data>
  <data name="False.Description" xml:space="preserve">
    <value>代表布林值為 False.</value>
  </data>
  <data name="GetDayOfYear.Description" xml:space="preserve">
    <value>GetDayOfYear(日期時間)
傳回日期時間參數中所處的該年中的第幾天.</value>
  </data>
  <data name="functionsTypes.Properties.StringItems" xml:space="preserve">
    <value>文字</value>
  </data>
  <data name="Equal.Description" xml:space="preserve">
    <value>判斷兩個運算子是否為相同的值; 如果是則傳回布林值 True, 反之則傳回 False.</value>
  </data>
  <data name="GetHour.Description" xml:space="preserve">
    <value>GetHour(日期時間)
傳回日期時間參數中所代表的小時.</value>
  </data>
  <data name="Functions.Text" xml:space="preserve">
    <value>函數</value>
  </data>
  <data name="Log.Description" xml:space="preserve">
    <value>Log(數值)
傳回參數的對數值.</value>
  </data>
  <data name="Constants.Text" xml:space="preserve">
    <value>常數</value>
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="Floor.Description" xml:space="preserve">
    <value>Floor(數值)
傳回數值的最大整數或小於等於的數值.</value>
  </data>
  <data name="GridFields Description Prefix" xml:space="preserve">
    <value>欄位資訊
標題: {1}
此欄位的型態為: {2}</value>
  </data>
  <data name="GreaterOrEqual.Description" xml:space="preserve">
    <value>大於等於運算子. 用來比較運算式.</value>
  </data>
  <data name="Asin.Description" xml:space="preserve">
    <value>Asin(數值)
傳回數值的反正弦值.</value>
  </data>
  <data name="Reverse.Description" xml:space="preserve">
    <value>Reverse(文字)
依照文字內容的順序將其調換.
如 ABC 會處理成 CBA.</value>
  </data>
  <data name="AddHours.Description" xml:space="preserve">
    <value>AddHours(日期時間, 小時數)
回傳一組經由參數加上所要累加上去的小時數所計算出的結果日期.</value>
  </data>
  <data name="Upper.Description" xml:space="preserve">
    <value>Upper(文字)
將文字全部轉換成大寫型態並回傳.</value>
  </data>
  <data name="functionsTypes.Properties.DateTimeItems" xml:space="preserve">
    <value>日期時間</value>
  </data>
  <data name="Parameters.Text" xml:space="preserve">
    <value>參數</value>
  </data>
  <data name="Atn2.Description" xml:space="preserve">
    <value>Atn2(數值1, 數值2)
傳回二個數值的反正切值.</value>
  </data>
  <data name="functionsTypes.EditValue" xml:space="preserve">
    <value>(全部)</value>
  </data>
  <data name="AddMonths.Description" xml:space="preserve">
    <value>AddMonths(日期時間, 月份數)
回傳一組經由參數加上所要累加上去的月份數所計算出的結果日期.</value>
  </data>
  <data name="PadLeft.Description" xml:space="preserve">
    <value>PadLeft(文字, 長度)
在文字的左邊補入空白字元, 使其長度能與參數相等.</value>
  </data>
  <data name="Minus.Description" xml:space="preserve">
    <value>計算兩個數字之間的差額.</value>
  </data>
  <data name="functionsTypes.Properties.AllItems" xml:space="preserve">
    <value>(全部)</value>
  </data>
  <data name="Condition.Caption" xml:space="preserve">
    <value>條件運算式編輯器</value>
  </data>
  <data name="Char.Description" xml:space="preserve">
    <value>Char(數值)
傳回數值所代表的十進位 ASCII 字元.</value>
  </data>
  <data name="Null.Description" xml:space="preserve">
    <value>表示是一個空值, 沒有填入或引用任何物件.</value>
  </data>
  <data name="True.Description" xml:space="preserve">
    <value>代表布林值為 True.</value>
  </data>
  <data name="And.Description" xml:space="preserve">
    <value>針對兩個運算式做 "AND" 的邏輯運算.</value>
  </data>
  <data name="Substring2param.Description" xml:space="preserve">
    <value>Substring(文字, 開始位置)
依開始位置讀取文字至結尾的內容.</value>
  </data>
</root>