<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GetMinute.Description" xml:space="preserve">
    <value>GetMinute(DateTime)
定義された DateTime から分を抽出します。</value>
  </data>
  <data name="Floor.Description" xml:space="preserve">
    <value>Floor(Value)
指定の数式以下の、最大の整数を返します。</value>
  </data>
  <data name="GreaterOrEqual.Description" xml:space="preserve">
    <value>式を比較する、「～以上」という意味の演算子です。</value>
  </data>
  <data name="GetDate.Description" xml:space="preserve">
    <value>GetDate(DateTime)
定義された DateTime から日付を抽出します。</value>
  </data>
  <data name="Condition.Caption" xml:space="preserve">
    <value>式エディタ</value>
  </data>
  <data name="Equal.Description" xml:space="preserve">
    <value>両方のオペランドが同じ値を持つ場合、True を返します。そうでなければ False を返します。</value>
  </data>
  <data name="AddMilliSeconds.Description" xml:space="preserve">
    <value>AddMilliSeconds(DateTime, MilliSecondsCount)
特定の DateTime から、特定のミリ秒数離れた日付 / 時刻値を返します。</value>
  </data>
  <data name="CurrentRowIndex.Description" xml:space="preserve">
    <value>データソース内で現データ列のインデックスを返します。インデックスは、ゼロベースです。</value>
  </data>
  <data name="In.Description" xml:space="preserve">
    <value>In (,,,)
オブジェクト内のプロパティの存在をテストします。</value>
  </data>
  <data name="Fields.Text" xml:space="preserve">
    <value>フィールド</value>
  </data>
  <data name="Abs.Description" xml:space="preserve">
    <value>Abs(Value)
数値の絶対値を返します。</value>
  </data>
  <data name="Atn.Description" xml:space="preserve">
    <value>Atn(Value)
数値のアークタンジェント(ラジアンで表す、フロート式のタンジェントを持つ角度)を返します。</value>
  </data>
  <data name="AddSeconds.Description" xml:space="preserve">
    <value>AddSeconds(DateTime, SecondsCount)
特定の DateTime から、特定の秒数離れた日付 / 時刻値を返します。</value>
  </data>
  <data name="Ceiling.Description" xml:space="preserve">
    <value>Ceiling(Value)
特定の数式以上で最小の整数を返します。</value>
  </data>
  <data name="Expression.Text" xml:space="preserve">
    <value>式エディタ</value>
  </data>
  <data name="AddTimeSpan.Description" xml:space="preserve">
    <value>AddTimeSpan(DateTime, TimeSpan)
特定のTimeSpan に対して、特定の  DateTime から離れた日付 / 時刻値を返します。</value>
  </data>
  <data name="BitwiseOr.Description" xml:space="preserve">
    <value>最初のオペランドの各ビットを、2つめのオペランドで対応するビットと比較します。どちらかのビットが1である場合、対応するビットを1に設定します。そうでなければ、対応するビットを0に設定します。</value>
  </data>
  <data name="CharIndex.Description" xml:space="preserve">
    <value>CharIndex(String1, String2)
String2 内の String1 の開始位置を返します。ゼロ文字の位置から始まり、文字列の末尾で終わります。</value>
  </data>
  <data name="Exp.Description" xml:space="preserve">
    <value>Exp(Value)
指定のフロート式のべき乗を返します。</value>
  </data>
  <data name="DateDiffYear.Description" xml:space="preserve">
    <value>DateDiffYear(startDate, endDate)
2つの非許容型の日付間の、年の境界数を返します。</value>
  </data>
  <data name="DateDiffHour.Description" xml:space="preserve">
    <value>DateDiffHour(startDate, endDate)
2つの Null 非許容型の日付間の、時間の境界数を返します。</value>
  </data>
  <data name="Functions.Text" xml:space="preserve">
    <value>関数</value>
  </data>
  <data name="Constants.Text" xml:space="preserve">
    <value>定数</value>
  </data>
  <data name="AddMinutes.Description" xml:space="preserve">
    <value>AddMinutes(DateTime, MinutesCount)
特定の DateTime から、特定の分数離れた日付 / 時刻値を返します。</value>
  </data>
  <data name="functionsTypes.Properties.LogicalItems" xml:space="preserve">
    <value>論理的</value>
  </data>
  <data name="AddTicks.Description" xml:space="preserve">
    <value>AddTicks(DateTime, TicksCount)
特定の DateTime から、特定の目盛り数離れた日付 / 時刻値を返します。</value>
  </data>
  <data name="GetDayOfYear.Description" xml:space="preserve">
    <value>GetDayOfYear(DateTime)
定義された DateTime から通日を抽出します。</value>
  </data>
  <data name="DateDiffTick.Description" xml:space="preserve">
    <value>DateDiffTick(startDate, endDate)
2つの非許容型の日付間の、目盛りの境界数を返します。</value>
  </data>
  <data name="IsNullOrEmpty.Description" xml:space="preserve">
    <value>IsNullOrEmpty(String)
指定された文字列が Null または空文字列である場合、True を返します。そうでない場合は False を返します。</value>
  </data>
  <data name="GetDay.Description" xml:space="preserve">
    <value>GetDay(DateTime)
定義された DateTime から日を抽出します。</value>
  </data>
  <data name="Greater.Description" xml:space="preserve">
    <value>式を比較する、「～より大きい」という意味の演算子です。</value>
  </data>
  <data name="GetHour.Description" xml:space="preserve">
    <value>GetHour(DateTime)
定義された DateTime から時間を抽出します。</value>
  </data>
  <data name="Atn2.Description" xml:space="preserve">
    <value>Atn2(Value1, Value2)
2つの特定数値の商のタンジェントである角度を、ラジアンで返します。</value>
  </data>
  <data name="GetMilliSecond.Description" xml:space="preserve">
    <value>GetMilliSecond(DateTime)
定義された DateTime からミリ秒を抽出します。</value>
  </data>
  <data name="Acos.Description" xml:space="preserve">
    <value>Acos(Value)
数字のアークコサイン(ラジアンで表す、フロート式のコサインを持つ角度)を返します。</value>
  </data>
  <data name="functionsTypes.Properties.MathItems" xml:space="preserve">
    <value>数学</value>
  </data>
  <data name="AddYears.Description" xml:space="preserve">
    <value>AddYears(DateTime, YearsCount)
特別の DateTime から、特定の年数離れた日付 / 時刻値を返します。</value>
  </data>
  <data name="Between.Description" xml:space="preserve">
    <value>Between (,)
テスト範囲を指定します。値が最初のオペランド以上であった場合、あるいは2つめのオペランド以下であった場合、true を返します。</value>
  </data>
  <data name="Cos.Description" xml:space="preserve">
    <value>Cos(Value)
ラジアンで定義した角度のコサインを返します。</value>
  </data>
  <data name="Char.Description" xml:space="preserve">
    <value>Char(Number)
integerASCIICodeを文字に変換します。</value>
  </data>
  <data name="DateDiffSecond.Description" xml:space="preserve">
    <value>DateDiffSecond(startDate, endDate)
2つの Null 非許容型の日付間の、秒の境界数を返します。</value>
  </data>
  <data name="BitwiseXor.Description" xml:space="preserve">
    <value>2つのブール式に対して排他的論理和演算を実行、または2つの数式に対してビット単位の排他を実行します。</value>
  </data>
  <data name="functionsTypes.Properties.DateTimeItems" xml:space="preserve">
    <value>日付 / 時刻</value>
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="BigMul.Description" xml:space="preserve">
    <value>BigMul(Value1, Value2)
2つの特定された32ビット数字の積を含む Int64 を返します。</value>
  </data>
  <data name="GetYear.Description" xml:space="preserve">
    <value>GetYear(DateTime)
定義された DateTime から年を抽出します。</value>
  </data>
  <data name="GridFields Description Prefix" xml:space="preserve">
    <value>フィールド情報
キャプション: {1}
このフィールドのタイプ: {2}</value>
  </data>
  <data name="DateDiffDay.Description" xml:space="preserve">
    <value>DateDiffDay(startDate, endDate)
2つの Null 非許容型の日付間の、日付の境界数を返します。</value>
  </data>
  <data name="Concat.Description" xml:space="preserve">
    <value>Concat(String1, ... , StringN)
現在の文字列と追加の文字列を連結した文字列値を返します。</value>
  </data>
  <data name="DateDiffMilliSecond.Description" xml:space="preserve">
    <value>DateDiffMilliSecond(startDate, endDate)
2つの Null 非許容型の日付間の、ミリ秒の境界数を返します。</value>
  </data>
  <data name="Iif.Description" xml:space="preserve">
    <value>Iif(Expression, TruePart, FalsePart)
ブール式の計算によって、TruePart または FalsePart を返します。</value>
  </data>
  <data name="functionsTypes.EditValue" xml:space="preserve">
    <value>(すべて)</value>
  </data>
  <data name="Divide.Description" xml:space="preserve">
    <value>最初のオペランドを2番目のオペランドで割ります。</value>
  </data>
  <data name="DateDiffMinute.Description" xml:space="preserve">
    <value>DateDiffMinute(startDate, endDate)
2つの Null 非許容型の日付間の、分の境界数を返します。</value>
  </data>
  <data name="BitwiseAnd.Description" xml:space="preserve">
    <value>2つの整数値の間でビット単位のAND操作を実行します。</value>
  </data>
  <data name="functionsTypes.Properties.StringItems" xml:space="preserve">
    <value>文字列</value>
  </data>
  <data name="AddDays.Description" xml:space="preserve">
    <value>AddDays(DateTime, DaysCount)
特定の DateTime から、特定の日数離れた日付 / 時刻値を返します。</value>
  </data>
  <data name="DateDiffMonth.Description" xml:space="preserve">
    <value>DateDiffMonth(startDate, endDate)
2つの非許容型の日付間の、月の境界数を返します。</value>
  </data>
  <data name="AddMonths.Description" xml:space="preserve">
    <value>AddMonths(DateTime, MonthsCount)
特定の DateTime から、特定の月数離れた日付 / 時刻値を返します。</value>
  </data>
  <data name="Insert.Description" xml:space="preserve">
    <value>Insert(String1, StartPosition, String2)
StartPositon で指定された String1 内の位置に String2 を挿入します。</value>
  </data>
  <data name="Condition.Text" xml:space="preserve">
    <value>条件エディタ</value>
  </data>
  <data name="False.Description" xml:space="preserve">
    <value>ブール式の False 値を表します。</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>式エディタ</value>
  </data>
  <data name="Cosh.Description" xml:space="preserve">
    <value>Cosh(Value)
ラジアンで定義した角度の双曲線コサインを返します。</value>
  </data>
  <data name="functionsTypes.Properties.AllItems" xml:space="preserve">
    <value>(すべて)</value>
  </data>
  <data name="Asin.Description" xml:space="preserve">
    <value>Asin(Value)
数値のアークサイン(ラジアンで表す、フロート式のサインを持つ角度)を返します。</value>
  </data>
  <data name="GetDayOfWeek.Description" xml:space="preserve">
    <value>GetDayOfWeek(DateTime)
定義された DateTime から曜日を抽出します。</value>
  </data>
  <data name="GetMonth.Description" xml:space="preserve">
    <value>GetMonth(DateTime)
定義された DateTime から月を抽出します。</value>
  </data>
  <data name="GetTimeOfDay.Description" xml:space="preserve">
    <value>GetTimeOfDay(DateTime)
DateTime で定義した時刻を目盛り数として抽出します。</value>
  </data>
  <data name="IsNull.Description" xml:space="preserve">
    <value>IsNull(Value)
指定の値が Null の場合、True を返します。</value>
  </data>
  <data name="Fields Description Prefix" xml:space="preserve">
    <value>このフィールドのタイプ: </value>
  </data>
  <data name="GetSecond.Description" xml:space="preserve">
    <value>GetSecond(DateTime)
定義された DateTime から秒を抽出します。</value>
  </data>
  <data name="AddHours.Description" xml:space="preserve">
    <value>AddHours(DateTime, HoursCount)
特定の DateTime から、特定の時間数離れた日付 / 時刻値を返します。</value>
  </data>
  <data name="And.Description" xml:space="preserve">
    <value>2つの式に対して論理積を実行します。</value>
  </data>
  <data name="Ascii.Description" xml:space="preserve">
    <value>Ascii(String)
文字式で、最も左の文字の ASCII 文字コード値を返します。</value>
  </data>
  <data name="CharIndex3Param.Description" xml:space="preserve">
    <value>CharIndex(String1, String2, StartLocation)
String2 内の String1 の開始位置を返します。StartLocation の文字位置から始まり、文字列の末尾で終わります。</value>
  </data>
  <data name="Log.Description" xml:space="preserve">
    <value>Log(Value)
指定された数字の自然対数を返します。</value>
  </data>
  <data name="LessOrEqual.Description" xml:space="preserve">
    <value>式を比較する際に使用する、「～以下」という意味の演算子です。</value>
  </data>
  <data name="Less.Description" xml:space="preserve">
    <value>式を比較する際に使用する、「～より小さい」という意味の演算子です。</value>
  </data>
  <data name="Log10.Description" xml:space="preserve">
    <value>Log10(Value)
指定した数字の10進法の対数を返します。</value>
  </data>
  <data name="Sin.Description" xml:space="preserve">
    <value>Sin(Value)
ラジアンで定義された角度のサインを返します。</value>
  </data>
  <data name="Min.Description" xml:space="preserve">
    <value>Min(Value1, Value2)
指定した値から最小値を返します。</value>
  </data>
  <data name="Max.Description" xml:space="preserve">
    <value>Max(Value1, Value2)
指定した値の最大値を返します。</value>
  </data>
  <data name="Power.Description" xml:space="preserve">
    <value>Power(Value, Power)
指定した数字の累乗を返します。</value>
  </data>
  <data name="PadRight3Param.Description" xml:space="preserve">
    <value>PadRight(String, Length, Char)
定義された文字列の文字を右側に揃え、指定の長さまで左側を特定の文字でパディングします。</value>
  </data>
  <data name="PadLeft3Param.Description" xml:space="preserve">
    <value>PadLeft(String, Length, Char)
定義された文字列の文字を左側に揃え、指定した長さまで左側を特定の文字でパディングします。</value>
  </data>
  <data name="Sinh.Description" xml:space="preserve">
    <value>Sinh(Value)
ラジアンで定義された角度の双曲線サインを返します。</value>
  </data>
  <data name="Like.Description" xml:space="preserve">
    <value>パターンに対して文字列を比較します。文字列の値がパターンに一致する場合、結果は True です。文字列がパターンに一致しない場合、結果は False です。文字列とパターンの両方が空文字列の場合、結果は True です。</value>
  </data>
  <data name="Round.Description" xml:space="preserve">
    <value>Round(Value)
値を最も近い整数に四捨五入します。</value>
  </data>
  <data name="Parameters.Text" xml:space="preserve">
    <value>パラメーター</value>
  </data>
  <data name="Multiply.Description" xml:space="preserve">
    <value>2つの式の値の積を計算します。</value>
  </data>
  <data name="Not.Description" xml:space="preserve">
    <value>式に対して論理否定を実行します。</value>
  </data>
  <data name="Now.Description" xml:space="preserve">
    <value>Now()
システムの現在の日時を返します。</value>
  </data>
  <data name="Modulo.Description" xml:space="preserve">
    <value>1つの数式を別の数式で割り、余り(modulus)を返します。</value>
  </data>
  <data name="Trim.Description" xml:space="preserve">
    <value>Trim(String)
Stringからすべての前後の間隔を削除します。</value>
  </data>
  <data name="Tanh.Description" xml:space="preserve">
    <value>Tanh(Value)
ラジアンで定義される角度の双曲線タンジェントを返します。</value>
  </data>
  <data name="UtcNow.Description" xml:space="preserve">
    <value>UtcNow()
協定世界時(UTC)で現在のシステム日時を返します。</value>
  </data>
  <data name="Variables.Text" xml:space="preserve">
    <value>変数</value>
  </data>
  <data name="Upper.Description" xml:space="preserve">
    <value>Upper(String)
文字列を大文字で返します。</value>
  </data>
  <data name="Today.Description" xml:space="preserve">
    <value>Today()
現在の日付を返します。この機能は実際の時刻に関係なく、現在日付の午前0時を返します。</value>
  </data>
  <data name="Sqr.Description" xml:space="preserve">
    <value>Sqr(Value)
指定した数字の平方根を返します。</value>
  </data>
  <data name="Tan.Description" xml:space="preserve">
    <value>Tan(Value)
ラジアンで定義される角度のタンジェントを返します。</value>
  </data>
  <data name="Reverse.Description" xml:space="preserve">
    <value>Reverse(String)
文字列内の要素の順序を逆にします。</value>
  </data>
  <data name="Len.Description" xml:space="preserve">
    <value>Len(Value)
文字列の文字数を含む整数、または変数を格納するための公称バイト数を返します。</value>
  </data>
  <data name="RowCount.Description" xml:space="preserve">
    <value>データソース内の合計行数を返します。</value>
  </data>
  <data name="Plus.Description" xml:space="preserve">
    <value>数式の値を足す、または2つの文字列を連結します。</value>
  </data>
  <data name="Minus.Description" xml:space="preserve">
    <value>2つの数字の差を計算します。</value>
  </data>
  <data name="Remove.Description" xml:space="preserve">
    <value>Remove(String, StartPosition, Length)
このインスタンスから指定された文字を削除し、指定した位置から始まります。</value>
  </data>
  <data name="buttonOK.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="PadLeft.Description" xml:space="preserve">
    <value>PadLeft(String, Length)
定義された文字列内で文字を左側に揃え、指定した長さまで左側を空白スペースでパディングします。</value>
  </data>
  <data name="Log2Param.Description" xml:space="preserve">
    <value>Log(Value, Base)
特定の進法で、指定した数字の対数を返します。</value>
  </data>
  <data name="Or.Description" xml:space="preserve">
    <value>2つのブール式に対して論理和を実行します。</value>
  </data>
  <data name="Substring3param.Description" xml:space="preserve">
    <value>Substring(String, StartPosition, Length)
String からサブストリングを取得します。サブストリングは StartPosition で始まり、決まった Length があります。</value>
  </data>
  <data name="Substring2param.Description" xml:space="preserve">
    <value>Substring(String, StartPosition)
String からサブストリングを取得します。サブストリングは StartPosition で始まります。</value>
  </data>
  <data name="Lower.Description" xml:space="preserve">
    <value>Lower(String)
文字列を小文字で返します。</value>
  </data>
  <data name="Parameters Description Prefix" xml:space="preserve">
    <value>このパラメーターのタイプ: </value>
  </data>
  <data name="PadRight.Description" xml:space="preserve">
    <value>PadRight(String, Length)
定義された文字列の文字を右側に揃え、指定の長さまで左側を空白スペースでパディングします。</value>
  </data>
  <data name="Replace.Description" xml:space="preserve">
    <value>Replace(String, SubString2, String3)
SubString2 を String3 に差し替えた String1 のコピーを返します。</value>
  </data>
  <data name="ToStr.Description" xml:space="preserve">
    <value>ToStr(Value)
オブジェクトの文字列表記を返します。</value>
  </data>
  <data name="UnboundColumn.Caption" xml:space="preserve">
    <value>式エディタ</value>
  </data>
  <data name="NotEqual.Description" xml:space="preserve">
    <value>オペランドが同じ値を持たない場合、True を返します。そうでなければ、False を返します。</value>
  </data>
  <data name="Sign.Description" xml:space="preserve">
    <value>Sign(Value)
指定の式の正符号 (+1)、ゼロ (0) または負符号 (-1)を返します。</value>
  </data>
  <data name="Rnd.Description" xml:space="preserve">
    <value>Rnd()
1 未満で0以上の任意の数字を返します。</value>
  </data>
  <data name="Null.Description" xml:space="preserve">
    <value>オブジェクトを参照しない Null 参照を表します。</value>
  </data>
  <data name="True.Description" xml:space="preserve">
    <value>ブール式の  True 値を表します。</value>
  </data>
  <data name="Operators.Text" xml:space="preserve">
    <value>演算子</value>
  </data>
  <data name="Round2Param.Description" xml:space="preserve">
    <value>Round(Value, Precision)
値を最も近い整数にまたは特定の小数桁数に四捨五入します。</value>
  </data>
  <data name="Contains.Description" xml:space="preserve">
    <value>Contains(String, SubString)
文字内にサブストリングが発生する場合に True を返します。そうでなければ、False を返します。
</value>
  </data>
  <data name="StartsWith.Description" xml:space="preserve">
    <value>StartsWith(String, StartString)
文字列の始めが StartString に一致する場合は True を返します。そうでない場合は、False を返します。</value>
  </data>
  <data name="IsThisWeek.Description" xml:space="preserve">
    <value>IsThisWeek(DateTime)
指定の日付が今週に含まれる場合 True を返します。</value>
  </data>
  <data name="IsThisMonth.Description" xml:space="preserve">
    <value>IsThisMonth(DateTime)
指定の日付が今月に含まれる場合 True を返します。</value>
  </data>
  <data name="IsThisYear.Description" xml:space="preserve">
    <value>IsThisYear(DateTime)
指定の日付が今年に含まれる場合 True を返します。</value>
  </data>
  <data name="ToDouble.Description" xml:space="preserve">
    <value>ToDouble(Value)
値を等価の64ビット符号付き倍精度浮動小数点数に変換します。</value>
  </data>
  <data name="EndsWith.Description" xml:space="preserve">
    <value>EndsWith(String, EndString)

文字列の最後が EndString に一致する場合は True を返し、そうでない場合は False を返します。</value>
  </data>
  <data name="ToDecimal.Description" xml:space="preserve">
    <value>ToDecimal(Value)
値を等価の小数に変換します。</value>
  </data>
  <data name="ToFloat.Description" xml:space="preserve">
    <value>ToFloat(Value)
値を等価の32ビット符号付き単精度浮動小数点数に変換します。</value>
  </data>
  <data name="ToLong.Description" xml:space="preserve">
    <value>ToLong(Value)
値を等価の64ビット符号付き整数に変換します。</value>
  </data>
  <data name="ToInt.Description" xml:space="preserve">
    <value>ToInt(Value)
値を等価の32ビット符号付き整数に変換します。</value>
  </data>
  <data name="LocalDateTimeDayAfterTomorrow.Description" xml:space="preserve">
    <value>LocalDateTimeDayAfterTomorrow()
明後日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="LocalDateTimeLastWeek.Description" xml:space="preserve">
    <value>LocalDateTimeLastWeek()
先週の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="LocalDateTimeNextMonth.Description" xml:space="preserve">
    <value>LocalDateTimeNextMonth()
来月の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="LocalDateTimeNextWeek.Description" xml:space="preserve">
    <value>LocalDateTimeNextWeek()
来週の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="LocalDateTimeNextYear.Description" xml:space="preserve">
    <value>LocalDateTimeNextYear()
来年の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="LocalDateTimeNow.Description" xml:space="preserve">
    <value>LocalDateTimeNow()
現時点に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="LocalDateTimeThisMonth.Description" xml:space="preserve">
    <value>LocalDateTimeThisMonth()
今月の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="LocalDateTimeThisWeek.Description" xml:space="preserve">
    <value>LocalDateTimeThisWeek()
今週の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="LocalDateTimeThisYear.Description" xml:space="preserve">
    <value>LocalDateTimeThisYear()
今年の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="LocalDateTimeToday.Description" xml:space="preserve">
    <value>LocalDateTimeToday()
今日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="LocalDateTimeTomorrow.Description" xml:space="preserve">
    <value>LocalDateTimeTomorrow()
明日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="LocalDateTimeTwoWeeksAway.Description" xml:space="preserve">
    <value>LocalDateTimeTwoWeeksAway()
再来週の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="LocalDateTimeYesterday.Description" xml:space="preserve">
    <value>LocalDateTimeYesterday()
昨日に関連する日付 / 時刻値を返します。</value>
  </data>
</root>