<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BarString.NewToolbarName" xml:space="preserve">
    <value>ツール</value>
  </data>
  <data name="BarString.RibbonUnassignedPages" xml:space="preserve">
    <value>(未割り当てページ)</value>
  </data>
  <data name="BarString.RibbonGalleryFilter" xml:space="preserve">
    <value>すべてのグループ</value>
  </data>
  <data name="BarString.ToolbarNameCaption" xml:space="preserve">
    <value>ツールバー名(&amp;T):</value>
  </data>
  <data name="BarString.ResetButton" xml:space="preserve">
    <value>ツールバーをリセット(&amp;R)</value>
  </data>
  <data name="BarString.RenameToolbarCaption" xml:space="preserve">
    <value>ツールバー名を変更</value>
  </data>
  <data name="BarString.ToolBarMenu" xml:space="preserve">
    <value>リセット(&amp;R)$削除(&amp;D)$!ネーム(&amp;N)$!デフォルト スタイル(&amp;L)$テキストのみ[常時](&amp;T)$[メニュー内で]テキストのみ(&amp;O)$イメージとテキスト(&amp;A)$!グループを開始(&amp;G)$可視(&amp;V)$最近使用した(&amp;M)</value>
  </data>
  <data name="BarString.NewMenuName" xml:space="preserve">
    <value>メイン メニュー</value>
  </data>
  <data name="BarString.PopupMenuEditor" xml:space="preserve">
    <value>ポップアップ メニュー エディタ</value>
  </data>
  <data name="BarString.RibbonToolbarMinimizeRibbon" xml:space="preserve">
    <value>リボンの最小化(&amp;N)</value>
  </data>
  <data name="BarString.RibbonToolbarRemove" xml:space="preserve">
    <value>クイック アクセス ツールバーから削除(&amp;R)</value>
  </data>
  <data name="BarString.RibbonGalleryFilterNone" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="BarString.NewToolbarCustomNameFormat" xml:space="preserve">
    <value>カスタム {0}</value>
  </data>
  <data name="BarString.BarUnassignedItems" xml:space="preserve">
    <value>(未割り当て項目)</value>
  </data>
  <data name="BarString.NewStatusBarName" xml:space="preserve">
    <value>ステータスバー</value>
  </data>
  <data name="BarString.MenuAnimationSlide" xml:space="preserve">
    <value>スライド</value>
  </data>
  <data name="BarString.AddOrRemove" xml:space="preserve">
    <value>ボタンの追加 / 削除(&amp;A)</value>
  </data>
  <data name="BarString.RibbonToolbarBelow" xml:space="preserve">
    <value>リボンの下にクイック アクセス ツールバーを表示(&amp;S)</value>
  </data>
  <data name="BarString.RibbonToolbarAbove" xml:space="preserve">
    <value>リボンの上にクイック アクセス ツールバーを表示(&amp;S)</value>
  </data>
  <data name="BarString.CustomizeWindowCaption" xml:space="preserve">
    <value>カスタマイズ</value>
  </data>
  <data name="BarString.MenuAnimationNone" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="BarString.MenuAnimationFade" xml:space="preserve">
    <value>フェード</value>
  </data>
  <data name="BarString.ResetBarCaption" xml:space="preserve">
    <value>カスタマイズ</value>
  </data>
  <data name="BarString.NewToolbarCaption" xml:space="preserve">
    <value>新規ツールバー</value>
  </data>
  <data name="BarString.RibbonAllPages" xml:space="preserve">
    <value>(すべてのページ)</value>
  </data>
  <data name="BarString.MenuAnimationSystem" xml:space="preserve">
    <value>(システム デフォルト)</value>
  </data>
  <data name="BarString.CustomizeButton" xml:space="preserve">
    <value>カスタマイズ(&amp;C)...</value>
  </data>
  <data name="BarString.MenuAnimationRandom" xml:space="preserve">
    <value>ランダム</value>
  </data>
  <data name="BarString.BarAllItems" xml:space="preserve">
    <value>(すべての項目)</value>
  </data>
  <data name="BarString.MenuAnimationUnfold" xml:space="preserve">
    <value>展開</value>
  </data>
  <data name="BarString.RibbonToolbarAdd" xml:space="preserve">
    <value>クイック アクセス ツールバーに追加(&amp;A)</value>
  </data>
  <data name="BarString.ResetBar" xml:space="preserve">
    <value>'{0}' ツールバーへの変更を、リセットしてもよろしいですか？</value>
  </data>
  <data name="BarString.HelpButton" xml:space="preserve">
    <value>ヘルプ</value>
  </data>
  <data name="BarString.MinimizeButton" xml:space="preserve">
    <value>最小化する</value>
  </data>
  <data name="BarString.RestoreButton" xml:space="preserve">
    <value>元に戻す</value>
  </data>
  <data name="BarString.MaximizeButton" xml:space="preserve">
    <value>最大化する</value>
  </data>
  <data name="BarString.CloseButton" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="BarString.SkinsBonus" xml:space="preserve">
    <value>ボーナス スキン</value>
  </data>
  <data name="BarString.SkinsOffice" xml:space="preserve">
    <value>Office スキン</value>
  </data>
  <data name="BarString.SkinCaptions" xml:space="preserve">
    <value>|DevExpress スタイル|キャラメル|マネー ツイン|DevExpress ダークスタイル|iMaginary|リリアン|黒|青|Office 2010 青|Office 2010 黒|Office 2010 シルバー|Office 2007 青|Office 2007 黒|Office 2007 シルバー|Office 2007 緑|Office 2007 ピンク|セブン|セブン クラシック|ダークルーム|マックスキン|シャープ|シャープ プラス|フォギー|ダークサイド|クリスマス（青）|春|夏|パンプキン|バレンタイン|スターダスト|コーヒー|ガラスの海|ハイコントラスト|リキッド スカイ|ロンドン リキッド スカイ|アスファルト ワールド|ブループリント|ホワイトプリント|VS2010|メトロポリス|メトロポリス ダーク|</value>
  </data>
  <data name="BarString.SkinsMain" xml:space="preserve">
    <value>標準のスキン</value>
  </data>
  <data name="BarString.ShowShortcutKeysOnScreenTipsName" xml:space="preserve">
    <value>ツールヒントでショートカット キーを表示</value>
  </data>
  <data name="BarString.ShowScreenTipsOnToolbarsName" xml:space="preserve">
    <value>ツールバーの上にツールヒントを表示</value>
  </data>
  <data name="DocumentManagerStringId.CommandCascade" xml:space="preserve">
    <value>カスケード ウィンドウ</value>
  </data>
  <data name="BarString.ExpandRibbonSuperTipText" xml:space="preserve">
    <value>コマンドのクリック後もリボンが常に展開されるよう表示</value>
  </data>
  <data name="BarString.CollapseRibbonSuperTipHeader" xml:space="preserve">
    <value>リボンを最小化(Ctrl+F1)</value>
  </data>
  <data name="BarString.ExpandRibbonSuperTipHeader" xml:space="preserve">
    <value>リボンを展開(Ctrl+F1)</value>
  </data>
  <data name="BarString.CollapseRibbonSuperTipText" xml:space="preserve">
    <value>リボンにタブ名のみを表示</value>
  </data>
  <data name="DocumentManagerStringId.CommandActivate" xml:space="preserve">
    <value>有効</value>
  </data>
  <data name="DocumentManagerStringId.CommandCloseAllButThis" xml:space="preserve">
    <value>これ以外を閉じる</value>
  </data>
  <data name="DocumentManagerStringId.CommandClose" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="DocumentManagerStringId.CommandMinimizeAll" xml:space="preserve">
    <value>ウィンドウを最小化</value>
  </data>
  <data name="DocumentManagerStringId.CommandDock" xml:space="preserve">
    <value>タブ付きドキュメントとしてドッキング</value>
  </data>
  <data name="DocumentManagerStringId.CommandRestoreAll" xml:space="preserve">
    <value>ウィンドウを復元</value>
  </data>
  <data name="DocumentManagerStringId.CommandTileHorizontal" xml:space="preserve">
    <value>ウィンドウを復元</value>
  </data>
  <data name="DocumentManagerStringId.CommandTileVertical" xml:space="preserve">
    <value>ウィンドウをサイド バイ サイドで表示</value>
  </data>
  <data name="DocumentManagerStringId.CommandVerticalOrientation" xml:space="preserve">
    <value>縦</value>
  </data>
  <data name="DocumentManagerStringId.CommandArrangeIcons" xml:space="preserve">
    <value>アイコンを配置</value>
  </data>
  <data name="DocumentManagerStringId.CommandNewVerticalDocumentGroup" xml:space="preserve">
    <value>新規縦タブ グループ</value>
  </data>
  <data name="DocumentManagerStringId.CommandMoveToNextDocumentGroup" xml:space="preserve">
    <value>次のタブ グループに移動</value>
  </data>
  <data name="DocumentManagerStringId.CommandMoveToPrevDocumentGroup" xml:space="preserve">
    <value>前のタブ グループに移動</value>
  </data>
  <data name="DocumentManagerStringId.CommandHorizontalOrientation" xml:space="preserve">
    <value>横</value>
  </data>
  <data name="DocumentManagerStringId.CommandNewDocumentGroup" xml:space="preserve">
    <value>新規タブ グループ</value>
  </data>
  <data name="DocumentManagerStringId.CommandNewHorizontalDocumentGroup" xml:space="preserve">
    <value>新規横タブ クループ</value>
  </data>
  <data name="BarString.CustomizeToolbarText" xml:space="preserve">
    <value>ツールバーをカスタマイズ</value>
  </data>
  <data name="BarString.CustomizeToolbarSuperTipText" xml:space="preserve">
    <value>クイック アクセス ツールバーをカスタマイズ</value>
  </data>
  <data name="BarString.None" xml:space="preserve">
    <value />
  </data>
  <data name="BarString.MoreCommands" xml:space="preserve">
    <value>追加コマンド(&amp;M)…</value>
  </data>
  <data name="BarString.SkinsCustom" xml:space="preserve">
    <value>カスタム　スキン</value>
  </data>
  <data name="BarString.CustomizeRibbon" xml:space="preserve">
    <value>リボンをカスタマイズ(&amp;R)…</value>
  </data>
  <data name="BarString.CustomizeQuickAccessToolbar" xml:space="preserve">
    <value>クイック アクセス ツールバーをカスタマイズ(&amp;C)…</value>
  </data>
  <data name="BarString.SkinsTheme" xml:space="preserve">
    <value>テーマ スキン</value>
  </data>
  <data name="BarString.CancelButton" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="BarString.ColorPickPopupThemeColorsGroupCaption">
	<value>テーマの色</value>
  </data>
  <data name="BarString.ColorPickPopupStandardColorsGroupCaption">
	<value>標準の色</value>
  </data>
  <data name="BarString.ColorPickPopupMoreColorsItemCaption">
	<value>その他の色</value>
  </data>

  <data name="BarString.RibbonCustomizationOptionAllTabs">
	<value>すべてのタブ</value>
  </data>
  <data name="BarString.RibbonCustomizationOptionAllCommands">
	<value>すべてのコマンド</value>
  </data>
  <data name="BarString.RibbonCustomizationStandardCustomItemSuffix">
	<value>カスタム</value>
  </data>
  <data name="BarString.RibbonCustomizationResetSelectedTabSettingsCommand">
	<value>選択されたリボン タブのみをリセット</value>
  </data>
  <data name="BarString.RibbonCustomizationResetSettingsCommand">
	<value>すべてのカスタマイズをリセット</value>
  </data>
  <data name="BarString.RibbonCustomizationImportSettingsCommand">
	<value>カスタマイズ ファイルをインポート</value>
  </data>
  <data name="BarString.RibbonCustomizationExportSettingsCommand">
	<value>すべてのカスタマイズをエクスポート</value>
  </data>
  <data name="BarString.RibbonCustomizationNewTabDefaultAlias">
	<value>新規タブ</value>
  </data>
  <data name="BarString.RibbonCustomizationNewGroupDefaultAlias">
	<value>新規タブ</value>
  </data>
  <data name="BarString.RibbonCustomizationNewCategoryDefaultAlias">
	<value>新規カテゴリー</value>
  </data>
  <data name="BarString.RibbonCustomizationNewCategoryCommand">
	  <value>新規カテゴリー</value>
  </data>
  <data name="BarString.RibbonCustomizationNewPageCommand">
    <value>新規タブ</value>
  </data>
  <data name="BarString.RibbonCustomizationNewGroupCommand">
    <value>新規タブ</value>
  </data>
  <data name="BarString.ColorTabWebSafeColors">
	<value>Web セーフ</value>
  </data>
  <data name="BarString.ColorPickHueAxisName">
	<value>色相</value>
  </data>
  <data name="BarString.ColorPickSaturationAxisName">
	<value>彩度</value>
  </data>
  <data name="BarString.ColorPickLuminanceAxisName">
	<value>輝度</value>
  </data>
  <data name="BarString.ColorPickBrightnessAxisName">
	<value>明度</value>
  </data>
  <data name="BarString.ColorPickOpacityAxisName">
	<value>不透明度</value>
  </data>
  <data name="BarString.ColorPickRedValidationMsg">
	<value>赤のコンポーネントは0～255の範囲内である必要があります。</value>
  </data>
  <data name="BarString.ColorPickGreenValidationMsg">
	<value>緑のコンポーネントは0～255の範囲内である必要があります。</value>
  </data>
  <data name="BarString.ColorPickBlueValidationMsg">
	<value>青のコンポーネントは0～255の範囲内である必要があります。</value>
  </data>
  <data name="BarString.ColorPickOpacityValidationMsg">
	<value>不透明度のコンポーネントは0～255の範囲内である必要があります。</value>
  </data>
  <data name="BarString.ColorPickColorHexValidationMsg">
	<value>この16進値は無効です。</value>
  </data>
  <data name="BarString.ColorPickHueValidationMsg">
	<value>色相のコンポーネントは0～359の範囲内である必要があります。</value>
  </data>
  <data name="BarString.ColorPickSaturationValidationMsg">
	<value>彩度のコンポーネントは0～100の範囲内である必要があります。</value>
  </data>
  <data name="BarString.ColorPickBrightValidationMsg">
	<value>明度のコンポーネントは0～100の範囲内である必要があります。</value>
  </data>
  <data name="BarString.ColorPickPopupRecentColorsGroupCaption">
	<value>最近使用した色</value>
  </data>
</root>