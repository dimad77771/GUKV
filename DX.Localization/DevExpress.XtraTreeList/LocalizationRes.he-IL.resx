<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TreeListStringId.ColumnCustomizationText" xml:space="preserve">
    <value>התאמה אישית</value>
    <comment>Customization</comment>
  </data>
  <data name="TreeListStringId.ColumnNamePrefix" xml:space="preserve">
    <value>עמודה</value>
    <comment>col</comment>
  </data>
  <data name="TreeListStringId.CustomizationFormColumnHint" xml:space="preserve">
    <value>משוך וסחוב עמודות לסידור אישי</value>
    <comment>Drag and drop columns here to customize layout</comment>
  </data>
  <data name="TreeListStringId.InvalidNodeExceptionText" xml:space="preserve">
    <value>? האם אתה  רוצה לתקן את הערך</value>
    <comment> Do you want to correct the value ?</comment>
  </data>
  <data name="TreeListStringId.MenuColumnBestFit" xml:space="preserve">
    <value>התאמה מירבית</value>
    <comment>Best Fit</comment>
  </data>
  <data name="TreeListStringId.MenuColumnBestFitAllColumns" xml:space="preserve">
    <value>(התאמה מירבית (לכל העמודות</value>
    <comment>Best Fit (all columns)</comment>
  </data>
  <data name="TreeListStringId.MenuColumnColumnCustomization" xml:space="preserve">
    <value>בוחר עמודה</value>
    <comment>Column Chooser</comment>
  </data>
  <data name="TreeListStringId.MenuColumnSortAscending" xml:space="preserve">
    <value>מיון בסדר עולה</value>
    <comment>Sort Ascending</comment>
  </data>
  <data name="TreeListStringId.MenuColumnSortDescending" xml:space="preserve">
    <value>מיון בסדר יורד</value>
    <comment>Sort Descending</comment>
  </data>
  <data name="TreeListStringId.MenuFooterAllNodes" xml:space="preserve">
    <value>כל הצמתים</value>
    <comment>All Nodes</comment>
  </data>
  <data name="TreeListStringId.MenuFooterAverage" xml:space="preserve">
    <value>ממוצע</value>
    <comment>Average</comment>
  </data>
  <data name="TreeListStringId.MenuFooterAverageFormat" xml:space="preserve">
    <value>{ממוצע = {##.#:0</value>
    <comment>AVG={0:#.##}</comment>
  </data>
  <data name="TreeListStringId.MenuFooterCount" xml:space="preserve">
    <value>סכום</value>
    <comment>Count</comment>
  </data>
  <data name="TreeListStringId.MenuFooterCountFormat" xml:space="preserve">
    <value>{0}</value>
    <comment>{0}</comment>
  </data>
  <data name="TreeListStringId.MenuFooterMax" xml:space="preserve">
    <value>הרב ביותר</value>
    <comment>Max</comment>
  </data>
  <data name="TreeListStringId.MenuFooterMaxFormat" xml:space="preserve">
    <value>{הרב ביותר = {0</value>
    <comment>MAX={0}</comment>
  </data>
  <data name="TreeListStringId.MenuFooterMin" xml:space="preserve">
    <value>הנמוך ביותר</value>
    <comment>Min</comment>
  </data>
  <data name="TreeListStringId.MenuFooterMinFormat" xml:space="preserve">
    <value>{הנמוך ביותר = {0</value>
    <comment>MIN={0}</comment>
  </data>
  <data name="TreeListStringId.MenuFooterNone" xml:space="preserve">
    <value>אף אחד</value>
    <comment>None</comment>
  </data>
  <data name="TreeListStringId.MenuFooterSum" xml:space="preserve">
    <value>סכום</value>
    <comment>Sum</comment>
  </data>
  <data name="TreeListStringId.MenuFooterSumFormat" xml:space="preserve">
    <value>{סכום= {##.#:0</value>
    <comment>SUM={0:#.##}</comment>
  </data>
  <data name="TreeListStringId.MultiSelectMethodNotSupported" xml:space="preserve">
    <value>שיטה מסוימת לא תעבוד כאשר ריבוי בחירות מוגדר כלא פעיל  </value>
    <comment>Specified method will not work when OptionsBehavior.MultiSelect is inactive.</comment>
  </data>
  <data name="TreeListStringId.PrintDesignerDescription" xml:space="preserve">
    <value>יצירה של אפשריות הדפסה לרשימת העץ הנכחי</value>
    <comment>Set up various printing options for the current treelist.</comment>
  </data>
  <data name="TreeListStringId.PrintDesignerHeader" xml:space="preserve">
    <value>הגדרות הדפסה</value>
    <comment>Print Settings</comment>
  </data>
</root>