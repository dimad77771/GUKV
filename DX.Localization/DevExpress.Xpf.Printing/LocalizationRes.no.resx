<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PrintingStringId.OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="PrintingStringId.Cancel" xml:space="preserve">
    <value>Avbryt</value>
  </data>
  <data name="PrintingStringId.ToolBarCaption" xml:space="preserve">
    <value>Print Preview</value>
  </data>
  <data name="PrintingStringId.StatusBarCaption" xml:space="preserve">
    <value>Status Bar</value>
  </data>
  <data name="PrintingStringId.Print" xml:space="preserve">
    <value>Print...</value>
  </data>
  <data name="PrintingStringId.PrintDirect" xml:space="preserve">
    <value>Quick Print</value>
  </data>
  <data name="PrintingStringId.Zoom" xml:space="preserve">
    <value>Zoom</value>
  </data>
  <data name="PrintingStringId.DecreaseZoom" xml:space="preserve">
    <value>Zoom Out</value>
  </data>
  <data name="PrintingStringId.IncreaseZoom" xml:space="preserve">
    <value>Zoom In</value>
  </data>
  <data name="PrintingStringId.ZoomToPageWidth" xml:space="preserve">
    <value>Page Width</value>
  </data>
  <data name="PrintingStringId.ZoomToPageHeight" xml:space="preserve">
    <value>Page Height</value>
  </data>
  <data name="PrintingStringId.ZoomToWholePage" xml:space="preserve">
    <value>Whole Page</value>
  </data>
  <data name="PrintingStringId.ZoomToTwoPages" xml:space="preserve">
    <value>Two Pages</value>
  </data>
  <data name="PrintingStringId.FirstPage" xml:space="preserve">
    <value>First Page</value>
  </data>
  <data name="PrintingStringId.PreviousPage" xml:space="preserve">
    <value>Previous Page</value>
  </data>
  <data name="PrintingStringId.NextPage" xml:space="preserve">
    <value>Next Page</value>
  </data>
  <data name="PrintingStringId.LastPage" xml:space="preserve">
    <value>Last Page</value>
  </data>
  <data name="PrintingStringId.ExportPdf" xml:space="preserve">
    <value>PDF File</value>
  </data>
  <data name="PrintingStringId.ExportHtm" xml:space="preserve">
    <value>HTML File</value>
  </data>
  <data name="PrintingStringId.ExportMht" xml:space="preserve">
    <value>MHT File</value>
  </data>
  <data name="PrintingStringId.ExportRtf" xml:space="preserve">
    <value>RTF File</value>
  </data>
  <data name="PrintingStringId.ExportXls" xml:space="preserve">
    <value>XLS File</value>
  </data>
  <data name="PrintingStringId.ExportXlsx" xml:space="preserve">
    <value>XLSX File</value>
  </data>
  <data name="PrintingStringId.ExportCsv" xml:space="preserve">
    <value>CSV File</value>
  </data>
  <data name="PrintingStringId.ExportTxt" xml:space="preserve">
    <value>Text File</value>
  </data>
  <data name="PrintingStringId.ExportImage" xml:space="preserve">
    <value>Image File</value>
  </data>
  <data name="PrintingStringId.ExportXps" xml:space="preserve">
    <value>XPS File</value>
  </data>
  <data name="PrintingStringId.ExportFile" xml:space="preserve">
    <value>Export Document...</value>
  </data>
  <data name="PrintingStringId.Scaling" xml:space="preserve">
    <value>Scale</value>
  </data>
  <data name="PrintingStringId.Scaling_Adjust_Start_Label" xml:space="preserve">
    <value>Adjust to</value>
  </data>
  <data name="PrintingStringId.Scaling_Adjust_End_Label" xml:space="preserve">
    <value>normal size</value>
  </data>
  <data name="PrintingStringId.Scaling_Fit_Start_Label" xml:space="preserve">
    <value>Fit to</value>
  </data>
  <data name="PrintingStringId.Scaling_Fit_End_Label" xml:space="preserve">
    <value>pages wide</value>
  </data>
  <data name="PrintingStringId.Scaling_ComboBoxEdit_Validation_Error" xml:space="preserve">
    <value>The value is not valid</value>
  </data>
  <data name="PrintingStringId.Scaling_ComboBoxEdit_Validation_OutOfRange_Error" xml:space="preserve">
    <value>The value is out of range</value>
  </data>
  <data name="PrintingStringId.Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="PrintingStringId.SendPdf" xml:space="preserve">
    <value>PDF File</value>
  </data>
  <data name="PrintingStringId.SendMht" xml:space="preserve">
    <value>MHT File</value>
  </data>
  <data name="PrintingStringId.SendRtf" xml:space="preserve">
    <value>RTF File</value>
  </data>
  <data name="PrintingStringId.SendXls" xml:space="preserve">
    <value>XLS File</value>
  </data>
  <data name="PrintingStringId.SendXlsx" xml:space="preserve">
    <value>XLSX File</value>
  </data>
  <data name="PrintingStringId.SendCsv" xml:space="preserve">
    <value>CSV File</value>
  </data>
  <data name="PrintingStringId.SendTxt" xml:space="preserve">
    <value>Text File</value>
  </data>
  <data name="PrintingStringId.SendImage" xml:space="preserve">
    <value>Image File</value>
  </data>
  <data name="PrintingStringId.SendXps" xml:space="preserve">
    <value>XPS File</value>
  </data>
  <data name="PrintingStringId.SendFile" xml:space="preserve">
    <value>Send via e-mail...</value>
  </data>
  <data name="PrintingStringId.StopPageBuilding" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="PrintingStringId.CurrentPageDisplayFormat" xml:space="preserve">
    <value>Page {0} of {1}</value>
  </data>
  <data name="PrintingStringId.ZoomDisplayFormat" xml:space="preserve">
    <value>Zoom: {0:0}%</value>
  </data>
  <data name="PrintingStringId.MsgCaption" xml:space="preserve">
    <value>DXPrinting</value>
  </data>
  <data name="PrintingStringId.PageSetup" xml:space="preserve">
    <value>Page Setup...</value>
  </data>
  <data name="PrintingStringId.GoToPage" xml:space="preserve">
    <value>Page:</value>
  </data>
  <data name="PrintingStringId.PrintPreviewWindowCaption" xml:space="preserve">
    <value>Print Preview</value>
  </data>
  <data name="PrintingStringId.DefaultPrintJobDescription" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="PrintingStringId.PdfPasswordSecurityOptions_Title" xml:space="preserve">
    <value>PDF Password Security</value>
  </data>
  <data name="PrintingStringId.PdfPasswordSecurityOptions_RequireOpenPassword" xml:space="preserve">
    <value>Require a password to open the document</value>
  </data>
  <data name="PrintingStringId.PdfPasswordSecurityOptions_OpenPassword" xml:space="preserve">
    <value>Document open password:</value>
  </data>
  <data name="PrintingStringId.PdfPasswordSecurityOptions_RestrictPermissions" xml:space="preserve">
    <value>Restrict editing and printing of the document</value>
  </data>
  <data name="PrintingStringId.PdfPasswordSecurityOptions_PermissionsPassword" xml:space="preserve">
    <value>Change permissions password:</value>
  </data>
  <data name="PrintingStringId.PdfPasswordSecurityOptions_PrintingPermissions" xml:space="preserve">
    <value>Printing allowed:</value>
  </data>
  <data name="PrintingStringId.PdfPasswordSecurityOptions_ChangingPermissions" xml:space="preserve">
    <value>Changes allowed:</value>
  </data>
  <data name="PrintingStringId.PdfPasswordSecurityOptions_EnableCopying" xml:space="preserve">
    <value>Enable copying of text, images and other content</value>
  </data>
  <data name="PrintingStringId.PdfPasswordSecurityOptions_EnableScreenReaders" xml:space="preserve">
    <value>Enable text access for screen reader devices for the visually impaired</value>
  </data>
  <data name="PrintingStringId.RepeatPassword_OpenPassword_Title" xml:space="preserve">
    <value>Confirm Document Open Password</value>
  </data>
  <data name="PrintingStringId.RepeatPassword_OpenPassword_Note" xml:space="preserve">
    <value>Please confirm the Document Open Password. Be sure to make a note of the password. It will be required to open the document.</value>
  </data>
  <data name="PrintingStringId.RepeatPassword_OpenPassword" xml:space="preserve">
    <value>Document open password:</value>
  </data>
  <data name="PrintingStringId.RepeatPassword_PermissionsPassword_Title" xml:space="preserve">
    <value>Confirm Permissions Password</value>
  </data>
  <data name="PrintingStringId.RepeatPassword_PermissionsPassword_Note" xml:space="preserve">
    <value>Please confirm the Permissions Password. Be sure to make a note of the password. You will need it to change these settings in the future.</value>
  </data>
  <data name="PrintingStringId.RepeatPassword_PermissionsPassword" xml:space="preserve">
    <value>Permissions password:</value>
  </data>
  <data name="PrintingStringId.RepeatPassword_ConfirmationPasswordDoesNotMatch" xml:space="preserve">
    <value>Confirmation password does not match. Please start over and enter the password again.</value>
  </data>
  <data name="PrintingStringId.PageSetupWindowTitle" xml:space="preserve">
    <value>Page Setup</value>
  </data>
  <data name="PrintingStringId.PageSetupMarginsCaptionFormat" xml:space="preserve">
    <value>Margins in {0}</value>
  </data>
  <data name="PrintingStringId.PageSetupPrinterCaption" xml:space="preserve">
    <value>Printer</value>
  </data>
  <data name="PrintingStringId.PageSetupPrinter" xml:space="preserve">
    <value>Printer:</value>
  </data>
  <data name="PrintingStringId.PageSetupPrinterType" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="PrintingStringId.PageSetupPrinterPort" xml:space="preserve">
    <value>Port:</value>
  </data>
  <data name="PrintingStringId.PageSetupPrinterComment" xml:space="preserve">
    <value>Comment:</value>
  </data>
  <data name="PrintingStringId.PageSetupPaperCaption" xml:space="preserve">
    <value>Paper</value>
  </data>
  <data name="PrintingStringId.PageSetupPaperSize" xml:space="preserve">
    <value>Paper size:</value>
  </data>
  <data name="PrintingStringId.PageSetupOrientationCaption" xml:space="preserve">
    <value>Orientation:</value>
  </data>
  <data name="PrintingStringId.PageSetupOrientationPortrait" xml:space="preserve">
    <value>Portrait</value>
  </data>
  <data name="PrintingStringId.PageSetupOrientationLandscape" xml:space="preserve">
    <value>Landscape</value>
  </data>
  <data name="PrintingStringId.PageSetupMarginsLeft" xml:space="preserve">
    <value>Left:</value>
  </data>
  <data name="PrintingStringId.PageSetupMarginsTop" xml:space="preserve">
    <value>Top:</value>
  </data>
  <data name="PrintingStringId.PageSetupMarginsRight" xml:space="preserve">
    <value>Right:</value>
  </data>
  <data name="PrintingStringId.PageSetupMarginsBottom" xml:space="preserve">
    <value>Bottom:</value>
  </data>
  <data name="PrintingStringId.PageSetupMillimeters" xml:space="preserve">
    <value>Millimeters</value>
  </data>
  <data name="PrintingStringId.PageSetupInches" xml:space="preserve">
    <value>Inches</value>
  </data>
  <data name="PrintingStringId.ZoomValueItemFormat" xml:space="preserve">
    <value>{0}%</value>
  </data>
  <data name="PrintingStringId.Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="PrintingStringId.Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="PrintingStringId.Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="PrintingStringId.DocumentMap" xml:space="preserve">
    <value>Document Map</value>
  </data>
  <data name="PrintingStringId.Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="PrintingStringId.Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="PrintingStringId.Parameters" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="PrintingStringId.ParametersReset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="PrintingStringId.ParametersSubmit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="PrintingStringId.PdfPasswordSecurityOptions_Permissions" xml:space="preserve">
    <value>Permissions</value>
  </data>
  <data name="PrintingStringId.PdfPasswordSecurityOptions_OpenPasswordHeader" xml:space="preserve">
    <value>Document Open Password</value>
  </data>
  <data name="PrintingStringId.Search_EmptyResult" xml:space="preserve">
    <value>Your search did not match any text.</value>
  </data>
  <data name="PrintingStringId.PreparingPages" xml:space="preserve">
    <value>Preparing pages...</value>
  </data>
  <data name="PrintingStringId.PagesArePrepared" xml:space="preserve">
    <value>Pages are ready. Continue printing?</value>
  </data>
  <data name="PrintingStringId.ExportPdfToWindow" xml:space="preserve">
    <value>PDF File</value>
  </data>
  <data name="PrintingStringId.ExportHtmToWindow" xml:space="preserve">
    <value>HTML File</value>
  </data>
  <data name="PrintingStringId.ExportMhtToWindow" xml:space="preserve">
    <value>MHT File</value>
  </data>
  <data name="PrintingStringId.ExportRtfToWindow" xml:space="preserve">
    <value>RTF File</value>
  </data>
  <data name="PrintingStringId.ExportXlsToWindow" xml:space="preserve">
    <value>XLS File</value>
  </data>
  <data name="PrintingStringId.ExportXlsxToWindow" xml:space="preserve">
    <value>XLSX File</value>
  </data>
  <data name="PrintingStringId.ExportCsvToWindow" xml:space="preserve">
    <value>CSV File</value>
  </data>
  <data name="PrintingStringId.ExportTxtToWindow" xml:space="preserve">
    <value>Text File</value>
  </data>
  <data name="PrintingStringId.ExportImageToWindow" xml:space="preserve">
    <value>Image File</value>
  </data>
  <data name="PrintingStringId.ExportXpsToWindow" xml:space="preserve">
    <value>XPS File</value>
  </data>
  <data name="PrintingStringId.ExportFileToWindow" xml:space="preserve">
    <value>Export Document to Window...</value>
  </data>
  <data name="PrintingStringId.ClosePreview" xml:space="preserve">
    <value>Close</value>
  </data>
</root>