<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EditorStringId.OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="EditorStringId.Clear" xml:space="preserve">
    <value>Wyczyść</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBetween" xml:space="preserve">
    <value>Pomiędzy</value>
  </data>
  <data name="EditorStringId.Cancel" xml:space="preserve">
    <value>Anuluj</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringGroupOperatorOr" xml:space="preserve">
    <value>Lub</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_CharIndex_Description" xml:space="preserve">
    <value>CharIndex(Tekst1, Tekst2)
Zwraca pozycje początkową Tekst1 w Tekst2, zaczynając od pozycji 0 do końca tekstu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Exp_Description" xml:space="preserve">
    <value>Exp(wartość)
Zwraca wartość ekspotencjalną z podanego wyrażenia zmienno-przecinkowego.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_AllItems" xml:space="preserve">
    <value>(Wszystko)</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetMonth_Description" xml:space="preserve">
    <value>GetMonth(DzieńCzas)
Wyciąga miesiąc z argumentu.</value>
  </data>
  <data name="EditorStringId.FilterPanelEditFilter" xml:space="preserve">
    <value>Edytuj filtr</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffDay_Description" xml:space="preserve">
    <value>DateDiffDay(dataPoczątkowa, dataKońcowa)
Zwraca ilość dni pomiędzy dwiema niepustymi datami.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Acos_Description" xml:space="preserve">
    <value>Acos(Wartość)
Zwraca acos wartości (kąta w radianach, którego kosinus jest wyrażeniem zmiennoprzecinkowym).</value>
  </data>
  <data name="EditorStringId.FilterGroupAddCondition" xml:space="preserve">
    <value>Dodaj warunek</value>
  </data>
  <data name="EditorStringId.Yes" xml:space="preserve">
    <value>Tak</value>
  </data>
  <data name="EditorStringId.ColorEdit_ColorChooserWindowTitle" xml:space="preserve">
    <value>Kolory</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Functions_Text" xml:space="preserve">
    <value>Funkcje</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Cos_Description" xml:space="preserve">
    <value>Cos(wartość)
Zwraca cosinus dla kąta zdefiniowanego w radianach.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Now_Description" xml:space="preserve">
    <value>Now()
Zwraca aktualną datę i czas.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadLeft_Description" xml:space="preserve">
    <value>PadLeft(Tekst, Długość)
Uzupełnia Tekst z lewej strony o znak odstępu (spacja), aby Tekst osiągnął podaną Długość.
</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_False_Description" xml:space="preserve">
    <value>Reprezentuje wartość logiczną Fałsz (False).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetYear_Description" xml:space="preserve">
    <value>GetYear(DzieńCzas)
Wyciąga rok z argumentu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_UtcNow_Description" xml:space="preserve">
    <value>UtcNow()
Zwraca aktualną datę i czas systemowy, wyrazony w UTC.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToStr_Description" xml:space="preserve">
    <value>ToStr(Wartość)
Zwraca tekst reprezentowany przez obiekt.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffHour_Description" xml:space="preserve">
    <value>DateDiffHour(dataPoczątkowa, dataKońcowa)
Zwraca ilość godzin pomiędzy dwiema niepustymi datami.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Insert_Description" xml:space="preserve">
    <value>Insert(Tekst1, PozycjaStartowa, Tekst2)
Wstawia Tekst2 w Tekst1 w pozycji okreslonej przez PozycjaStartowa</value>
  </data>
  <data name="EditorStringId.Copy" xml:space="preserve">
    <value>Kopiuj</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Modulo_Description" xml:space="preserve">
    <value>Zwraca resztę (wartość bezwzględną) z dzielenia jednego wyrażenia numerycznego przez drugi.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsNullOrEmpty_Description" xml:space="preserve">
    <value>IsNullOrEmpty(Tekst)
Zwraca True (Prawda) jeżeli podany Tekst jest obiektem NULL lub jest pustym słowem, w innym przypadku zwraca False (Fałsz).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Max_Description" xml:space="preserve">
    <value>Max(wartość1,wartość2)
Zwraca maksymalną wartość z podanych.</value>
  </data>
  <data name="EditorStringId.FilterPanelEnableFilter" xml:space="preserve">
    <value>Włączony filtr</value>
  </data>
  <data name="EditorStringId.No" xml:space="preserve">
    <value>Nie</value>
  </data>
  <data name="EditorStringId.FilterGroupRemoveGroup" xml:space="preserve">
    <value>Usuń grupowanie</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorNot" xml:space="preserve">
    <value>Nie</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BitwiseXor_Description" xml:space="preserve">
    <value>Wykonuje logiczne wykluczenie na dwóch wartościach logicznych, lub binarne wykluczenie na dwóch wyrażeniach numerycznych.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Replace_Description" xml:space="preserve">
    <value>Replace(Tekst1,Tekst2, Tekst3)
Zwraca kopię Tekst1, w której Tekst2 został zastąpiony Tekst3.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Operators_Text" xml:space="preserve">
    <value>Operatory</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Substring3param_Description" xml:space="preserve">
    <value>Substring(Tekst, PozycjaPoczątkowa, Długość)
Zwraca podciąg z ciągu Tekst zaczynający się od pozycji PozycjaPoczątkowa o zadanej długości.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Cosh_Description" xml:space="preserve">
    <value>Cosh(wartość)
Zwraca cosinus hyperboliczny dla kąta zdefiniowanego w radianach.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDayOfYear_Description" xml:space="preserve">
    <value>GetDayOfYear(DzieńCzas)
Wyciąga dzień roku z argumentu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadRight_Description" xml:space="preserve">
    <value>PadRight(Tekst, Długość)
Uzupełnia Tekst z prawej strony o znak odstępu (spacja), aby Tekst osiągnął podaną Długość.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Log10_Description" xml:space="preserve">
    <value>Log10(wartość)
Zwraca logarytm o podstawie dziesiętnej z podanej wartości.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffMilliSecond_Description" xml:space="preserve">
    <value>DateDiffMiliSecond(dataPoczątkowa, dataKońcowa)
Zwraca ilość milisekund pomiędzy dwiema niepustymi datami.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Reverse_Description" xml:space="preserve">
    <value>Reverse(Tekst)
Odwraca kolejność elementów w tekście.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetTimeOfDay_Description" xml:space="preserve">
    <value>GetTimeOfDay(DzieńCzas)
Wyciąga czas z dnia z argumentu, w Tickach (1/20000 milisekundy)</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BitwiseOr_Description" xml:space="preserve">
    <value>Porównuje każdy bit pierwszego argumentu z odpowiednim bitem drugiego argumentu. Jeżeli jeden z bitów jest 1, odpowiedni bit wyniku jest ustawiany na 1. W innym przypadku odpowiedni bit wyniku jest ustawiany na 0.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Iif_Description" xml:space="preserve">
    <value>Iif(Wyrażenie, Pozytywna, Negatywna)
Zwraca odpowiednią cześć Pozytywną lub Negatywną w zależności od wyniku logicznego wyrazenia.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sin_Description" xml:space="preserve">
    <value>Sin(wartość)
Zwraca sinus dla kąta zdefiniowanego w radianach.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Len_Description" xml:space="preserve">
    <value>Len(wartość)
Zwraca ilość bajtów potrzebną do przechowania podanej wartości.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_True_Description" xml:space="preserve">
    <value>Reprezentuje wartość logiczną Prawda (True).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Null_Description" xml:space="preserve">
    <value>Reprezentuje brak odniesienia, brak odniesienia/powiązania do żadnego obiektu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddYears_Description" xml:space="preserve">
    <value>AddYears(DataGodzina,IlośćLat)
Zwraca godzine i datę (DateTime) z dodaną ilością lat do podanej daty (DataGodzina).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddMonths_Description" xml:space="preserve">
    <value>AddMonths(DataGodzina,IlośćMiesięcy)
Zwraca godzine i datę (DateTime) z dodaną ilością miesięcy do podanej daty (DataGodzina).</value>
  </data>
  <data name="EditorStringId.ColorEdit_RecentColorsCaption" xml:space="preserve">
    <value>Ostatnio używane kolory</value>
  </data>
  <data name="EditorStringId.FilterCriteriaInvalidExpression" xml:space="preserve">
    <value>Podane wyrażenie zawiera nieprawidłowe znaki (linia {0}, znak {1}).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Upper_Description" xml:space="preserve">
    <value>Upper(Tekst)
Zwraca tekst pisany wielkimi literami.</value>
  </data>
  <data name="EditorStringId.FilterToolTipNodeRemove" xml:space="preserve">
    <value>Usuń warunek</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetHour_Description" xml:space="preserve">
    <value>GetHour(DzieńCzas)
Wyciąga godzinę z argumentu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Log2Param_Description" xml:space="preserve">
    <value>Log(wartość, podstawa)
Zwraca logarytm o podanej podstawie z podanej wartości.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsNull_Description" xml:space="preserve">
    <value>IsNull(wartość)
Zwraca prawdę jeżeli podana wartość jest NULL.</value>
  </data>
  <data name="EditorStringId.Paste" xml:space="preserve">
    <value>Wklej</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_StringItems" xml:space="preserve">
    <value>Tekst</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Divide_Description" xml:space="preserve">
    <value>Dzieli pierwszy argument przez drugi.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddMilliSeconds_Description" xml:space="preserve">
    <value>AddMilliSeconds(DataGodzina,IlośćMilisekund)
Zwraca godzine i datę (DateTime) z dodaną ilością milisekund do podanej daty (DataGodzina).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Log_Description" xml:space="preserve">
    <value>Log(wartość)
Zwraca naturalny logarytm z podanej wartości.</value>
  </data>
  <data name="EditorStringId.FilterEditorUnchecked" xml:space="preserve">
    <value>Niezaznaczony</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LessOrEqual_Description" xml:space="preserve">
    <value>Operator mniejszy lub równy niż. Używany do porównania wyrażeń.</value>
  </data>
  <data name="EditorStringId.FilterPanelClearFilter" xml:space="preserve">
    <value>Usuń filtr</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Between_Description" xml:space="preserve">
    <value>Between (,)
Określa zakres do przetestowania. Zwraca prawdę (true) jeżeli wartość jest większa bądź równa pierwszemu argumentowi i mniejsza lub równa drugiemu argumentowi.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Tanh_Description" xml:space="preserve">
    <value>Tanh(wartość)
Zwraca tangens hyperboliczny dla kąta zdefiniowanego w radianach.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Power_Description" xml:space="preserve">
    <value>Power(wartość, potęga)
Zwraca wartosć podniesioną do okreslonej potęgi.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Or_Description" xml:space="preserve">
    <value>Wykonuje logiczną dysjunkcję na dwóch wartościach logicznych.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Concat_Description" xml:space="preserve">
    <value>Concat(Tekst1, ... , TekstN)
Zwraca tekst zawierający złączenie tekstów od Tekst1 do TekstN.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Tan_Description" xml:space="preserve">
    <value>Tan(wartość)
Zwraca tangens dla kąta zdefiniowanego w radianach.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Min_Description" xml:space="preserve">
    <value>Min(wartość1, wartość2)
Zwraca minimalną wartość z podanych.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Round_Description" xml:space="preserve">
    <value>Round(Wartość)
Zaokrągla wartość do najbliższej wartości całkowitej.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffYear_Description" xml:space="preserve">
    <value>DateDiffYear(dataPoczątkowa, dataKońcowa)
Zwraca ilość lat pomiędzy dwiema niepustymi datami.</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLike" xml:space="preserve">
    <value>Podobne</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Equal_Description" xml:space="preserve">
    <value>Zwraca prawde (true) jezeli oba argumenty mają tą samą wartość. W innym przypadku zwraca fałsz (false).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Asin_Description" xml:space="preserve">
    <value>Asin(Wartość)
Zwraca asin z wartosci (kąta w radianach, którego sinus jest podanym wyrażeniem zmiennoprzecinkowym).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Less_Description" xml:space="preserve">
    <value>Operator mniejszy niż. Używany do porównania wyrażeń.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDate_Description" xml:space="preserve">
    <value>GetDate(DzieńCzas)
Wyciąga datę z argumentu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetMilliSecond_Description" xml:space="preserve">
    <value>GetMiliSeconds(DzieńCzas)
Wyciąga milisekundy z argumentu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Trim_Description" xml:space="preserve">
    <value>Trim(Tekst)
Usuwa wszystkie z przodu i z tyłu białe znaki (spacje) z Tekstu.</value>
  </data>
  <data name="EditorStringId.FilterGroupAddGroup" xml:space="preserve">
    <value>Dodaj grupowanie</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BitwiseAnd_Description" xml:space="preserve">
    <value>Wykonuje binarną logiczną operację I (AND) pomiędzy dwoma wartościami numerycznymi.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetSecond_Description" xml:space="preserve">
    <value>GetSecond(DzieńCzas)
Wyciąga sekundy z argumentu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Ceiling_Description" xml:space="preserve">
    <value>Ceiling(Wartość)
Zwraca najmniejszą liczbę całkowitą, która jest większa lub równa podanemu wyrażeniu numerycznemu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BigMul_Description" xml:space="preserve">
    <value>BigMul(Wartość1, Wartość2)
Zwraca wartość typu Int64 będąca mnożeniem dwóch wartości typu Int32.
</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Ascii_Description" xml:space="preserve">
    <value>Ascii(Text)
Zwraca kod ASCII dla znaku najbardziej  na lewo w wyrażeniu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddDays_Description" xml:space="preserve">
    <value>AddDays(DataGodzina,IlośćDni)
Zwraca godzine i datę (DateTime) z dodaną ilością dni do podanej daty (DataGodzina).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sqr_Description" xml:space="preserve">
    <value>Sqr(wartość)
Zwraca kwadrat podanej wartości.</value>
  </data>
  <data name="EditorStringId.ColorEdit_MoreColorsButtonCaption" xml:space="preserve">
    <value>Więcej kolorów...</value>
  </data>
  <data name="EditorStringId.SelectAll" xml:space="preserve">
    <value>(Wybierz wszystkie)</value>
  </data>
  <data name="EditorStringId.FilterCriteriaInvalidExpressionEx" xml:space="preserve">
    <value>Podane wyrażenie jest nieprawidłowe.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Remove_Description" xml:space="preserve">
    <value>Remove(Tekst, PozycjaPoczątkowa, Długość)
Usuwa określoną ilość znaków z Tekst, rozpoczynając w okreslonej pozycji (PozycjaPoczątkowa).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Like_Description" xml:space="preserve">
    <value>Porównuje ciag znaków z wzorcem. Jeżeli ciąg odpowiada wzorcowi, wynik jest prawdą (true). Jeżeli ciąg nie odpowiada wzorcowi wynik jest fałszem (false). Jeżeli ciąg i wzorzec jest pustym ciągiem znaków, wynik jest prawda (true).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Fields_Text" xml:space="preserve">
    <value>Pola</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Substring2param_Description" xml:space="preserve">
    <value>Substring(Tekst, PozycjaPoczątkowa)
Zwraca podciąg z ciągu Tekst zaczynający się od pozycji PozycjaPoczątkowa.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddTimeSpan_Description" xml:space="preserve">
    <value>AddTimeSpan(DataGodzina,PrzedziałCzasu)
Zwraca godzine i datę (DateTime) z dodanym przedziałem czasu do podanej daty (DataGodzina).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GridFields_Description_Prefix" xml:space="preserve">
    <value>Informacje o polu
Nagłówek: {1}
Typ pola: {2}</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadRight3Param_Description" xml:space="preserve">
    <value>PadRight(Tekst, Długość, Znak)
Uzupełnia Tekst z prawej strony o Znak, aby Tekst osiągnął podaną Długość.</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringNotLike" xml:space="preserve">
    <value>Nie podobne</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Greater_Description" xml:space="preserve">
    <value>Operator większy niż. Używany do porównania wyrażeń.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_MathItems" xml:space="preserve">
    <value>Matematyczne</value>
  </data>
  <data name="EditorStringId.FilterToolTipKeysRemove" xml:space="preserve">
    <value>(Użyj klawisza Usuń lub Odejmij)</value>
  </data>
  <data name="EditorStringId.FilterDateTimeOperatorMenuCaption" xml:space="preserve">
    <value>Operatory daty i czasu</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Minus_Description" xml:space="preserve">
    <value>Znajdź róznicę pomiędzy liczbami.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetMinute_Description" xml:space="preserve">
    <value>GetMinute(DzieńCzas)
Wyciąga minuty z argumentu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Constants_Text" xml:space="preserve">
    <value>Stałe</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Abs_Description" xml:space="preserve">
    <value>Abs(wartość)
Zwraca wartość bezwzględną, wartość dodatnią dla podanego wyrażenia.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Lower_Description" xml:space="preserve">
    <value>Lower(Tekst)
Zwraca tekst pisany małymi literami.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Char_Description" xml:space="preserve">
    <value>Char(Numer)
Zamienia liczbę całkowita na kod ASCII.</value>
  </data>
  <data name="EditorStringId.FilterEmptyValueText" xml:space="preserve">
    <value>&lt;wpisz wartość&gt;</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffMinute_Description" xml:space="preserve">
    <value>DateDiffMinute(dataPoczątkowa, dataKońcowa)
Zwraca ilość minut pomiędzy dwiema niepustymi datami.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_CharIndex3Param_Description" xml:space="preserve">
    <value>CharIndex(Tekst1, Tekst2, PozycjaPoczątkowa)
Zwraca pozycje początkową Tekst1 w Tekst2, zaczynając od pozycji PozycjaPoczątkowa do końca tekstu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_And_Description" xml:space="preserve">
    <value>Wykonuje logiczną dysjunkcję na dwóch wyrażeniach logicznych.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Floor_Description" xml:space="preserve">
    <value>Floor(wartość)
Zwraca największą wartość całkowitą mniejszą lub równą dla zadanego wyrażenia.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddTicks_Description" xml:space="preserve">
    <value>AddTicks(DataGodzina,IlośćUderzeń)
Zwraca godzine i datę (DateTime) z dodaną ilością uderzeń do podanej daty (DataGodzina). Uderzenie (Tick) to 1/10000 milisekundy.</value>
  </data>
  <data name="EditorStringId.ColorEdit_NoColorButtonCaption" xml:space="preserve">
    <value>Brak koloru</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Plus_Description" xml:space="preserve">
    <value>Dodaje wartość jednego z wyrażeń numerycznych to kolejnego, lub łączy dwa ciagi znaków.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Rnd_Description" xml:space="preserve">
    <value>Rnd()
Zwraca losową wartość numeryczną mniejszą od 1, ale większoą lub równą 0.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Title" xml:space="preserve">
    <value>Edytor wyrażeń</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDayOfWeek_Description" xml:space="preserve">
    <value>GetDayOfWeek(DzieńCzas)
Wyciąga dzień tygodnia z argumentu.</value>
  </data>
  <data name="EditorStringId.ColorEdit_StandardColorsCaption" xml:space="preserve">
    <value>Standardowe kolory</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Multiply_Description" xml:space="preserve">
    <value>Mnoży wartość dwóch wyrażeń</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_DateTimeItems" xml:space="preserve">
    <value>Data i czas</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sinh_Description" xml:space="preserve">
    <value>Sinh(wartość)
Zwraca sinus hyperboliczny dla kąta zdefiniowanego w radianach.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadLeft3Param_Description" xml:space="preserve">
    <value>PadLeft(Tekst, Długość, Znak)
Uzupełnia Tekst z lewej strony o Znak, aby Tekst osiągnął podaną Długość.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddMinutes_Description" xml:space="preserve">
    <value>AddMinutes(DataGodzina,IlośćMinut)
Zwraca godzine i datę (DateTime) z dodaną ilością minut do podanej daty (DataGodzina).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_In_Description" xml:space="preserve">
    <value>In(,,,)
Testuje istnienie własności obiektu.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddSeconds_Description" xml:space="preserve">
    <value>AddSeconds(DataGodzina,IlośćSekund)
Zwraca godzine i datę (DateTime) z dodaną ilością sekund do podanej daty (DataGodzina).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffSecond_Description" xml:space="preserve">
    <value>DateDiffSecond(dataPoczątkowa, dataKońcowa)
Zwraca ilość sekund pomiędzy dwiema niepustymi datami.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Atn2_Description" xml:space="preserve">
    <value>Atan2(Wartość1, Wartość2)
Zwraca kąt którego tangens określają dwie wartości numeryczne w radianach.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDay_Description" xml:space="preserve">
    <value>GetDay(DzieńCzas)
Wyciąga dzień z argumentu.</value>
  </data>
  <data name="EditorStringId.FilterPanelDisableFilter" xml:space="preserve">
    <value>Wyłącz filtr</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Today_Description" xml:space="preserve">
    <value>Today()
Zwraca aktualną datę. Niezaleznie od aktualnego czasu, funkcja zwraca północ aktualnego dnia.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GreaterOrEqual_Description" xml:space="preserve">
    <value>Operator większy lub równy niż. Używany do porównania wyrażeń.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Not_Description" xml:space="preserve">
    <value>Wykonuje logiczną negację wyrażenia.</value>
  </data>
  <data name="EditorStringId.Cut" xml:space="preserve">
    <value>Wytnij</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_NotEqual_Description" xml:space="preserve">
    <value>Zwraca prawde (true) jezeli oba argumenty nie mają tej samej wartości. W innym przypadku zwraca fałsz (false).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddHours_Description" xml:space="preserve">
    <value>AddHours(DataGodzina,IlośćGodzin)
Zwraca godzine i datę (DateTime) z dodaną ilością godzin do podanej daty (DataGodzina).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Atn_Description" xml:space="preserve">
    <value>Atan(Wartość)
Zwraca arctan z wartosci (kąta w radianach, którego tangens jest podanym wyrażeniem zmiennoprzecinkowym).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffMonth_Description" xml:space="preserve">
    <value>DateDiffMiounth(dataPoczątkowa, dataKońcowa)
Zwraca ilość miesięcy pomiędzy dwiema niepustymi datami.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_LogicalItems" xml:space="preserve">
    <value>Logiczne</value>
  </data>
  <data name="EditorStringId.FilterToolTipNodeAction" xml:space="preserve">
    <value>Akcje</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffTick_Description" xml:space="preserve">
    <value>DateDiffTick(dataPoczątkowa, dataKońcowa)
Zwraca ilość ticków (tick = 1/20000 milisekundy) pomiędzy dwiema niepustymi datami.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sign_Description" xml:space="preserve">
    <value>Sign(Wartość)
Zwraca pozytywna (+1), zero (0) lub negatywna (-1) znak podanego wyrażenia.</value>
  </data>
  <data name="EditorStringId.FilterClauseEndsWith" xml:space="preserve">
    <value>Kończy się na</value>
  </data>
  <data name="EditorStringId.FilterToolTipElementAdd" xml:space="preserve">
    <value>Dodaj nowy element do listy</value>
  </data>
  <data name="EditorStringId.Open" xml:space="preserve">
    <value>Otwórz</value>
  </data>
  <data name="EditorStringId.FilterToolTipNodeAdd" xml:space="preserve">
    <value>Dodaj nowy warunek do tej grupy</value>
  </data>
  <data name="EditorStringId.FilterClauseBeginsWith" xml:space="preserve">
    <value>Rozpoczyna się od</value>
  </data>
  <data name="EditorStringId.FilterGroupClearAll" xml:space="preserve">
    <value>Wyczyść wszystko</value>
  </data>
  <data name="EditorStringId.FilterToolTipKeysAdd" xml:space="preserve">
    <value>(Użyj klawisza Wstaw lub Dodaj)</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorIsNull" xml:space="preserve">
    <value>Jest puste</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringIsNotNull" xml:space="preserve">
    <value>Nie jest puste</value>
  </data>
  <data name="EditorStringId.FilterClauseContains" xml:space="preserve">
    <value>Zawiera</value>
  </data>
  <data name="EditorStringId.ColorEdit_AutomaticButtonCaption" xml:space="preserve">
    <value>Automatyczny</value>
  </data>
  <data name="EditorStringId.CalculatorButtonCancel" xml:space="preserve">
    <value>CE</value>
  </data>
  <data name="EditorStringId.CalculatorError" xml:space="preserve">
    <value>Błąd</value>
  </data>
  <data name="EditorStringId.CalculatorInvalidInputError" xml:space="preserve">
    <value>Wartość niepoprawna</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Contains_Description" xml:space="preserve">
    <value>Contains(String, SubString)
Returns True if SubString occurs within String; otherwise, False is returned.</value>
  </data>
  <data name="EditorStringId.ImageEdit_InvalidFormatMessage" xml:space="preserve">
    <value>Niepoprawny format obrazu</value>
  </data>
  <data name="EditorStringId.FilterGroupOr" xml:space="preserve">
    <value>Lub</value>
  </data>
  <data name="EditorStringId.Today" xml:space="preserve">
    <value>Dziś</value>
  </data>
  <data name="EditorStringId.Of" xml:space="preserve">
    <value>z {0}</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_White" xml:space="preserve">
    <value>Biały</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Red" xml:space="preserve">
    <value>Czerwony</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Black" xml:space="preserve">
    <value>Czarny</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Green" xml:space="preserve">
    <value>Zielony</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Blue" xml:space="preserve">
    <value>Niebieski</value>
  </data>
  <data name="EditorStringId.WaitIndicatorText" xml:space="preserve">
    <value>Ładowanie...</value>
  </data>
  <data name="EditorStringId.Page" xml:space="preserve">
    <value>Strona</value>
  </data>
  <data name="EditorStringId.OutOfRange" xml:space="preserve">
    <value>Wartośc jest spoza zakresu</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Yellow" xml:space="preserve">
    <value>Żółty</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Orange" xml:space="preserve">
    <value>Pomarańczowy</value>
  </data>
  <data name="EditorStringId.Save" xml:space="preserve">
    <value>Zapisz</value>
  </data>
  <data name="EditorStringId.CheckChecked" xml:space="preserve">
    <value>Sprawdzone</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeDefault" xml:space="preserve">
    <value>Domyślny</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringIn" xml:space="preserve">
    <value>W zbiorze</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringFunctionIsNullOrEmpty" xml:space="preserve">
    <value>Nie ma wartości lub jest pusty</value>
  </data>
  <data name="EditorStringId.ConfirmationDialogCaption" xml:space="preserve">
    <value>Potwierdzenie</value>
  </data>
  <data name="EditorStringId.LookUpFind" xml:space="preserve">
    <value>Znajdź</value>
  </data>
  <data name="EditorStringId.CheckUnchecked" xml:space="preserve">
    <value>Niesprawdzone</value>
  </data>
  <data name="EditorStringId.FilterGroupNotAnd" xml:space="preserve">
    <value>I nie</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringFunctionEndsWith" xml:space="preserve">
    <value>Kończy się na</value>
  </data>
  <data name="EditorStringId.FilterEditorChecked" xml:space="preserve">
    <value>Sprawdzony</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringFunctionStartsWith" xml:space="preserve">
    <value>Zaczyna się na</value>
  </data>
  <data name="EditorStringId.Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="EditorStringId.CalculatorDivisionByZeroError" xml:space="preserve">
    <value>Nie jest podzielne przez 0</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypePercent" xml:space="preserve">
    <value>Procent</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeNumber" xml:space="preserve">
    <value>Numer</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringFunctionContains" xml:space="preserve">
    <value>Zawiera</value>
  </data>
  <data name="EditorStringId.FilterGroupNotOr" xml:space="preserve">
    <value>NotOr</value>
  </data>
  <data name="EditorStringId.DisplayFormatNullValue" xml:space="preserve">
    <value>Żaden</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringGroupOperatorAnd" xml:space="preserve">
    <value>I</value>
  </data>
  <data name="EditorStringId.SetNullValue" xml:space="preserve">
    <value>Wyczyść</value>
  </data>
  <data name="EditorStringId.PasswordBoxEditToolTipHeader" xml:space="preserve">
    <value>Caps Lock jest włączony</value>
  </data>
  <data name="EditorStringId.FilterGroupAnd" xml:space="preserve">
    <value>I</value>
  </data>
  <data name="EditorStringId.LookUpClose" xml:space="preserve">
    <value>Zamknij</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlExample" xml:space="preserve">
    <value>Przykład:</value>
  </data>
  <data name="EditorStringId.LookUpAddNew" xml:space="preserve">
    <value>Dodaj nowy</value>
  </data>
  <data name="EditorStringId.LookUpSearch" xml:space="preserve">
    <value>Szukaj</value>
  </data>
</root>