<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EditorStringId.ExpressionEditor_Divide_Description" xml:space="preserve">
    <value>最初のオペランドを2番目のオペランドで割ります。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Constants_Text" xml:space="preserve">
    <value>定数</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Now_Description" xml:space="preserve">
    <value>Now()
システムの現在の日時を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffMinute_Description" xml:space="preserve">
    <value>DateDiffMinute(startDate, endDate)
2つの Null 非許容型の日付間の、分の境界数を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GridFields_Description_Prefix" xml:space="preserve">
    <value>フィールド情報
キャプション: {1}
フィールド タイプ: {2}</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Remove_Description" xml:space="preserve">
    <value>Remove(String, StartPosition, Length)
このインスタンスから指定された文字を削除し、指定した位置から始まります。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsLaterThisWeek" xml:space="preserve">
    <value>Is Later This Week</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDate_Description" xml:space="preserve">
    <value>GetDate(DateTime)
定義された DateTime から日付を抽出します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadRight3Param_Description" xml:space="preserve">
    <value>PadRight(String, Length, Char)
定義された文字列の文字を右側に揃え、指定の長さまで左側を特定の文字でパディングします。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Replace_Description" xml:space="preserve">
    <value>Replace(String, SubString2, String3)
SubString2をString3に差し替えたString1のコピーを返します。</value>
  </data>
  <data name="EditorStringId.FilterDateTimeOperatorMenuCaption" xml:space="preserve">
    <value>DateTime　演算子</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Ascii_Description" xml:space="preserve">
    <value>Ascii(String)
文字式で、最も左の文字の ASCII 文字コード値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_False_Description" xml:space="preserve">
    <value>ブール式の False 値を表します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Substring3param_Description" xml:space="preserve">
    <value>Substring(String, StartPosition, Length)
Stringからサブストリングを取得します。サブストリングはStartPositionで始まり、決まった Lengthがあります。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Atn2_Description" xml:space="preserve">
    <value>Atn2(Value1, Value2)
2つの特定数値の商のタンジェントである角度を、ラジアンで返します。</value>
  </data>
  <data name="EditorStringId.FilterToolTipElementAdd" xml:space="preserve">
    <value>リストに新しいアイテムを追加します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Log10_Description" xml:space="preserve">
    <value>Log10(Value)
指定した数字の10進法の対数を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Greater_Description" xml:space="preserve">
    <value>式を比較する、「～より大きい」という意味の演算子です。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Ceiling_Description" xml:space="preserve">
    <value>Ceiling(Value)
特定の数式以上の、最も小さい整数を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Trim_Description" xml:space="preserve">
    <value>Trim(String)
Stringからすべての前後の間隔を削除します。</value>
  </data>
  <data name="EditorStringId.Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Or_Description" xml:space="preserve">
    <value>2つのブール式に対して論理和を実行します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadRight_Description" xml:space="preserve">
    <value>PadRight(String, Length)
定義された文字列の文字を右側に揃え、指定の長さまで左側を空白スペースでパディングします。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_And_Description" xml:space="preserve">
    <value>2つの式に対して論理積を実行します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Reverse_Description" xml:space="preserve">
    <value>Reverse(String)
文字列内の要素の順序を逆にします。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsNull_Description" xml:space="preserve">
    <value>IsNull(Value)
指定の値が NULL の場合、True を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddMinutes_Description" xml:space="preserve">
    <value>AddMinutes(DateTime, MinutesCount)
特定の DateTime から、特定の分数離れた日付 / 時刻値を返します。
</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_MathItems" xml:space="preserve">
    <value>数学</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LessOrEqual_Description" xml:space="preserve">
    <value>式を比較する際に使用する、「～以下」という意味の演算子です。</value>
  </data>
  <data name="EditorStringId.FilterEmptyValueText" xml:space="preserve">
    <value>&lt;値を入力&gt;</value>
  </data>
  <data name="EditorStringId.FilterGroupRemoveGroup" xml:space="preserve">
    <value>グループを削除</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsNullOrEmpty_Description" xml:space="preserve">
    <value>IsNullOrEmpty(String)
指定したオブジェクトが NULL、または文字列が Empty の場合、Trueを返します。そうでなければ、False を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BigMul_Description" xml:space="preserve">
    <value>BigMul(Value1, Value2)
指定した2つの32-ビットの完全積を含む Int64 を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDayOfYear_Description" xml:space="preserve">
    <value>GetDayOfYear(DateTime)
定義された DateTime から通日を抽出します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GreaterOrEqual_Description" xml:space="preserve">
    <value>式を比較する、「～以上」という意味の演算子です。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddSeconds_Description" xml:space="preserve">
    <value>AddSeconds(DateTime, SecondsCount)
特定の DateTime から、特定の秒数離れた日付 / 時刻値を返します。
</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffMilliSecond_Description" xml:space="preserve">
    <value>DateDiffMilliSecond(startDate, endDate)
2つの Null 非許容型の日付間の、ミリ秒の境界数を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Asin_Description" xml:space="preserve">
    <value>Asin(Value)
数値のアークサイン(ラジアンで表す、フロート式のサインを持つ角度)を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Today_Description" xml:space="preserve">
    <value>Today()
現在の日付を返します。実際の時刻に関わらず、この機能は現在日付の午前 0 時を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Operators_Text" xml:space="preserve">
    <value>演算子</value>
  </data>
  <data name="EditorStringId.FilterPanelClearFilter" xml:space="preserve">
    <value>フィルターをクリア</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffMonth_Description" xml:space="preserve">
    <value>DateDiffMonth(startDate, endDate)
2つの非許容型の日付間の、月の境界数を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadLeft_Description" xml:space="preserve">
    <value>PadLeft(String, Length)
定義された文字列内で文字を左側に揃え、指定した長さまで左側を空白スペースでパディングします。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Upper_Description" xml:space="preserve">
    <value>Upper(String)
文字列を大文字で返します。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsBeyondThisYear" xml:space="preserve">
    <value>Is Beyond This Year</value>
  </data>
  <data name="EditorStringId.SelectAll" xml:space="preserve">
    <value>(すべて選択)</value>
  </data>
  <data name="EditorStringId.FilterPanelDisableFilter" xml:space="preserve">
    <value>フィルターを無効にする</value>
  </data>
  <data name="EditorStringId.Open" xml:space="preserve">
    <value>開く</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffHour_Description" xml:space="preserve">
    <value>DateDiffHour(startDate, endDate)
2つの Null 非許容型の日付間の、時間の境界数を返します。</value>
  </data>
  <data name="EditorStringId.FilterToolTipKeysRemove" xml:space="preserve">
    <value>(削除キーまたはマイナス キーを使用ください)</value>
  </data>
  <data name="EditorStringId.FilterGroupAddCondition" xml:space="preserve">
    <value>条件を追加</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDayOfWeek_Description" xml:space="preserve">
    <value>GetDayOfWeek(DateTime)
定義された DateTime から曜日を抽出します。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsEarlierThisMonth" xml:space="preserve">
    <value>Is Earlier This Month</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sinh_Description" xml:space="preserve">
    <value>Sinh(Value)
ラジアンで定義された角度の双曲線サインを返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetYear_Description" xml:space="preserve">
    <value>GetYear(DateTime)
定義された DateTime から年を抽出します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetTimeOfDay_Description" xml:space="preserve">
    <value>GetTimeOfDay(DateTime)
DateTime で定義した時刻を目盛り数として抽出します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Null_Description" xml:space="preserve">
    <value>オブジェクトを参照しない Null 参照を表します。</value>
  </data>
  <data name="EditorStringId.CalculatorDivisionByZeroError" xml:space="preserve">
    <value>ゼロで割り算できません</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Acos_Description" xml:space="preserve">
    <value>Acos(Value)
数字のアークコサイン(ラジアンで表す、フロート式のコサインを持つ角度)を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetMilliSecond_Description" xml:space="preserve">
    <value>GetMilliSecond(DateTime)
定義された DateTime からミリ秒を抽出します。</value>
  </data>
  <data name="EditorStringId.FilterCriteriaInvalidExpression" xml:space="preserve">
    <value>指定した式には無効の記号が含まれます。(line {0}, character {1})</value>
  </data>
  <data name="EditorStringId.FilterEditorUnchecked" xml:space="preserve">
    <value>チェックなし</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sin_Description" xml:space="preserve">
    <value>Sin(Value)
ラジアンで定義された角度のサインを返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Exp_Description" xml:space="preserve">
    <value>Exp(Value)
指定のフロート式のべき乗を返します。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNextWeek" xml:space="preserve">
    <value>Is Next Week</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddMonths_Description" xml:space="preserve">
    <value>AddMonths(DateTime, MonthsCount)
特定の DateTime から、特定の月数離れた日付 / 時刻値を返します。
</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNull" xml:space="preserve">
    <value>Is null</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Tan_Description" xml:space="preserve">
    <value>Tan(Value)
ラジアンで定義される角度のタンジェントを返します。</value>
  </data>
  <data name="EditorStringId.FilterToolTipKeysAdd" xml:space="preserve">
    <value>(挿入キー]またはプラスキーを使用ください)</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetMinute_Description" xml:space="preserve">
    <value>GetMinute(DateTime)
定義された DateTime から分を抽出します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetSecond_Description" xml:space="preserve">
    <value>GetSecond(DateTime)
定義された DateTime から秒を抽出します。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsLaterThisMonth" xml:space="preserve">
    <value>Is Later This Month</value>
  </data>
  <data name="EditorStringId.Paste" xml:space="preserve">
    <value>貼り付け</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Multiply_Description" xml:space="preserve">
    <value>2つの数字の積を計算します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_DateTimeItems" xml:space="preserve">
    <value>日付 / 時刻</value>
  </data>
  <data name="EditorStringId.Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetHour_Description" xml:space="preserve">
    <value>GetHour(DateTime)
定義された DateTime から時間を抽出します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Log2Param_Description" xml:space="preserve">
    <value>Log(Value, Base)
特定の進法で、指定した数字の対数を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Minus_Description" xml:space="preserve">
    <value>2つの数字の差を計算します。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsLastWeek" xml:space="preserve">
    <value>Is Last Week</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffYear_Description" xml:space="preserve">
    <value>DateDiffYear(startDate, endDate)
二つの日付が Null でない場合、日付との間の年の境界数を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Iif_Description" xml:space="preserve">
    <value>Iif(Expression, TruePart, FalsePart)
ブール式の計算によって、TruePart または FalsePart を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Cosh_Description" xml:space="preserve">
    <value>Cosh(Value)
ラジアンで定義した角度の双曲線コサインを返します。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsLaterThisYear" xml:space="preserve">
    <value>Is Later This Year</value>
  </data>
  <data name="EditorStringId.CaptionError" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="EditorStringId.ImageEdit_OpenFileFilter" xml:space="preserve">
    <value>画像ファイル(*.BMP;*.JPG;*.GIF;*.PNG)|*.BMP;*.JPG;*.GIF;*.PNG|すべてのファイル (*.*)|*.*</value>
  </data>
  <data name="EditorStringId.ImageEdit_OpenFileFilter_SL" xml:space="preserve">
    <value>画像ファイル(*.JPG;*.PNG)|*.JPG;*.PNG|すべてのファイル (*.*)|*.*</value>
  </data>
  <data name="EditorStringId.ImageEdit_SaveFileFilter" xml:space="preserve">
    <value>PNG(*.png)|*.png|BMP(*.bmp)|*.BMP|JPG(*.jpg)|*.jpg|GIF(*.gif)|*.gif</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddHours_Description" xml:space="preserve">
    <value>AddHours(DateTime, HoursCount)
特定の DateTime から、特定の時間数離れた日付 / 時刻値を返します。
</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_NotEqual_Description" xml:space="preserve">
    <value>オペランドが同じ値を持たない場合、True を返します。そうでなければ、False を返します。</value>
  </data>
  <data name="EditorStringId.FilterToolTipNodeAdd" xml:space="preserve">
    <value>グループに新しい条件を追加します。</value>
  </data>
  <data name="EditorStringId.Clear" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddTicks_Description" xml:space="preserve">
    <value>AddTicks(DateTime, TicksCount)
特定の DateTime から、特定の目盛り数離れた日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Char_Description" xml:space="preserve">
    <value>Char(Number)
integerASCIICode を文字に変換します。</value>
  </data>
  <data name="EditorStringId.FilterCriteriaInvalidExpressionEx" xml:space="preserve">
    <value>指定した数値は無効です。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Floor_Description" xml:space="preserve">
    <value>Floor(Value)
指定の数式以下の、最も大きい整数を返します。</value>
  </data>
  <data name="EditorStringId.ColorEdit_MoreColorsButtonCaption" xml:space="preserve">
    <value>その他の色...</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadLeft3Param_Description" xml:space="preserve">
    <value>PadLeft(String, Length, Char)
定義された文字列の文字を左側に揃え、指定した長さまで左側を特定の文字でパディングします。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Rnd_Description" xml:space="preserve">
    <value>Rnd()
1 未満で 0 以上の任意の数字を返します。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsEarlierThisYear" xml:space="preserve">
    <value>Is Earlier This Year</value>
  </data>
  <data name="EditorStringId.FilterToolTipNodeRemove" xml:space="preserve">
    <value>条件を削除します。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsTomorrow" xml:space="preserve">
    <value>Is Tomorrow</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Lower_Description" xml:space="preserve">
    <value>Lower(String)
文字列を小文字で返します。</value>
  </data>
  <data name="EditorStringId.FilterEditorChecked" xml:space="preserve">
    <value>チェックあり</value>
  </data>
  <data name="EditorStringId.FilterGroupClearAll" xml:space="preserve">
    <value>すべてクリア</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_CharIndex3Param_Description" xml:space="preserve">
    <value>CharIndex(String1, String2, StartLocation)
String2 内の String1 の開始位置を返します。StartLocation の文字位置から始まり、文字列の末尾で終わります。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Equal_Description" xml:space="preserve">
    <value>両方のオペランドが同じ値を持つ場合、True を返します。そうでなければ、False を返します。</value>
  </data>
  <data name="EditorStringId.FilterToolTipNodeAction" xml:space="preserve">
    <value>動作</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Modulo_Description" xml:space="preserve">
    <value>1つの数式を別の数式で割り、余り(modulus)を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_LogicalItems" xml:space="preserve">
    <value>論理的</value>
  </data>
  <data name="EditorStringId.ColorEdit_RecentColorsCaption" xml:space="preserve">
    <value>最近使った色</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_UtcNow_Description" xml:space="preserve">
    <value>UtcNow()
協定世界時(UTC)で現在のシステム日時を返します。</value>
  </data>
  <data name="EditorStringId.CalculatorError" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Atn_Description" xml:space="preserve">
    <value>Atn(Value)
数値のアークタンジェント(ラジアンで表す、フロート式のタンジェントを持つ角度)を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Min_Description" xml:space="preserve">
    <value>Min(Value1, Value2)
指定した値から最小値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetMonth_Description" xml:space="preserve">
    <value>GetMonth(DateTime)
定義された DateTime から月を抽出します。</value>
  </data>
  <data name="EditorStringId.ColorEdit_ColorChooserWindowTitle" xml:space="preserve">
    <value>色</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffTick_Description" xml:space="preserve">
    <value>DateDiffTick(startDate, endDate)
2つの非許容型の日付間の、目盛りの境界数を返します。</value>
  </data>
  <data name="EditorStringId.CalculatorInvalidInputError" xml:space="preserve">
    <value>無効入力</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Like_Description" xml:space="preserve">
    <value>パターンに対して文字列を比較します。文字列の値がパターンに一致する場合、結果は True です。文字列がパターンに一致しない場合、結果は False です。文字列とパターンの両方が空文字列の場合、結果は True です。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsYesterday" xml:space="preserve">
    <value>Is Yesterday</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Abs_Description" xml:space="preserve">
    <value>Abs(Value)
数値の絶対値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sign_Description" xml:space="preserve">
    <value>Sign(Value)
指定の式の正符号 (+1)、ゼロ (0) または負符号 (-1)を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddTimeSpan_Description" xml:space="preserve">
    <value>AddYears(DateTime, YearsCount)
特定のTimeSpan に対して、特定の  DateTime から離れた日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Round_Description" xml:space="preserve">
    <value>Round(Value)
値を最も近い整数に四捨五入します。</value>
  </data>
  <data name="EditorStringId.FilterPanelEditFilter" xml:space="preserve">
    <value>フィルターを編集</value>
  </data>
  <data name="EditorStringId.FilterClauseIsPriorThisYear" xml:space="preserve">
    <value>Is Prior This Year</value>
  </data>
  <data name="EditorStringId.FilterToolTipValueType" xml:space="preserve">
    <value>値 / 別フィールドの値 と比較</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Not_Description" xml:space="preserve">
    <value>式に対して論理否定を実行します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddDays_Description" xml:space="preserve">
    <value>AddDays(DateTime, DaysCount)
特定のDateTime から、特定の日数離れた日付 / 時刻値を返します。
</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddMilliSeconds_Description" xml:space="preserve">
    <value>AddMilliSeconds(DateTime, MilliSecondsCount)
特定の DateTime から、特定のミリ秒数離れた日付 / 時刻値を返します。
</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BitwiseAnd_Description" xml:space="preserve">
    <value>2つの整数値の間でビット単位のAND操作を実行します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToStr_Description" xml:space="preserve">
    <value>ToStr(Value)
オブジェクトの文字列表記を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sqr_Description" xml:space="preserve">
    <value>Sqr(Value)
指定した数字の平方根を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_In_Description" xml:space="preserve">
    <value>In (,,,)
オブジェクト内のプロパティの存在をテストします。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Plus_Description" xml:space="preserve">
    <value>数式の値を足す、または2つの文字列を連結します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_AllItems" xml:space="preserve">
    <value>(すべて)</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Insert_Description" xml:space="preserve">
    <value>Insert(String1, StartPosition, String2)
StartPositon で指定された String1 内の位置に String2 を挿入します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Max_Description" xml:space="preserve">
    <value>Max(Value1, Value2)
指定した値の最大値を返します。</value>
  </data>
  <data name="EditorStringId.FilterGroupAddGroup" xml:space="preserve">
    <value>グループを追加</value>
  </data>
  <data name="EditorStringId.Copy" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Len_Description" xml:space="preserve">
    <value>Len(Value)
文字列の文字数を含む整数、または変数を格納するための公称バイト数を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_StringItems" xml:space="preserve">
    <value>文字列</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffDay_Description" xml:space="preserve">
    <value>DateDiffDay(startDate, endDate)
2つの Null 非許容型の日付間の、日付の境界数を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Cos_Description" xml:space="preserve">
    <value>Cos(Value)
ラジアンで定義した角度のコサインを返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Between_Description" xml:space="preserve">
    <value>Between (,)
テスト範囲を指定します。値が最初のオペランド以上であった場合、あるいは2つめのオペランド以下であった場合、true を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Power_Description" xml:space="preserve">
    <value>Power(Value, Power)
指定した数字の累乗を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_CharIndex_Description" xml:space="preserve">
    <value>CharIndex(String1, String2)
String2 内の String1 の開始位置を返します。ゼロ文字の位置から始まり、文字列の末尾で終わります。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsToday" xml:space="preserve">
    <value>Is Today</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Concat_Description" xml:space="preserve">
    <value>Concat(String1, ... , StringN)
現在の文字列と追加の文字列を連結した文字列値を返します。</value>
  </data>
  <data name="EditorStringId.ColorEdit_ThemeColorsCaption" xml:space="preserve">
    <value>テーマの色</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Less_Description" xml:space="preserve">
    <value>式を比較する際に使用する、「～より小さい」という意味の演算子です。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Fields_Text" xml:space="preserve">
    <value>フィールド</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeDayAfterTomorrow_Description" xml:space="preserve">
    <value>LocalDateTimeDayAfterTomorrow()
明後日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeLastWeek_Description" xml:space="preserve">
    <value>LocalDateTimeLastWeek()
先週の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeNextMonth_Description" xml:space="preserve">
    <value>LocalDateTimeNextMonth()
来月の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeNextWeek_Description" xml:space="preserve">
    <value>LocalDateTimeNextWeek()
来週の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeNextYear_Description" xml:space="preserve">
    <value>LocalDateTimeNextYear()
来年の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeNow_Description" xml:space="preserve">
    <value>LocalDateTimeNow()
現時点に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeThisMonth_Description" xml:space="preserve">
    <value>LocalDateTimeThisMonth()
今月の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeThisWeek_Description" xml:space="preserve">
    <value>LocalDateTimeThisWeek()
今週の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeThisYear_Description" xml:space="preserve">
    <value>LocalDateTimeThisYear()
今年の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeToday_Description" xml:space="preserve">
    <value>LocalDateTimeToday()
今日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeTomorrow_Description" xml:space="preserve">
    <value>LocalDateTimeTomorrow()
明日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeTwoWeeksAway_Description" xml:space="preserve">
    <value>LocalDateTimeTwoWeeksAway()
再来週の最初の日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeYesterday_Description" xml:space="preserve">
    <value>LocalDateTimeYesterday()
昨日に関連する日付 / 時刻値を返します。</value>
  </data>
  <data name="EditorStringId.ColorEdit_StandardColorsCaption" xml:space="preserve">
    <value>標準の色</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Log_Description" xml:space="preserve">
    <value>Log(Value)
指定した数字の自然対数を返します。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNotNull" xml:space="preserve">
    <value>Is not null</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BitwiseXor_Description" xml:space="preserve">
    <value>2つのブール式に対して排他的論理和演算を実行、または2つの数式に対してビット単位の排他を実行します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddYears_Description" xml:space="preserve">
    <value>AddYears(DateTime, YearsCount)
特別の DateTime から、特定の年数離れた日付 / 時刻値を返します。
</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_True_Description" xml:space="preserve">
    <value>ブール式の  True 値を表します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Tanh_Description" xml:space="preserve">
    <value>Tanh(Value)
ラジアンで定義される角度の双曲線タンジェントを返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDay_Description" xml:space="preserve">
    <value>GetDay(DateTime)
定義された DateTime から日を抽出します。</value>
  </data>
  <data name="EditorStringId.FilterPanelEnableFilter" xml:space="preserve">
    <value>フィルターを有効にする</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Substring2param_Description" xml:space="preserve">
    <value>Substring(String, StartPosition)
String からサブストリングを取得します。サブストリングは StartPosition で始まります。</value>
  </data>
  <data name="EditorStringId.Apply" xml:space="preserve">
    <value>適用</value>
  </data>
  <data name="EditorStringId.ColorEdit_AutomaticButtonCaption" xml:space="preserve">
    <value>自動</value>
  </data>
  <data name="EditorStringId.FilterClauseIsEarlierThisWeek" xml:space="preserve">
    <value>Is Earlier This Week</value>
  </data>
  <data name="EditorStringId.ColorEdit_NoColorButtonCaption" xml:space="preserve">
    <value>色なし</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BitwiseOr_Description" xml:space="preserve">
    <value>最初のオペランドの各ビットを、2つめのオペランドで対応するビットと比較します。どちらかのビットが 1 である場合、対応するビットを 1 に設定します。さもなければ、対応するビットを 0 に設定します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffSecond_Description" xml:space="preserve">
    <value>DateDiffSecond(startDate, endDate)
2つの Null 非許容型の日付間の、秒の境界数を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Title" xml:space="preserve">
    <value>式エディタ</value>
  </data>
  <data name="EditorStringId.Cut" xml:space="preserve">
    <value>切り取り</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBetween" xml:space="preserve">
    <value>~の間</value>
  </data>
  <data name="EditorStringId.FilterClauseBeginsWith" xml:space="preserve">
    <value>Begins with</value>
  </data>
  <data name="EditorStringId.OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMC" xml:space="preserve">
    <value>MC</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMR" xml:space="preserve">
    <value>MR</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMS" xml:space="preserve">
    <value>MS</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMAdd" xml:space="preserve">
    <value>M+</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMSub" xml:space="preserve">
    <value>M-</value>
  </data>
  <data name="EditorStringId.CalculatorButtonBack" xml:space="preserve">
    <value>←</value>
  </data>
  <data name="EditorStringId.CalculatorButtonCancel" xml:space="preserve">
    <value>CE</value>
  </data>
  <data name="EditorStringId.CalculatorButtonClear" xml:space="preserve">
    <value>C</value>
  </data>
  <data name="EditorStringId.CalculatorButtonZero" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="EditorStringId.CalculatorButtonOne" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="EditorStringId.CalculatorButtonTwo" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="EditorStringId.CalculatorButtonThree" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="EditorStringId.CalculatorButtonFour" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="EditorStringId.CalculatorButtonFive" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSix" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSeven" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="EditorStringId.CalculatorButtonEight" xml:space="preserve">
    <value>8</value>
  </data>
  <data name="EditorStringId.CalculatorButtonNine" xml:space="preserve">
    <value>9</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSign" xml:space="preserve">
    <value>±</value>
  </data>
  <data name="EditorStringId.CalculatorButtonAdd" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSub" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMul" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="EditorStringId.CalculatorButtonDiv" xml:space="preserve">
    <value>/</value>
  </data>
  <data name="EditorStringId.CalculatorButtonFract" xml:space="preserve">
    <value>1/x</value>
  </data>
  <data name="EditorStringId.CalculatorButtonPercent" xml:space="preserve">
    <value>%</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSqrt" xml:space="preserve">
    <value>√</value>
  </data>
  <data name="EditorStringId.CalculatorButtonEqual" xml:space="preserve">
    <value>=</value>
  </data>
  <data name="EditorStringId.Today" xml:space="preserve">
    <value>今日</value>
  </data>
  <data name="EditorStringId.FilterClauseDoesNotContain" xml:space="preserve">
    <value>Does not contain</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Round2Param_Description" xml:space="preserve">
    <value>Round(Value, Precision)
与えられた値を一番近い整数または特定の小数桁数に四捨五入します。</value>
  </data>
  <data name="EditorStringId.FilterClauseGreater" xml:space="preserve">
    <value>Is greater than</value>
  </data>
  <data name="EditorStringId.PasswordBoxEditToolTipContent" xml:space="preserve">
    <value>Caps Lock が有効である場合にパスワードを正しく入力できない場合があります。パスワードを入力する前に Caps Lock を無効にしてください。</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringGroupOperatorAnd" xml:space="preserve">
    <value>と</value>
  </data>
  <data name="EditorStringId.MaskIncomplete" xml:space="preserve">
    <value>マスクは不完全です。</value>
  </data>
  <data name="EditorStringId.PasswordBoxEditToolTipHeader" xml:space="preserve">
    <value>Caps Lock が有効です</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringNotLike" xml:space="preserve">
    <value>に似ていない</value>
  </data>
  <data name="EditorStringId.No" xml:space="preserve">
    <value>いいえ</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_EndsWith_Description" xml:space="preserve">
    <value>EndsWith(String, EndString)
文字列の最後が EndString に一致する場合は True を返し、そうでない場合は False を返します。
</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorIsNull" xml:space="preserve">
    <value>は Null である</value>
  </data>
  <data name="EditorStringId.FilterClauseLess" xml:space="preserve">
    <value>Is less than</value>
  </data>
  <data name="EditorStringId.FilterClauseEquals" xml:space="preserve">
    <value>Equals</value>
  </data>
  <data name="EditorStringId.FilterClauseLike" xml:space="preserve">
    <value>Is like</value>
  </data>
  <data name="EditorStringId.FilterClauseContains" xml:space="preserve">
    <value>Contains</value>
  </data>
  <data name="EditorStringId.FilterClauseLessOrEqual" xml:space="preserve">
    <value>Is less than or equal to</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringIsNotNull" xml:space="preserve">
    <value>は Null ではない</value>
  </data>
  <data name="EditorStringId.FilterClauseNoneOf" xml:space="preserve">
    <value>Is none of</value>
  </data>
  <data name="EditorStringId.FilterClauseGreaterOrEqual" xml:space="preserve">
    <value>Is greater than or equal to</value>
  </data>
  <data name="EditorStringId.FilterClauseEndsWith" xml:space="preserve">
    <value>Ends with</value>
  </data>
  <data name="EditorStringId.FilterClauseBetweenAnd" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="EditorStringId.FilterClauseBetween" xml:space="preserve">
    <value>Is between</value>
  </data>
  <data name="EditorStringId.FilterClauseNotLike" xml:space="preserve">
    <value>Is not like</value>
  </data>
  <data name="EditorStringId.FilterClauseNotBetween" xml:space="preserve">
    <value>Is not between</value>
  </data>
  <data name="EditorStringId.ImageEdit_InvalidFormatMessage" xml:space="preserve">
    <value>画像形式が正しくありません。</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringGroupOperatorOr" xml:space="preserve">
    <value>または</value>
  </data>
  <data name="EditorStringId.FilterClauseDoesNotEqual" xml:space="preserve">
    <value>Does not equal</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Functions_Text" xml:space="preserve">
    <value>関数</value>
  </data>
  <data name="EditorStringId.Yes" xml:space="preserve">
    <value>はい</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringIn" xml:space="preserve">
    <value>の中</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorNot" xml:space="preserve">
    <value>ではない</value>
  </data>
  <data name="EditorStringId.WaitIndicatorText" xml:space="preserve">
    <value>読み込み中…</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_StartsWith_Description" xml:space="preserve">
    <value>StartsWith(String, StartString)
文字列の始めが StartString に一致する場合は True を返し、そうでない場合は False を返します。</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLike" xml:space="preserve">
    <value>に似ている</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Contains_Description" xml:space="preserve">
    <value>Contains(String, SubString)
SubString が文字列内にある場合は True を返し、そうでない場合は False を返します。
</value>
  </data>
  <data name="EditorStringId.FilterClauseAnyOf" xml:space="preserve">
    <value>Is any of</value>
  </data>
  <data name="EditorStringId.OutOfRange" xml:space="preserve">
    <value>その値は範囲外です。</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorBitwiseAnd" xml:space="preserve">
    <value>&amp;</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorBitwiseOr" xml:space="preserve">
    <value>|</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorBitwiseXor" xml:space="preserve">
    <value>^</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorDivide" xml:space="preserve">
    <value>/</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorEqual" xml:space="preserve">
    <value>=</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorGreater" xml:space="preserve">
    <value>&gt;</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorGreaterOrEqual" xml:space="preserve">
    <value>&gt;=</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLess" xml:space="preserve">
    <value>&lt;</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLessOrEqual" xml:space="preserve">
    <value>&lt;=</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorMinus" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorModulo" xml:space="preserve">
    <value>%</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorMultiply" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorNotEqual" xml:space="preserve">
    <value>&lt;&gt;</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorPlus" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorBitwiseNot" xml:space="preserve">
    <value>~</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorMinus" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorPlus" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="EditorStringId.CantModifySelectedDates" xml:space="preserve">
    <value>複数選択モードのみで SelectedDates コレクションを変更できます。単一選択モードでの場合 FocusedDate を使用してください。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToFloat_Description" xml:space="preserve">
    <value>ToFloat(Value)
値を等価の32ビット符号付き単精度浮動小数点数に変換します。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNullOrEmpty" xml:space="preserve">
    <value>Is blank</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToInt_Description" xml:space="preserve">
    <value>ToInt(Value)
値を等価の32ビット符号付き整数に変換します。</value>
  </data>
  <data name="EditorStringId.SetNullValue" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToDouble_Description" xml:space="preserve">
    <value>ToDouble(Value)
値を等価の64ビット符号付き倍精度浮動小数点数に変換します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToDecimal_Description" xml:space="preserve">
    <value>ToDecimal(Value)
値を等価の小数に変換します。</value>
  </data>
  <data name="EditorStringId.LookUpAddNew" xml:space="preserve">
    <value>新規追加</value>
  </data>
  <data name="EditorStringId.Of" xml:space="preserve">
    <value>/ {0}</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToLong_Description" xml:space="preserve">
    <value>ToLong(Value)
値を等価の64ビット符号付き整数に変換します。</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNotNullOrEmpty" xml:space="preserve">
    <value>Is not blank</value>
  </data>
  <data name="EditorStringId.Page" xml:space="preserve">
    <value>ページ</value>
  </data>
  <data name="EditorStringId.EmptyItem" xml:space="preserve">
    <value>（なし）</value>
  </data>
  <data name="EditorStringId.LookUpFind" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="EditorStringId.FilterGroupAnd" xml:space="preserve">
    <value>And</value>
  </data>
  <data name="EditorStringId.FilterGroupOr" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="EditorStringId.FilterGroupNotAnd" xml:space="preserve">
    <value>NotAnd</value>
  </data>
  <data name="EditorStringId.FilterGroupNotOr" xml:space="preserve">
    <value>NotOr</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Black" xml:space="preserve">
    <value>黒</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_White" xml:space="preserve">
    <value>白</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_DarkRed" xml:space="preserve">
    <value>濃い赤</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Red" xml:space="preserve">
    <value>赤</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Orange" xml:space="preserve">
    <value>オレンジ</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Yellow" xml:space="preserve">
    <value>黄色</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_LightGreen" xml:space="preserve">
    <value>薄い緑</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Green" xml:space="preserve">
    <value>緑</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_LightBlue" xml:space="preserve">
    <value>薄い青</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Blue" xml:space="preserve">
    <value>青</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_DarkBlue" xml:space="preserve">
    <value>濃い青</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Purple" xml:space="preserve">
    <value>紫</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsThisMonth_Description" xml:space="preserve">
    <value>IsThisMonth(DateTime)
指定の日付が今月に含まれる場合 True を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsThisWeek_Description" xml:space="preserve">
    <value>IsThisWeek(DateTime)
指定の日付が今週に含まれる場合 True を返します。</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsThisYear_Description" xml:space="preserve">
    <value>IsThisYear(DateTime)
指定の日付が今年に含まれる場合 True を返します。</value>
  </data>
  <data name="EditorStringId.ConfirmationDialogCaption" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="EditorStringId.ConfirmationDialogMessage" xml:space="preserve">
    <value>The font "{0}" is not available on your system. Do you want to use it anyway?</value>
  </data>
  <data name="EditorStringId.CheckChecked" xml:space="preserve">
    <value>チェックあり</value>
  </data>
  <data name="EditorStringId.CheckIndeterminate" xml:space="preserve">
    <value>不確定</value>
  </data>
  <data name="EditorStringId.CheckUnchecked" xml:space="preserve">
    <value>チェックなし</value>
  </data>
  <data name="EditorStringId.DataTypeCharExample" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="EditorStringId.DataTypeStringExample" xml:space="preserve">
    <value>ABCXYZ</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeCurrency" xml:space="preserve">
    <value>通貨</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeCustom" xml:space="preserve">
    <value>カスタム</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeDatetime" xml:space="preserve">
    <value>日付</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeDefault" xml:space="preserve">
    <value>デフォルト</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeNumber" xml:space="preserve">
    <value>数値</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypePercent" xml:space="preserve">
    <value>パーセンテージ</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeSpecial" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="EditorStringId.DisplayFormatHelperWrongDisplayFormatValue" xml:space="preserve">
    <value>テキストの表示形式が無効です。</value>
  </data>
  <data name="EditorStringId.DisplayFormatNullValue" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlDisplayFormatText" xml:space="preserve">
    <value>テキストの表示形式:</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlExample" xml:space="preserve">
    <value>例:</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlPrefix" xml:space="preserve">
    <value>プレフィックス:</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlSuffix" xml:space="preserve">
    <value>サフィックス:</value>
  </data>
  <data name="EditorStringId.LookUpClose" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="EditorStringId.LookUpSearch" xml:space="preserve">
    <value>検索</value>
  </data>
</root>