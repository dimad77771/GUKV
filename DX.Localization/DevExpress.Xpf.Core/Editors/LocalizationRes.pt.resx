<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="EditorStringId.Cancel" xml:space="preserve">
		<value>Cancelar</value>
	</data>
	<data name="EditorStringId.Apply" xml:space="preserve">
		<value>Aplicar</value>
	</data>
	<data name="EditorStringId.CalculatorDivisionByZeroError" xml:space="preserve">
		<value>Não é possível dividir por zero</value>
	</data>
	<data name="EditorStringId.CalculatorError" xml:space="preserve">
		<value>Erro</value>
	</data>
	<data name="EditorStringId.CalculatorInvalidInputError" xml:space="preserve">
		<value>Entrada inválida</value>
	</data>
	<data name="EditorStringId.Clear" xml:space="preserve">
		<value>Apagar</value>
	</data>
	<data name="EditorStringId.Today" xml:space="preserve">
		<value>Hoje</value>
	</data>
	<data name="EditorStringId.OK" xml:space="preserve">
		<value>OK</value>
	</data>
	<data name="EditorStringId.Yes" xml:space="preserve">
		<value>Sim</value>
	</data>
	<data name="EditorStringId.No" xml:space="preserve">
		<value>Não</value>
	</data>
	<data name="EditorStringId.SelectAll" xml:space="preserve">
		<value>(Seleccionar tudo)</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBetween" xml:space="preserve">
		<value>Entre</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringIn" xml:space="preserve">
		<value>Em</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringIsNotNull" xml:space="preserve">
		<value>Não é nulo</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringNotLike" xml:space="preserve">
		<value>Não é parecido com</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorBitwiseAnd" xml:space="preserve">
		<value>&amp;</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorBitwiseOr" xml:space="preserve">
		<value>|</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorBitwiseXor" xml:space="preserve">
		<value>^</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorDivide" xml:space="preserve">
		<value>/</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorEqual" xml:space="preserve">
		<value>=</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorGreater" xml:space="preserve">
		<value>&gt;</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorGreaterOrEqual" xml:space="preserve">
		<value>&gt;=</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLess" xml:space="preserve">
		<value>&lt;</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLessOrEqual" xml:space="preserve">
		<value>&lt;=</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLike" xml:space="preserve">
		<value>Parecido</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorMinus" xml:space="preserve">
		<value>-</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorModulo" xml:space="preserve">
		<value>%</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorMultiply" xml:space="preserve">
		<value>*</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorNotEqual" xml:space="preserve">
		<value>&lt;&gt;</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringBinaryOperatorPlus" xml:space="preserve">
		<value>+</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringUnaryOperatorBitwiseNot" xml:space="preserve">
		<value>~</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringUnaryOperatorIsNull" xml:space="preserve">
		<value>Vazio</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringUnaryOperatorMinus" xml:space="preserve">
		<value>-</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringUnaryOperatorNot" xml:space="preserve">
		<value>Não</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringUnaryOperatorPlus" xml:space="preserve">
		<value>+</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringGroupOperatorAnd" xml:space="preserve">
		<value>E</value>
	</data>
	<data name="EditorStringId.FilterCriteriaToStringGroupOperatorOr" xml:space="preserve">
		<value>Ou</value>
	</data>
	<data name="EditorStringId.CaptionError" xml:space="preserve">
		<value>Erro</value>
	</data>
	<data name="EditorStringId.FilterCriteriaInvalidExpressionEx" xml:space="preserve">
		<value>A expressão é inválida</value>
	</data>
	<data name="EditorStringId.FilterGroupAnd" xml:space="preserve">
		<value>E</value>
	</data>
	<data name="EditorStringId.FilterGroupOr" xml:space="preserve">
		<value>Ou</value>
	</data>
	<data name="EditorStringId.FilterGroupNotAnd" xml:space="preserve">
		<value>E não</value>
	</data>
	<data name="EditorStringId.FilterGroupNotOr" xml:space="preserve">
		<value>Ou não</value>
	</data>
	<data name="EditorStringId.FilterGroupAddCondition" xml:space="preserve">
		<value>Adicionar Condição</value>
	</data>
	<data name="EditorStringId.FilterGroupAddGroup" xml:space="preserve">
		<value>Adicionar Grupo</value>
	</data>
	<data name="EditorStringId.FilterGroupRemoveGroup" xml:space="preserve">
		<value>Remover grupo</value>
	</data>
	<data name="EditorStringId.FilterGroupClearAll" xml:space="preserve">
		<value>Apagar tudo</value>
	</data>
	<data name="EditorStringId.FilterClauseIsNotNull" xml:space="preserve">
		<value>Não é nulo</value>
	</data>
	<data name="EditorStringId.FilterClauseIsNull" xml:space="preserve">
		<value>É nulo</value>
	</data>
	<data name="EditorStringId.FilterClauseLess" xml:space="preserve">
		<value>É menor que</value>
	</data>
	<data name="EditorStringId.FilterClauseLessOrEqual" xml:space="preserve">
		<value>É menor ou igual que</value>
	</data>
	<data name="EditorStringId.FilterClauseLike" xml:space="preserve">
		<value>É parecido</value>
	</data>
	<data name="EditorStringId.FilterClauseNoneOf" xml:space="preserve">
		<value>Não é nenhum de</value>
	</data>
	<data name="EditorStringId.FilterClauseNotBetween" xml:space="preserve">
		<value>Não está entre</value>
	</data>
	<data name="EditorStringId.FilterClauseNotLike" xml:space="preserve">
		<value>Não é parecido com</value>
	</data>
	<data name="EditorStringId.FilterEmptyValueText" xml:space="preserve">
		<value>&lt;digite um valor&gt;</value>
	</data>
	<data name="EditorStringId.FilterClauseIsNullOrEmpty" xml:space="preserve">
		<value>É vazio</value>
	</data>
	<data name="EditorStringId.FilterClauseIsNotNullOrEmpty" xml:space="preserve">
		<value>Não é vazio</value>
	</data>
	<data name="EditorStringId.FilterClauseIsLaterThisYear" xml:space="preserve">
		<value>É no final deste ano</value>
	</data>
	<data name="EditorStringId.FilterClauseIsNextWeek" xml:space="preserve">
		<value>É a próxima semana</value>
	</data>
	<data name="EditorStringId.FilterClauseIsTomorrow" xml:space="preserve">
		<value>É Amanhã</value>
	</data>
	<data name="EditorStringId.FilterClauseIsToday" xml:space="preserve">
		<value>É Hoje</value>
	</data>
	<data name="EditorStringId.FilterClauseIsYesterday" xml:space="preserve">
		<value>Foi Ontem</value>
	</data>
	<data name="EditorStringId.FilterClauseIsPriorThisYear" xml:space="preserve">
		<value>Antes deste ano</value>
	</data>
	<data name="EditorStringId.FilterDateTimeOperatorMenuCaption" xml:space="preserve">
		<value>Operadores Data Hora</value>
	</data>
	<data name="EditorStringId.FilterEditorChecked" xml:space="preserve">
		<value>Marcado</value>
	</data>
	<data name="EditorStringId.FilterEditorUnchecked" xml:space="preserve">
		<value>Desmarcado</value>
	</data>
	<data name="EditorStringId.FilterToolTipNodeAction" xml:space="preserve">
		<value>Acções</value>
	</data>
	<data name="EditorStringId.FilterToolTipNodeAdd" xml:space="preserve">
		<value>Adiciona uma nova condição para este grupo</value>
	</data>
	<data name="EditorStringId.FilterToolTipNodeRemove" xml:space="preserve">
		<value>Remover condição</value>
	</data>
	<data name="EditorStringId.FilterToolTipElementAdd" xml:space="preserve">
		<value>Adicionar um novo item na lista</value>
	</data>
	<data name="EditorStringId.FilterToolTipKeysAdd" xml:space="preserve">
		<value>(Utilize a tecla Inserir ou Somar)</value>
	</data>
	<data name="EditorStringId.FilterToolTipKeysRemove" xml:space="preserve">
		<value>(Utilize a Delete ou Subtrair)</value>
	</data>
	<data name="EditorStringId.FilterPanelEditFilter" xml:space="preserve">
		<value>Editar filtro</value>
	</data>
	<data name="EditorStringId.FilterPanelClearFilter" xml:space="preserve">
		<value>Apagar filtro</value>
	</data>
	<data name="EditorStringId.FilterPanelEnableFilter" xml:space="preserve">
		<value>Habilitar filtro</value>
	</data>
	<data name="EditorStringId.FilterPanelDisableFilter" xml:space="preserve">
		<value>Desabilitar filtro</value>
	</data>
	<data name="EditorStringId.ColorEdit_AutomaticButtonCaption" xml:space="preserve">
		<value>Automático</value>
	</data>
	<data name="EditorStringId.ColorEdit_ColorChooserWindowTitle" xml:space="preserve">
		<value>Cores</value>
	</data>
	<data name="EditorStringId.ColorEdit_MoreColorsButtonCaption" xml:space="preserve">
		<value>Mais Cores...</value>
	</data>
	<data name="EditorStringId.ColorEdit_NoColorButtonCaption" xml:space="preserve">
		<value>Sem cor</value>
	</data>
	<data name="EditorStringId.ImageEdit_InvalidFormatMessage" xml:space="preserve">
		<value>Formato inválido</value>
	</data>
	<data name="EditorStringId.Open" xml:space="preserve">
		<value>Abrir</value>
	</data>
	<data name="EditorStringId.Paste" xml:space="preserve">
		<value>Colar</value>
	</data>
	<data name="EditorStringId.Save" xml:space="preserve">
		<value>Guardar</value>
	</data>
	<data name="EditorStringId.OutOfRange" xml:space="preserve">
		<value>Valor fora do intervalo</value>
	</data>
	<data name="EditorStringId.MaskIncomplete" xml:space="preserve">
		<value>Mascará incompleta</value>
	</data>
	<data name="EditorStringId.PasswordBoxEditToolTipHeader" xml:space="preserve">
		<value>A tecla Caps Lock está ligada</value>
	</data>
	<data name="EditorStringId.Page" xml:space="preserve">
		<value>Página</value>
	</data>
	<data name="EditorStringId.Of" xml:space="preserve">
		<value>de {0}</value>
	</data>
	<data name="EditorStringId.WaitIndicatorText" xml:space="preserve">
		<value>A carregar...</value>
	</data>
	<data name="EditorStringId.LookUpFind" xml:space="preserve">
		<value>Procurar</value>
	</data>
	<data name="EditorStringId.LookUpAddNew" xml:space="preserve">
		<value>Adicionar nova</value>
	</data>
	<data name="EditorStringId.SetNullValue" xml:space="preserve">
		<value>Apagar</value>
	</data>
	<data name="EditorStringId.FilterCriteriaInvalidExpression" xml:space="preserve">
		<value>A expressão contem simbolos inválidos (linha {0}, caracter {1}).</value>
	</data>
	<data name="EditorStringId.ExpressionEditor_Title" xml:space="preserve">
		<value>Editor de expressões</value>
	</data>
	<data name="EditorStringId.FilterClauseAnyOf" xml:space="preserve">
		<value>É qualquer um dos</value>
	</data>
	<data name="EditorStringId.FilterClauseBeginsWith" xml:space="preserve">
		<value>Começa com</value>
	</data>
	<data name="EditorStringId.FilterClauseBetween" xml:space="preserve">
		<value>Está entre</value>
	</data>
	<data name="EditorStringId.FilterClauseBetweenAnd" xml:space="preserve">
		<value>e</value>
	</data>
	<data name="EditorStringId.FilterClauseContains" xml:space="preserve">
		<value>Contêm</value>
	</data>
	<data name="EditorStringId.FilterClauseEndsWith" xml:space="preserve">
		<value>Acaba com</value>
	</data>
	<data name="EditorStringId.FilterClauseEquals" xml:space="preserve">
		<value>Igual</value>
	</data>
	<data name="EditorStringId.FilterClauseGreater" xml:space="preserve">
		<value>É maior que</value>
	</data>
	<data name="EditorStringId.FilterClauseGreaterOrEqual" xml:space="preserve">
		<value>É maior ou igual a</value>
	</data>
	<data name="EditorStringId.FilterClauseDoesNotContain" xml:space="preserve">
		<value>Não contêm</value>
	</data>
	<data name="EditorStringId.FilterClauseDoesNotEqual" xml:space="preserve">
		<value>Não é igual</value>
	</data>
	<data name="EditorStringId.FilterClauseIsBeyondThisYear" xml:space="preserve">
		<value>É após este ano</value>
	</data>
	<data name="EditorStringId.FilterClauseIsLaterThisMonth" xml:space="preserve">
		<value>É no final deste mês</value>
	</data>
	<data name="EditorStringId.FilterClauseIsLaterThisWeek" xml:space="preserve">
		<value>É no final desta semana</value>
	</data>
	<data name="EditorStringId.FilterClauseIsEarlierThisWeek" xml:space="preserve">
		<value>É no início desta semana</value>
	</data>
	<data name="EditorStringId.FilterClauseIsLastWeek" xml:space="preserve">
		<value>É a última semana</value>
	</data>
	<data name="EditorStringId.FilterClauseIsEarlierThisMonth" xml:space="preserve">
		<value>É no início deste mês</value>
	</data>
	<data name="EditorStringId.FilterClauseIsEarlierThisYear" xml:space="preserve">
		<value>É no início deste ano</value>
	</data>
	<data name="EditorStringId.FilterToolTipValueType" xml:space="preserve">
		<value>Compara com um valor / valor de outro campo</value>
	</data>
	<data name="EditorStringId.ColorEdit_RecentColorsCaption" xml:space="preserve">
		<value>Cores recentes</value>
	</data>
	<data name="EditorStringId.ColorEdit_ThemeColorsCaption" xml:space="preserve">
		<value>Cores do tema</value>
	</data>
	<data name="EditorStringId.ColorEdit_StandardColorsCaption" xml:space="preserve">
		<value>Cores padrão</value>
	</data>
	<data name="EditorStringId.Copy" xml:space="preserve">
		<value>Copiar</value>
	</data>
	<data name="EditorStringId.Cut" xml:space="preserve">
		<value>Cortar</value>
	</data>
	<data name="EditorStringId.ImageEdit_OpenFileFilter" xml:space="preserve">
		<value>Ficheiros de Imagens(*.BMP;*.JPG;*.GIF;*.PNG)|*.BMP;*.JPG;*.GIF;*.PNG|All files (*.*)|*.*</value>
	</data>
	<data name="EditorStringId.ImageEdit_OpenFileFilter_SL" xml:space="preserve">
		<value>Ficheiros de Imagens(*.JPG;*.PNG)|*.JPG;*.PNG|All files (*.*)|*.*</value>
	</data>
</root>